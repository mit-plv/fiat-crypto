Require Import Crypto.Language.Pre.
Require Import Crypto.Language.Language.
Require Import Crypto.Language.IdentifierParameters.
Require Import Crypto.Language.IdentifiersBasicGenerate.

Module Compilers.
  Import IdentifiersBasicLibrary.Compilers.Basic.
  Import IdentifiersBasicGenerate.Compilers.Basic.

  Local Unset Decidable Equality Schemes.
  Local Unset Boolean Equality Schemes.

  Section print_base.
    Import Coq.ZArith.ZArith Crypto.Util.ZRange.
    (*Goal True. PrintBase.print_base base_type_list_named. Abort.*)
  End print_base.
  Inductive base : Set :=
  | Z : base
  | bool : base
  | nat : base
  | zrange : base
  .

  Section print_ident.
    Local Set Printing All.
    Local Set Printing Width 10000.
    (*Goal True. PrintIdent.print_ident base base_type_list_named all_ident_named_interped. Abort.*)
  End print_ident.
  Inductive ident : (forall t : Compilers.type.type (Compilers.base.type.type base), Type) :=
  | ident_Literal : (forall (t : base) (H : match t as b return Type with
                                            | Z => BinNums.Z
                                            | bool => Datatypes.bool
                                            | nat => Datatypes.nat
                                            | zrange => ZRange.zrange
                                            end), ident (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base t)))
  | ident_Nat_succ : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat))))
  | ident_Nat_pred : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat))))
  | ident_Nat_max : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)))))
  | ident_Nat_mul : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)))))
  | ident_Nat_add : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)))))
  | ident_Nat_sub : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)))))
  | ident_Nat_eqb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)))))
  | ident_nil : (forall t : Compilers.base.type.type base, ident (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)))
  | ident_cons : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)))))
  | ident_tt : (ident (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)))
  | ident_pair : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base t t0)))))
  | ident_fst : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base t t0)) (@Compilers.type.base (Compilers.base.type.type base) t)))
  | ident_snd : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base t t0)) (@Compilers.type.base (Compilers.base.type.type base) t0)))
  | ident_prod_rect : (forall t t0 t1 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base t t0)) (@Compilers.type.base (Compilers.base.type.type base) t1))))
  | ident_bool_rect : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)) (@Compilers.type.base (Compilers.base.type.type base) t)))))
  | ident_nat_rect : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) t)))))
  | ident_eager_nat_rect : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) t)))))
  | ident_nat_rect_arrow : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0))))))
  | ident_eager_nat_rect_arrow : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0))))))
  | ident_list_rect : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t0)))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) t0)))))
  | ident_eager_list_rect : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t0)))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) t0)))))
  | ident_list_rect_arrow : (forall t t0 t1 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1))))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1))))))
  | ident_eager_list_rect_arrow : (forall t t0 t1 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1))))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1))))))
  | ident_list_case : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) t0))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) t0)))))
  | ident_List_length : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat))))
  | ident_List_seq : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base (@Compilers.base.type.type_base base nat))))))
  | ident_List_firstn : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)))))
  | ident_List_skipn : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)))))
  | ident_List_repeat : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)))))
  | ident_List_combine : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t0)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base (@Compilers.base.type.prod base t t0))))))
  | ident_List_map : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t0)))))
  | ident_List_app : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)))))
  | ident_List_rev : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t))))
  | ident_List_flat_map : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t0))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t0)))))
  | ident_List_partition : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.list base t) (@Compilers.base.type.list base t))))))
  | ident_List_fold_right : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t0)) (@Compilers.type.base (Compilers.base.type.type base) t)))))
  | ident_List_update_nth : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t))))))
  | ident_List_nth_default : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) t)))))
  | ident_eager_List_nth_default : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) t)))))
  | ident_Z_add : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_mul : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_pow : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_sub : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_opp : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_Z_div : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_modulo : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_eqb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)))))
  | ident_Z_leb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)))))
  | ident_Z_ltb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)))))
  | ident_Z_geb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)))))
  | ident_Z_gtb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)))))
  | ident_Z_log2 : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_Z_log2_up : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_Z_of_nat : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_Z_to_nat : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat))))
  | ident_Z_shiftr : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_shiftl : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_land : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_lor : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_min : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_max : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_mul_split : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))))
  | ident_Z_add_get_carry : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))))
  | ident_Z_add_with_carry : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))))
  | ident_Z_add_with_get_carry : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z))))))))
  | ident_Z_sub_get_borrow : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))))
  | ident_Z_sub_with_get_borrow : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z))))))))
  | ident_Z_zselect : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))))
  | ident_Z_add_modulo : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))))
  | ident_Z_truncating_shiftl : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))))
  | ident_Z_bneg : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_Z_lnot_modulo : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_rshi : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))))
  | ident_Z_cc_m : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_combine_at_bitwidth : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))))
  | ident_Z_cast : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base zrange)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_cast2 : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base zrange) (@Compilers.base.type.type_base base zrange))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z))))))
  | ident_Some : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.option base t))))
  | ident_None : (forall t : Compilers.base.type.type base, ident (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.option base t)))
  | ident_option_rect : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.option base t)) (@Compilers.type.base (Compilers.base.type.type base) t0)))))
  | ident_Build_zrange : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base zrange)))))
  | ident_zrange_rect : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) t))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base zrange)) (@Compilers.type.base (Compilers.base.type.type base) t))))
  | ident_fancy_add : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))
  | ident_fancy_addc : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))
  | ident_fancy_sub : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))
  | ident_fancy_subb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))
  | ident_fancy_mulll : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_mullh : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_mulhl : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_mulhh : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_rshi : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_selc : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.type_base base Z))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_selm : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_sell : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.type_base base Z))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_addm : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.type_base base Z))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  .
  Inductive pattern_ident : (forall t : Compilers.type.type (Compilers.pattern.base.type.type base), Type) :=
  | pattern_ident_Literal : (forall t : base, pattern_ident (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base t)))
  | pattern_ident_Nat_succ : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat))))
  | pattern_ident_Nat_pred : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat))))
  | pattern_ident_Nat_max : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)))))
  | pattern_ident_Nat_mul : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)))))
  | pattern_ident_Nat_add : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)))))
  | pattern_ident_Nat_sub : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)))))
  | pattern_ident_Nat_eqb : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base bool)))))
  | pattern_ident_nil : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)))
  | pattern_ident_cons : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)))))
  | pattern_ident_tt : (pattern_ident (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.unit base)))
  | pattern_ident_pair : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base t t0)))))
  | pattern_ident_fst : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base t t0)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t)))
  | pattern_ident_snd : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base t t0)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)))
  | pattern_ident_prod_rect : (forall t t0 t1 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.base (Compilers.pattern.base.type.type base) t1))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base t t0)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t1))))
  | pattern_ident_bool_rect : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.unit base)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.unit base)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base bool)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t)))))
  | pattern_ident_nat_rect : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.unit base)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t)))))
  | pattern_ident_eager_nat_rect : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.unit base)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t)))))
  | pattern_ident_nat_rect_arrow : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0))))))
  | pattern_ident_eager_nat_rect_arrow : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0))))))
  | pattern_ident_list_rect : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.unit base)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)))))
  | pattern_ident_eager_list_rect : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.unit base)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)))))
  | pattern_ident_list_rect_arrow : (forall t t0 t1 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.base (Compilers.pattern.base.type.type base) t1)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.base (Compilers.pattern.base.type.type base) t1)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.base (Compilers.pattern.base.type.type base) t1))))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.base (Compilers.pattern.base.type.type base) t1))))))
  | pattern_ident_eager_list_rect_arrow : (forall t t0 t1 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.base (Compilers.pattern.base.type.type base) t1)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.base (Compilers.pattern.base.type.type base) t1)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.base (Compilers.pattern.base.type.type base) t1))))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.base (Compilers.pattern.base.type.type base) t1))))))
  | pattern_ident_list_case : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.unit base)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)))))
  | pattern_ident_List_length : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat))))
  | pattern_ident_List_seq : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base (@Compilers.pattern.base.type.type_base base nat))))))
  | pattern_ident_List_firstn : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)))))
  | pattern_ident_List_skipn : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)))))
  | pattern_ident_List_repeat : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)))))
  | pattern_ident_List_combine : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t0)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base (@Compilers.pattern.base.type.prod base t t0))))))
  | pattern_ident_List_map : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t0)))))
  | pattern_ident_List_app : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)))))
  | pattern_ident_List_rev : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t))))
  | pattern_ident_List_flat_map : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t0))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t0)))))
  | pattern_ident_List_partition : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base bool))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.list base t) (@Compilers.pattern.base.type.list base t))))))
  | pattern_ident_List_fold_right : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t0)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t)))))
  | pattern_ident_List_update_nth : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t))))))
  | pattern_ident_List_nth_default : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t)))))
  | pattern_ident_eager_List_nth_default : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.list base t)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t)))))
  | pattern_ident_Z_add : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_mul : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_pow : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_sub : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_opp : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_Z_div : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_modulo : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_eqb : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base bool)))))
  | pattern_ident_Z_leb : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base bool)))))
  | pattern_ident_Z_ltb : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base bool)))))
  | pattern_ident_Z_geb : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base bool)))))
  | pattern_ident_Z_gtb : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base bool)))))
  | pattern_ident_Z_log2 : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_Z_log2_up : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_Z_of_nat : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_Z_to_nat : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base nat))))
  | pattern_ident_Z_shiftr : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_shiftl : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_land : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_lor : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_min : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_max : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_mul_split : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))))))
  | pattern_ident_Z_add_get_carry : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))))))
  | pattern_ident_Z_add_with_carry : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))))
  | pattern_ident_Z_add_with_get_carry : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z))))))))
  | pattern_ident_Z_sub_get_borrow : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))))))
  | pattern_ident_Z_sub_with_get_borrow : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z))))))))
  | pattern_ident_Z_zselect : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))))
  | pattern_ident_Z_add_modulo : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))))
  | pattern_ident_Z_truncating_shiftl : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))))
  | pattern_ident_Z_bneg : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_Z_lnot_modulo : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_rshi : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))))
  | pattern_ident_Z_cc_m : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_combine_at_bitwidth : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))))
  | pattern_ident_Z_cast : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base zrange)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_Z_cast2 : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base zrange) (@Compilers.pattern.base.type.type_base base zrange))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z))))))
  | pattern_ident_Some : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.option base t))))
  | pattern_ident_None : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.option base t)))
  | pattern_ident_option_rect : (forall t t0 : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) t) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.unit base)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.option base t)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t0)))))
  | pattern_ident_Build_zrange : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base zrange)))))
  | pattern_ident_zrange_rect : (forall t : Compilers.pattern.base.type.type base, pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t))) (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base zrange)) (@Compilers.type.base (Compilers.pattern.base.type.type base) t))))
  | pattern_ident_fancy_add : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_fancy_addc : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.pattern.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_fancy_sub : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_fancy_subb : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.pattern.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))))
  | pattern_ident_fancy_mulll : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_fancy_mullh : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_fancy_mulhl : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_fancy_mulhh : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_fancy_rshi : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_fancy_selc : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.pattern.base.type.type_base base Z))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_fancy_selm : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.pattern.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_fancy_sell : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.pattern.base.type.type_base base Z))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  | pattern_ident_fancy_addm : (pattern_ident (@Compilers.type.arrow (Compilers.pattern.base.type.type base) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.prod base (@Compilers.pattern.base.type.type_base base Z) (@Compilers.pattern.base.type.type_base base Z)) (@Compilers.pattern.base.type.type_base base Z))) (@Compilers.type.base (Compilers.pattern.base.type.type base) (@Compilers.pattern.base.type.type_base base Z))))
  .
  Inductive raw_ident : Set :=
  | raw_ident_Literal : raw_ident
  | raw_ident_Nat_succ : raw_ident
  | raw_ident_Nat_pred : raw_ident
  | raw_ident_Nat_max : raw_ident
  | raw_ident_Nat_mul : raw_ident
  | raw_ident_Nat_add : raw_ident
  | raw_ident_Nat_sub : raw_ident
  | raw_ident_Nat_eqb : raw_ident
  | raw_ident_nil : raw_ident
  | raw_ident_cons : raw_ident
  | raw_ident_tt : raw_ident
  | raw_ident_pair : raw_ident
  | raw_ident_fst : raw_ident
  | raw_ident_snd : raw_ident
  | raw_ident_prod_rect : raw_ident
  | raw_ident_bool_rect : raw_ident
  | raw_ident_nat_rect : raw_ident
  | raw_ident_eager_nat_rect : raw_ident
  | raw_ident_nat_rect_arrow : raw_ident
  | raw_ident_eager_nat_rect_arrow : raw_ident
  | raw_ident_list_rect : raw_ident
  | raw_ident_eager_list_rect : raw_ident
  | raw_ident_list_rect_arrow : raw_ident
  | raw_ident_eager_list_rect_arrow : raw_ident
  | raw_ident_list_case : raw_ident
  | raw_ident_List_length : raw_ident
  | raw_ident_List_seq : raw_ident
  | raw_ident_List_firstn : raw_ident
  | raw_ident_List_skipn : raw_ident
  | raw_ident_List_repeat : raw_ident
  | raw_ident_List_combine : raw_ident
  | raw_ident_List_map : raw_ident
  | raw_ident_List_app : raw_ident
  | raw_ident_List_rev : raw_ident
  | raw_ident_List_flat_map : raw_ident
  | raw_ident_List_partition : raw_ident
  | raw_ident_List_fold_right : raw_ident
  | raw_ident_List_update_nth : raw_ident
  | raw_ident_List_nth_default : raw_ident
  | raw_ident_eager_List_nth_default : raw_ident
  | raw_ident_Z_add : raw_ident
  | raw_ident_Z_mul : raw_ident
  | raw_ident_Z_pow : raw_ident
  | raw_ident_Z_sub : raw_ident
  | raw_ident_Z_opp : raw_ident
  | raw_ident_Z_div : raw_ident
  | raw_ident_Z_modulo : raw_ident
  | raw_ident_Z_eqb : raw_ident
  | raw_ident_Z_leb : raw_ident
  | raw_ident_Z_ltb : raw_ident
  | raw_ident_Z_geb : raw_ident
  | raw_ident_Z_gtb : raw_ident
  | raw_ident_Z_log2 : raw_ident
  | raw_ident_Z_log2_up : raw_ident
  | raw_ident_Z_of_nat : raw_ident
  | raw_ident_Z_to_nat : raw_ident
  | raw_ident_Z_shiftr : raw_ident
  | raw_ident_Z_shiftl : raw_ident
  | raw_ident_Z_land : raw_ident
  | raw_ident_Z_lor : raw_ident
  | raw_ident_Z_min : raw_ident
  | raw_ident_Z_max : raw_ident
  | raw_ident_Z_mul_split : raw_ident
  | raw_ident_Z_add_get_carry : raw_ident
  | raw_ident_Z_add_with_carry : raw_ident
  | raw_ident_Z_add_with_get_carry : raw_ident
  | raw_ident_Z_sub_get_borrow : raw_ident
  | raw_ident_Z_sub_with_get_borrow : raw_ident
  | raw_ident_Z_zselect : raw_ident
  | raw_ident_Z_add_modulo : raw_ident
  | raw_ident_Z_truncating_shiftl : raw_ident
  | raw_ident_Z_bneg : raw_ident
  | raw_ident_Z_lnot_modulo : raw_ident
  | raw_ident_Z_rshi : raw_ident
  | raw_ident_Z_cc_m : raw_ident
  | raw_ident_Z_combine_at_bitwidth : raw_ident
  | raw_ident_Z_cast : raw_ident
  | raw_ident_Z_cast2 : raw_ident
  | raw_ident_Some : raw_ident
  | raw_ident_None : raw_ident
  | raw_ident_option_rect : raw_ident
  | raw_ident_Build_zrange : raw_ident
  | raw_ident_zrange_rect : raw_ident
  | raw_ident_fancy_add : raw_ident
  | raw_ident_fancy_addc : raw_ident
  | raw_ident_fancy_sub : raw_ident
  | raw_ident_fancy_subb : raw_ident
  | raw_ident_fancy_mulll : raw_ident
  | raw_ident_fancy_mullh : raw_ident
  | raw_ident_fancy_mulhl : raw_ident
  | raw_ident_fancy_mulhh : raw_ident
  | raw_ident_fancy_rshi : raw_ident
  | raw_ident_fancy_selc : raw_ident
  | raw_ident_fancy_selm : raw_ident
  | raw_ident_fancy_sell : raw_ident
  | raw_ident_fancy_addm : raw_ident
  .

  Definition package : GoalType.package.
  Proof. Tactic.make_package base ident base_type_list_named var_like_idents all_ident_named_interped. Defined.

  Global Strategy -1000 [base_interp ident_interp].
End Compilers.
