Require Import Crypto.Language.Pre.
Require Import Crypto.Language.Language.
Require Import Crypto.Language.IdentifierParameters.
Require Import Crypto.Language.IdentifiersBasicGenerate.

Module Compilers.
  Import IdentifiersBasicLibrary.Compilers.Basic.
  Import IdentifiersBasicGenerate.Compilers.Basic.

  Section print_base.
    Import Coq.ZArith.ZArith Crypto.Util.ZRange.
    (*Goal True. PrintBase.print_base base_type_list_named. Abort.*)
  End print_base.
  Inductive base :=
  | Z
  | bool
  | nat
  | zrange
  .

  Section print_ident.
    Local Set Printing All.
    Local Set Printing Width 10000.
    (*Goal True. PrintIdent.print_ident base base_type_list_named all_ident_named_interped. Abort.*)
  End print_ident.

  Inductive ident : (forall _ : Compilers.type.type (Compilers.base.type.type base), Type) :=
  | ident_Literal : (forall (t : base) (_ : match t return Type with
                                            | Z => BinNums.Z
                                            | bool => Datatypes.bool
                                            | nat => Datatypes.nat
                                            | zrange => ZRange.zrange
                                            end), ident (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base t)))
  | ident_Nat_succ : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat))))
  | ident_Nat_pred : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat))))
  | ident_Nat_max : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)))))
  | ident_Nat_mul : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)))))
  | ident_Nat_add : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)))))
  | ident_Nat_sub : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)))))
  | ident_Nat_eqb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)))))
  | ident_nil : (forall t : Compilers.base.type.type base, ident (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)))
  | ident_cons : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)))))
  | ident_tt : (ident (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)))
  | ident_pair : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base t t0)))))
  | ident_fst : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base t t0)) (@Compilers.type.base (Compilers.base.type.type base) t)))
  | ident_snd : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base t t0)) (@Compilers.type.base (Compilers.base.type.type base) t0)))
  | ident_prod_rect : (forall t t0 t1 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base t t0)) (@Compilers.type.base (Compilers.base.type.type base) t1))))
  | ident_bool_rect : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)) (@Compilers.type.base (Compilers.base.type.type base) t)))))
  | ident_nat_rect : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) t)))))
  | ident_eager_nat_rect : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) t)))))
  | ident_nat_rect_arrow : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0))))))
  | ident_eager_nat_rect_arrow : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0))))))
  | ident_list_rect : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t0)))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) t0)))))
  | ident_eager_list_rect : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t0)))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) t0)))))
  | ident_list_rect_arrow : (forall t t0 t1 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1))))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1))))))
  | ident_eager_list_rect_arrow : (forall t t0 t1 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1))))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.base (Compilers.base.type.type base) t1))))))
  | ident_list_case : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) t0))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) t0)))))
  | ident_List_length : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat))))
  | ident_List_seq : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base (@Compilers.base.type.type_base base nat))))))
  | ident_List_firstn : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)))))
  | ident_List_skipn : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)))))
  | ident_List_repeat : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)))))
  | ident_List_combine : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t0)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base (@Compilers.base.type.prod base t t0))))))
  | ident_List_map : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t0)))))
  | ident_List_app : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)))))
  | ident_List_rev : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t))))
  | ident_List_flat_map : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t0))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t0)))))
  | ident_List_partition : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.list base t) (@Compilers.base.type.list base t))))))
  | ident_List_fold_right : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t0) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t0)) (@Compilers.type.base (Compilers.base.type.type base) t)))))
  | ident_List_update_nth : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t))))))
  | ident_List_nth_default : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) t)))))
  | ident_eager_List_nth_default : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.list base t)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) t)))))
  | ident_Z_add : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_mul : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_pow : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_sub : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_opp : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_Z_div : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_modulo : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_eqb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)))))
  | ident_Z_leb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)))))
  | ident_Z_ltb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)))))
  | ident_Z_geb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)))))
  | ident_Z_gtb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base bool)))))
  | ident_Z_log2 : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_Z_log2_up : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_Z_of_nat : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_Z_to_nat : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base nat))))
  | ident_Z_shiftr : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_shiftl : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_land : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_lor : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_min : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_max : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_mul_split : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))))
  | ident_Z_add_get_carry : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))))
  | ident_Z_add_with_carry : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))))
  | ident_Z_add_with_get_carry : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z))))))))
  | ident_Z_sub_get_borrow : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))))
  | ident_Z_sub_with_get_borrow : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z))))))))
  | ident_Z_zselect : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))))
  | ident_Z_add_modulo : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))))
  | ident_Z_truncating_shiftl : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))))
  | ident_Z_bneg : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_Z_lnot_modulo : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_rshi : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))))
  | ident_Z_cc_m : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_combine_at_bitwidth : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))))
  | ident_Z_cast : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base zrange)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)))))
  | ident_Z_cast2 : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base zrange) (@Compilers.base.type.type_base base zrange))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z))))))
  | ident_Some : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.option base t))))
  | ident_None : (forall t : Compilers.base.type.type base, ident (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.option base t)))
  | ident_option_rect : (forall t t0 : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) t) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.unit base)) (@Compilers.type.base (Compilers.base.type.type base) t0)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.option base t)) (@Compilers.type.base (Compilers.base.type.type base) t0)))))
  | ident_Build_zrange : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base zrange)))))
  | ident_zrange_rect : (forall t : Compilers.base.type.type base, ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z)) (@Compilers.type.base (Compilers.base.type.type base) t))) (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base zrange)) (@Compilers.type.base (Compilers.base.type.type base) t))))
  | ident_fancy_add : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))
  | ident_fancy_addc : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))
  | ident_fancy_sub : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))
  | ident_fancy_subb : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))))
  | ident_fancy_mulll : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_mullh : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_mulhl : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_mulhh : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_rshi : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_selc : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.type_base base Z))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_selm : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.type_base base Z)))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_sell : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.type_base base Z))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  | ident_fancy_addm : (ident (@Compilers.type.arrow (Compilers.base.type.type base) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.prod base (@Compilers.base.type.prod base (@Compilers.base.type.type_base base Z) (@Compilers.base.type.type_base base Z)) (@Compilers.base.type.type_base base Z))) (@Compilers.type.base (Compilers.base.type.type base) (@Compilers.base.type.type_base base Z))))
  .

  Definition package : GoalType.package.
  Proof. Tactic.make_package base ident base_type_list_named var_like_idents all_ident_named_interped. Defined.

  Global Strategy -1000 [base_interp ident_interp].
End Compilers.
