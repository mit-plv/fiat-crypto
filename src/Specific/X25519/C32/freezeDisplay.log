λ x : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x17, x18, x16, x14, x12, x10, x8, x6, x4, x2)%core,
 uint32_t x20, bool x21 = subborrow_u26(0x0, x2, 0x3ffffed);
 uint32_t x23, bool x24 = subborrow_u25(x21, x4, 0x1ffffff);
 uint32_t x26, bool x27 = subborrow_u26(x24, x6, 0x3ffffff);
 uint32_t x29, bool x30 = subborrow_u25(x27, x8, 0x1ffffff);
 uint32_t x32, bool x33 = subborrow_u26(x30, x10, 0x3ffffff);
 uint32_t x35, bool x36 = subborrow_u25(x33, x12, 0x1ffffff);
 uint32_t x38, bool x39 = subborrow_u26(x36, x14, 0x3ffffff);
 uint32_t x41, bool x42 = subborrow_u25(x39, x16, 0x1ffffff);
 uint32_t x44, bool x45 = subborrow_u26(x42, x18, 0x3ffffff);
 uint32_t x47, bool x48 = subborrow_u25(x45, x17, 0x1ffffff);
 uint32_t x49 = cmovznz32(x48, 0x0, 0xffffffff);
 uint32_t x50 = (x49 & 0x3ffffed);
 uint32_t x52, bool x53 = addcarryx_u26(0x0, x20, x50);
 uint32_t x54 = (x49 & 0x1ffffff);
 uint32_t x56, bool x57 = addcarryx_u25(x53, x23, x54);
 uint32_t x58 = (x49 & 0x3ffffff);
 uint32_t x60, bool x61 = addcarryx_u26(x57, x26, x58);
 uint32_t x62 = (x49 & 0x1ffffff);
 uint32_t x64, bool x65 = addcarryx_u25(x61, x29, x62);
 uint32_t x66 = (x49 & 0x3ffffff);
 uint32_t x68, bool x69 = addcarryx_u26(x65, x32, x66);
 uint32_t x70 = (x49 & 0x1ffffff);
 uint32_t x72, bool x73 = addcarryx_u25(x69, x35, x70);
 uint32_t x74 = (x49 & 0x3ffffff);
 uint32_t x76, bool x77 = addcarryx_u26(x73, x38, x74);
 uint32_t x78 = (x49 & 0x1ffffff);
 uint32_t x80, bool x81 = addcarryx_u25(x77, x41, x78);
 uint32_t x82 = (x49 & 0x3ffffff);
 uint32_t x84, bool x85 = addcarryx_u26(x81, x44, x82);
 uint32_t x86 = (x49 & 0x1ffffff);
 uint32_t x88, bool _ = addcarryx_u25(x85, x47, x86);
 (Return x88, Return x84, Return x80, Return x76, Return x72, Return x68, Return x64, Return x60, Return x56, Return x52))
x
     : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)
