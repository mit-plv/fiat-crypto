λ x x0 : word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x8, x9, x7, x5, (x14, x15, x13, x11))%core,
 uint64_t x17, uint64_t x18 = mulx_u64(x5, x11);
 uint64_t x20, uint64_t x21 = mulx_u64(x5, x13);
 uint64_t x23, uint64_t x24 = mulx_u64(x5, x15);
 uint64_t x26, uint64_t x27 = mulx_u64(x5, x14);
 uint64_t x29, uint8_t/*bool*/ x30 = addcarryx_u64(0x0, x18, x20);
 uint64_t x32, uint8_t/*bool*/ x33 = addcarryx_u64(x30, x21, x23);
 uint64_t x35, uint8_t/*bool*/ x36 = addcarryx_u64(x33, x24, x26);
 uint64_t x38, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x36, x27);
 uint64_t x41, uint64_t x42 = mulx_u64(x17, 0xffffffffffffffffL);
 uint64_t x44, uint64_t x45 = mulx_u64(x17, 0xffffffff);
 uint64_t x47, uint64_t x48 = mulx_u64(x17, 0xffffffff00000001L);
 uint64_t x50, uint8_t/*bool*/ x51 = addcarryx_u64(0x0, x42, x44);
 uint64_t x53, uint8_t/*bool*/ x54 = addcarryx_u64(x51, x45, 0x0);
 uint64_t x56, uint8_t/*bool*/ x57 = addcarryx_u64(x54, 0x0, x47);
 uint64_t x59, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x57, x48);
 uint64_t _, uint8_t/*bool*/ x63 = addcarryx_u64(0x0, x17, x41);
 uint64_t x65, uint8_t/*bool*/ x66 = addcarryx_u64(x63, x29, x50);
 uint64_t x68, uint8_t/*bool*/ x69 = addcarryx_u64(x66, x32, x53);
 uint64_t x71, uint8_t/*bool*/ x72 = addcarryx_u64(x69, x35, x56);
 uint64_t x74, uint8_t/*bool*/ x75 = addcarryx_u64(x72, x38, x59);
 uint64_t x77, uint64_t x78 = mulx_u64(x7, x11);
 uint64_t x80, uint64_t x81 = mulx_u64(x7, x13);
 uint64_t x83, uint64_t x84 = mulx_u64(x7, x15);
 uint64_t x86, uint64_t x87 = mulx_u64(x7, x14);
 uint64_t x89, uint8_t/*bool*/ x90 = addcarryx_u64(0x0, x78, x80);
 uint64_t x92, uint8_t/*bool*/ x93 = addcarryx_u64(x90, x81, x83);
 uint64_t x95, uint8_t/*bool*/ x96 = addcarryx_u64(x93, x84, x86);
 uint64_t x98, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x96, x87);
 uint64_t x101, uint8_t/*bool*/ x102 = addcarryx_u64(0x0, x65, x77);
 uint64_t x104, uint8_t/*bool*/ x105 = addcarryx_u64(x102, x68, x89);
 uint64_t x107, uint8_t/*bool*/ x108 = addcarryx_u64(x105, x71, x92);
 uint64_t x110, uint8_t/*bool*/ x111 = addcarryx_u64(x108, x74, x95);
 uint64_t x113, uint8_t/*bool*/ x114 = addcarryx_u64(x111, x75, x98);
 uint64_t x116, uint64_t x117 = mulx_u64(x101, 0xffffffffffffffffL);
 uint64_t x119, uint64_t x120 = mulx_u64(x101, 0xffffffff);
 uint64_t x122, uint64_t x123 = mulx_u64(x101, 0xffffffff00000001L);
 uint64_t x125, uint8_t/*bool*/ x126 = addcarryx_u64(0x0, x117, x119);
 uint64_t x128, uint8_t/*bool*/ x129 = addcarryx_u64(x126, x120, 0x0);
 uint64_t x131, uint8_t/*bool*/ x132 = addcarryx_u64(x129, 0x0, x122);
 uint64_t x134, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x132, x123);
 uint64_t _, uint8_t/*bool*/ x138 = addcarryx_u64(0x0, x101, x116);
 uint64_t x140, uint8_t/*bool*/ x141 = addcarryx_u64(x138, x104, x125);
 uint64_t x143, uint8_t/*bool*/ x144 = addcarryx_u64(x141, x107, x128);
 uint64_t x146, uint8_t/*bool*/ x147 = addcarryx_u64(x144, x110, x131);
 uint64_t x149, uint8_t/*bool*/ x150 = addcarryx_u64(x147, x113, x134);
 uint8_t x151 = ((uint8_t)x150 + x114);
 uint64_t x153, uint64_t x154 = mulx_u64(x9, x11);
 uint64_t x156, uint64_t x157 = mulx_u64(x9, x13);
 uint64_t x159, uint64_t x160 = mulx_u64(x9, x15);
 uint64_t x162, uint64_t x163 = mulx_u64(x9, x14);
 uint64_t x165, uint8_t/*bool*/ x166 = addcarryx_u64(0x0, x154, x156);
 uint64_t x168, uint8_t/*bool*/ x169 = addcarryx_u64(x166, x157, x159);
 uint64_t x171, uint8_t/*bool*/ x172 = addcarryx_u64(x169, x160, x162);
 uint64_t x174, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x172, x163);
 uint64_t x177, uint8_t/*bool*/ x178 = addcarryx_u64(0x0, x140, x153);
 uint64_t x180, uint8_t/*bool*/ x181 = addcarryx_u64(x178, x143, x165);
 uint64_t x183, uint8_t/*bool*/ x184 = addcarryx_u64(x181, x146, x168);
 uint64_t x186, uint8_t/*bool*/ x187 = addcarryx_u64(x184, x149, x171);
 uint64_t x189, uint8_t/*bool*/ x190 = addcarryx_u64(x187, x151, x174);
 uint64_t x192, uint64_t x193 = mulx_u64(x177, 0xffffffffffffffffL);
 uint64_t x195, uint64_t x196 = mulx_u64(x177, 0xffffffff);
 uint64_t x198, uint64_t x199 = mulx_u64(x177, 0xffffffff00000001L);
 uint64_t x201, uint8_t/*bool*/ x202 = addcarryx_u64(0x0, x193, x195);
 uint64_t x204, uint8_t/*bool*/ x205 = addcarryx_u64(x202, x196, 0x0);
 uint64_t x207, uint8_t/*bool*/ x208 = addcarryx_u64(x205, 0x0, x198);
 uint64_t x210, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x208, x199);
 uint64_t _, uint8_t/*bool*/ x214 = addcarryx_u64(0x0, x177, x192);
 uint64_t x216, uint8_t/*bool*/ x217 = addcarryx_u64(x214, x180, x201);
 uint64_t x219, uint8_t/*bool*/ x220 = addcarryx_u64(x217, x183, x204);
 uint64_t x222, uint8_t/*bool*/ x223 = addcarryx_u64(x220, x186, x207);
 uint64_t x225, uint8_t/*bool*/ x226 = addcarryx_u64(x223, x189, x210);
 uint8_t x227 = ((uint8_t)x226 + x190);
 uint64_t x229, uint64_t x230 = mulx_u64(x8, x11);
 uint64_t x232, uint64_t x233 = mulx_u64(x8, x13);
 uint64_t x235, uint64_t x236 = mulx_u64(x8, x15);
 uint64_t x238, uint64_t x239 = mulx_u64(x8, x14);
 uint64_t x241, uint8_t/*bool*/ x242 = addcarryx_u64(0x0, x230, x232);
 uint64_t x244, uint8_t/*bool*/ x245 = addcarryx_u64(x242, x233, x235);
 uint64_t x247, uint8_t/*bool*/ x248 = addcarryx_u64(x245, x236, x238);
 uint64_t x250, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x248, x239);
 uint64_t x253, uint8_t/*bool*/ x254 = addcarryx_u64(0x0, x216, x229);
 uint64_t x256, uint8_t/*bool*/ x257 = addcarryx_u64(x254, x219, x241);
 uint64_t x259, uint8_t/*bool*/ x260 = addcarryx_u64(x257, x222, x244);
 uint64_t x262, uint8_t/*bool*/ x263 = addcarryx_u64(x260, x225, x247);
 uint64_t x265, uint8_t/*bool*/ x266 = addcarryx_u64(x263, x227, x250);
 uint64_t x268, uint64_t x269 = mulx_u64(x253, 0xffffffffffffffffL);
 uint64_t x271, uint64_t x272 = mulx_u64(x253, 0xffffffff);
 uint64_t x274, uint64_t x275 = mulx_u64(x253, 0xffffffff00000001L);
 uint64_t x277, uint8_t/*bool*/ x278 = addcarryx_u64(0x0, x269, x271);
 uint64_t x280, uint8_t/*bool*/ x281 = addcarryx_u64(x278, x272, 0x0);
 uint64_t x283, uint8_t/*bool*/ x284 = addcarryx_u64(x281, 0x0, x274);
 uint64_t x286, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x284, x275);
 uint64_t _, uint8_t/*bool*/ x290 = addcarryx_u64(0x0, x253, x268);
 uint64_t x292, uint8_t/*bool*/ x293 = addcarryx_u64(x290, x256, x277);
 uint64_t x295, uint8_t/*bool*/ x296 = addcarryx_u64(x293, x259, x280);
 uint64_t x298, uint8_t/*bool*/ x299 = addcarryx_u64(x296, x262, x283);
 uint64_t x301, uint8_t/*bool*/ x302 = addcarryx_u64(x299, x265, x286);
 uint8_t x303 = ((uint8_t)x302 + x266);
 uint64_t x305, uint8_t/*bool*/ x306 = subborrow_u64(0x0, x292, 0xffffffffffffffffL);
 uint64_t x308, uint8_t/*bool*/ x309 = subborrow_u64(x306, x295, 0xffffffff);
 uint64_t x311, uint8_t/*bool*/ x312 = subborrow_u64(x309, x298, 0x0);
 uint64_t x314, uint8_t/*bool*/ x315 = subborrow_u64(x312, x301, 0xffffffff00000001L);
 uint64_t _, uint8_t/*bool*/ x318 = subborrow_u64(x315, x303, 0x0);
 uint64_t x319 = cmovznz64(x318, x314, x301);
 uint64_t x320 = cmovznz64(x318, x311, x298);
 uint64_t x321 = cmovznz64(x318, x308, x295);
 uint64_t x322 = cmovznz64(x318, x305, x292);
 return (x319, x320, x321, x322))
(x, x0)%core
     : word64 * word64 * word64 * word64 → word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t)
