λ x : word128 * word128,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x1, x2)%core,
 uint128_t x4, uint8_t x5 = subborrow_u128(0x0, 0x0, x2);
 uint128_t x7, uint8_t x8 = subborrow_u128(x5, 0x0, x1);
 uint128_t x9 = (uint128_t)cmovznz(x8, 0x0, 0xffffffffffffffffffffffffffffffffL);
 uint128_t x10 = (x9 & 0xffffffffffffffffffffffffL);
 uint128_t x12, uint8_t x13 = addcarryx_u128(0x0, x4, x10);
 uint128_t x14 = (x9 & 0xffffffff000000010000000000000000L);
 uint128_t x16, uint8_t _ = addcarryx_u128(x13, x7, x14);
 (Return x16, Return x12))
x
     : word128 * word128 → ReturnType (uint128_t * uint128_t)
