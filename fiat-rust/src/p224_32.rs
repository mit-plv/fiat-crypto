/* Autogenerated: src/ExtractionOCaml/word_by_word_montgomery --lang=Rust p224 '2^224 - 2^96 + 1' 32 */
/* curve description: p224 */
/* requested operations: (all) */
/* m = 0xffffffffffffffffffffffffffffffff000000000000000000000001 (from "2^224 - 2^96 + 1") */
/* machine_wordsize = 32 (from "32") */
/*                                                                    */
/* NOTE: In addition to the bounds specified above each function, all */
/*   functions synthesized for this Montgomery arithmetic require the */
/*   input to be strictly less than the prime modulus (m), and also   */
/*   require the input to be in the unique saturated representation.  */
/*   All functions also ensure that these two properties are true of  */
/*   return values.                                                   */

#![allow(unused_parens)]
#[allow(non_camel_case_types)]

pub type fiat_p224_u1 = u8;
pub type fiat_p224_i1 = i8;
pub type fiat_p224_u2 = u8;
pub type fiat_p224_i2 = i8;


/*
 * The function fiat_p224_addcarryx_u32 is an addition with carry.
 * Postconditions:
 *   out1 = (arg1 + arg2 + arg3) mod 2^32
 *   out2 = ⌊(arg1 + arg2 + arg3) / 2^32⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffff]
 *   arg3: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 *   out2: [0x0 ~> 0x1]
 */
#[inline]
pub fn fiat_p224_addcarryx_u32(out1: &mut u32, out2: &mut fiat_p224_u1, arg1: fiat_p224_u1, arg2: u32, arg3: u32) -> () {
  let x1: u64 = (((arg1 as u64) + (arg2 as u64)) + (arg3 as u64));
  let x2: u32 = ((x1 & (0xffffffff as u64)) as u32);
  let x3: fiat_p224_u1 = ((x1 >> 32) as fiat_p224_u1);
  *out1 = x2;
  *out2 = x3;
}

/*
 * The function fiat_p224_subborrowx_u32 is a subtraction with borrow.
 * Postconditions:
 *   out1 = (-arg1 + arg2 + -arg3) mod 2^32
 *   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^32⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffff]
 *   arg3: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 *   out2: [0x0 ~> 0x1]
 */
#[inline]
pub fn fiat_p224_subborrowx_u32(out1: &mut u32, out2: &mut fiat_p224_u1, arg1: fiat_p224_u1, arg2: u32, arg3: u32) -> () {
  let x1: i64 = (((arg2 as i64) - (arg1 as i64)) - (arg3 as i64));
  let x2: fiat_p224_i1 = ((x1 >> 32) as fiat_p224_i1);
  let x3: u32 = ((x1 & (0xffffffff as i64)) as u32);
  *out1 = x3;
  *out2 = (((0x0 as fiat_p224_i2) - (x2 as fiat_p224_i2)) as fiat_p224_u1);
}

/*
 * The function fiat_p224_mulx_u32 is a multiplication, returning the full double-width result.
 * Postconditions:
 *   out1 = (arg1 * arg2) mod 2^32
 *   out2 = ⌊arg1 * arg2 / 2^32⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0xffffffff]
 *   arg2: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 *   out2: [0x0 ~> 0xffffffff]
 */
#[inline]
pub fn fiat_p224_mulx_u32(out1: &mut u32, out2: &mut u32, arg1: u32, arg2: u32) -> () {
  let x1: u64 = ((arg1 as u64) * (arg2 as u64));
  let x2: u32 = ((x1 & (0xffffffff as u64)) as u32);
  let x3: u32 = ((x1 >> 32) as u32);
  *out1 = x2;
  *out2 = x3;
}

/*
 * The function fiat_p224_cmovznz_u32 is a single-word conditional move.
 * Postconditions:
 *   out1 = (if arg1 = 0 then arg2 else arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffff]
 *   arg3: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 */
#[inline]
pub fn fiat_p224_cmovznz_u32(out1: &mut u32, arg1: fiat_p224_u1, arg2: u32, arg3: u32) -> () {
  let x1: fiat_p224_u1 = (!(!arg1));
  let x2: u32 = ((((((0x0 as fiat_p224_i2) - (x1 as fiat_p224_i2)) as fiat_p224_i1) as i64) & (0xffffffff as i64)) as u32);
  let x3: u32 = ((x2 & arg3) | ((!x2) & arg2));
  *out1 = x3;
}

/*
 * The function fiat_p224_mul multiplies two field elements in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 *   0 ≤ eval arg2 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg2)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_mul(out1: &mut [u32; 7], arg1: &[u32; 7], arg2: &[u32; 7]) -> () {
  let x1: u32 = (arg1[1]);
  let x2: u32 = (arg1[2]);
  let x3: u32 = (arg1[3]);
  let x4: u32 = (arg1[4]);
  let x5: u32 = (arg1[5]);
  let x6: u32 = (arg1[6]);
  let x7: u32 = (arg1[0]);
  let mut x8: u32 = 0;
  let mut x9: u32 = 0;
  fiat_p224_mulx_u32(&mut x8, &mut x9, x7, (arg2[6]));
  let mut x10: u32 = 0;
  let mut x11: u32 = 0;
  fiat_p224_mulx_u32(&mut x10, &mut x11, x7, (arg2[5]));
  let mut x12: u32 = 0;
  let mut x13: u32 = 0;
  fiat_p224_mulx_u32(&mut x12, &mut x13, x7, (arg2[4]));
  let mut x14: u32 = 0;
  let mut x15: u32 = 0;
  fiat_p224_mulx_u32(&mut x14, &mut x15, x7, (arg2[3]));
  let mut x16: u32 = 0;
  let mut x17: u32 = 0;
  fiat_p224_mulx_u32(&mut x16, &mut x17, x7, (arg2[2]));
  let mut x18: u32 = 0;
  let mut x19: u32 = 0;
  fiat_p224_mulx_u32(&mut x18, &mut x19, x7, (arg2[1]));
  let mut x20: u32 = 0;
  let mut x21: u32 = 0;
  fiat_p224_mulx_u32(&mut x20, &mut x21, x7, (arg2[0]));
  let mut x22: u32 = 0;
  let mut x23: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x22, &mut x23, 0x0, x21, x18);
  let mut x24: u32 = 0;
  let mut x25: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x24, &mut x25, x23, x19, x16);
  let mut x26: u32 = 0;
  let mut x27: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x26, &mut x27, x25, x17, x14);
  let mut x28: u32 = 0;
  let mut x29: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x28, &mut x29, x27, x15, x12);
  let mut x30: u32 = 0;
  let mut x31: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x30, &mut x31, x29, x13, x10);
  let mut x32: u32 = 0;
  let mut x33: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x32, &mut x33, x31, x11, x8);
  let mut x34: u32 = 0;
  let mut x35: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x34, &mut x35, x33, x9, (0x0 as u32));
  let mut x36: u32 = 0;
  let mut x37: u32 = 0;
  fiat_p224_mulx_u32(&mut x36, &mut x37, x20, 0xffffffff);
  let mut x38: u32 = 0;
  let mut x39: u32 = 0;
  fiat_p224_mulx_u32(&mut x38, &mut x39, x36, 0xffffffff);
  let mut x40: u32 = 0;
  let mut x41: u32 = 0;
  fiat_p224_mulx_u32(&mut x40, &mut x41, x36, 0xffffffff);
  let mut x42: u32 = 0;
  let mut x43: u32 = 0;
  fiat_p224_mulx_u32(&mut x42, &mut x43, x36, 0xffffffff);
  let mut x44: u32 = 0;
  let mut x45: u32 = 0;
  fiat_p224_mulx_u32(&mut x44, &mut x45, x36, 0xffffffff);
  let mut x46: u32 = 0;
  let mut x47: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x46, &mut x47, 0x0, x45, x42);
  let mut x48: u32 = 0;
  let mut x49: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x48, &mut x49, x47, x43, x40);
  let mut x50: u32 = 0;
  let mut x51: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x50, &mut x51, x49, x41, x38);
  let mut x52: u32 = 0;
  let mut x53: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x52, &mut x53, x51, x39, (0x0 as u32));
  let mut x54: u32 = 0;
  let mut x55: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x54, &mut x55, 0x0, x20, x36);
  let mut x56: u32 = 0;
  let mut x57: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x56, &mut x57, x55, x22, (0x0 as u32));
  let mut x58: u32 = 0;
  let mut x59: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x58, &mut x59, x57, x24, (0x0 as u32));
  let mut x60: u32 = 0;
  let mut x61: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x60, &mut x61, x59, x26, x44);
  let mut x62: u32 = 0;
  let mut x63: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x62, &mut x63, x61, x28, x46);
  let mut x64: u32 = 0;
  let mut x65: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x64, &mut x65, x63, x30, x48);
  let mut x66: u32 = 0;
  let mut x67: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x66, &mut x67, x65, x32, x50);
  let mut x68: u32 = 0;
  let mut x69: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x68, &mut x69, x67, x34, x52);
  let mut x70: u32 = 0;
  let mut x71: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x70, &mut x71, x69, (0x0 as u32), (0x0 as u32));
  let mut x72: u32 = 0;
  let mut x73: u32 = 0;
  fiat_p224_mulx_u32(&mut x72, &mut x73, x1, (arg2[6]));
  let mut x74: u32 = 0;
  let mut x75: u32 = 0;
  fiat_p224_mulx_u32(&mut x74, &mut x75, x1, (arg2[5]));
  let mut x76: u32 = 0;
  let mut x77: u32 = 0;
  fiat_p224_mulx_u32(&mut x76, &mut x77, x1, (arg2[4]));
  let mut x78: u32 = 0;
  let mut x79: u32 = 0;
  fiat_p224_mulx_u32(&mut x78, &mut x79, x1, (arg2[3]));
  let mut x80: u32 = 0;
  let mut x81: u32 = 0;
  fiat_p224_mulx_u32(&mut x80, &mut x81, x1, (arg2[2]));
  let mut x82: u32 = 0;
  let mut x83: u32 = 0;
  fiat_p224_mulx_u32(&mut x82, &mut x83, x1, (arg2[1]));
  let mut x84: u32 = 0;
  let mut x85: u32 = 0;
  fiat_p224_mulx_u32(&mut x84, &mut x85, x1, (arg2[0]));
  let mut x86: u32 = 0;
  let mut x87: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x86, &mut x87, 0x0, x85, x82);
  let mut x88: u32 = 0;
  let mut x89: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x88, &mut x89, x87, x83, x80);
  let mut x90: u32 = 0;
  let mut x91: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x90, &mut x91, x89, x81, x78);
  let mut x92: u32 = 0;
  let mut x93: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x92, &mut x93, x91, x79, x76);
  let mut x94: u32 = 0;
  let mut x95: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x94, &mut x95, x93, x77, x74);
  let mut x96: u32 = 0;
  let mut x97: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x96, &mut x97, x95, x75, x72);
  let mut x98: u32 = 0;
  let mut x99: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x98, &mut x99, x97, x73, (0x0 as u32));
  let mut x100: u32 = 0;
  let mut x101: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x100, &mut x101, 0x0, x56, x84);
  let mut x102: u32 = 0;
  let mut x103: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x102, &mut x103, x101, x58, x86);
  let mut x104: u32 = 0;
  let mut x105: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x104, &mut x105, x103, x60, x88);
  let mut x106: u32 = 0;
  let mut x107: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x106, &mut x107, x105, x62, x90);
  let mut x108: u32 = 0;
  let mut x109: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x108, &mut x109, x107, x64, x92);
  let mut x110: u32 = 0;
  let mut x111: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x110, &mut x111, x109, x66, x94);
  let mut x112: u32 = 0;
  let mut x113: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x112, &mut x113, x111, x68, x96);
  let mut x114: u32 = 0;
  let mut x115: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x114, &mut x115, x113, ((x70 as fiat_p224_u1) as u32), x98);
  let mut x116: u32 = 0;
  let mut x117: u32 = 0;
  fiat_p224_mulx_u32(&mut x116, &mut x117, x100, 0xffffffff);
  let mut x118: u32 = 0;
  let mut x119: u32 = 0;
  fiat_p224_mulx_u32(&mut x118, &mut x119, x116, 0xffffffff);
  let mut x120: u32 = 0;
  let mut x121: u32 = 0;
  fiat_p224_mulx_u32(&mut x120, &mut x121, x116, 0xffffffff);
  let mut x122: u32 = 0;
  let mut x123: u32 = 0;
  fiat_p224_mulx_u32(&mut x122, &mut x123, x116, 0xffffffff);
  let mut x124: u32 = 0;
  let mut x125: u32 = 0;
  fiat_p224_mulx_u32(&mut x124, &mut x125, x116, 0xffffffff);
  let mut x126: u32 = 0;
  let mut x127: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x126, &mut x127, 0x0, x125, x122);
  let mut x128: u32 = 0;
  let mut x129: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x128, &mut x129, x127, x123, x120);
  let mut x130: u32 = 0;
  let mut x131: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x130, &mut x131, x129, x121, x118);
  let mut x132: u32 = 0;
  let mut x133: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x132, &mut x133, x131, x119, (0x0 as u32));
  let mut x134: u32 = 0;
  let mut x135: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x134, &mut x135, 0x0, x100, x116);
  let mut x136: u32 = 0;
  let mut x137: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x136, &mut x137, x135, x102, (0x0 as u32));
  let mut x138: u32 = 0;
  let mut x139: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x138, &mut x139, x137, x104, (0x0 as u32));
  let mut x140: u32 = 0;
  let mut x141: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x140, &mut x141, x139, x106, x124);
  let mut x142: u32 = 0;
  let mut x143: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x142, &mut x143, x141, x108, x126);
  let mut x144: u32 = 0;
  let mut x145: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x144, &mut x145, x143, x110, x128);
  let mut x146: u32 = 0;
  let mut x147: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x146, &mut x147, x145, x112, x130);
  let mut x148: u32 = 0;
  let mut x149: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x148, &mut x149, x147, x114, x132);
  let mut x150: u32 = 0;
  let mut x151: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x150, &mut x151, x149, (x115 as u32), (0x0 as u32));
  let mut x152: u32 = 0;
  let mut x153: u32 = 0;
  fiat_p224_mulx_u32(&mut x152, &mut x153, x2, (arg2[6]));
  let mut x154: u32 = 0;
  let mut x155: u32 = 0;
  fiat_p224_mulx_u32(&mut x154, &mut x155, x2, (arg2[5]));
  let mut x156: u32 = 0;
  let mut x157: u32 = 0;
  fiat_p224_mulx_u32(&mut x156, &mut x157, x2, (arg2[4]));
  let mut x158: u32 = 0;
  let mut x159: u32 = 0;
  fiat_p224_mulx_u32(&mut x158, &mut x159, x2, (arg2[3]));
  let mut x160: u32 = 0;
  let mut x161: u32 = 0;
  fiat_p224_mulx_u32(&mut x160, &mut x161, x2, (arg2[2]));
  let mut x162: u32 = 0;
  let mut x163: u32 = 0;
  fiat_p224_mulx_u32(&mut x162, &mut x163, x2, (arg2[1]));
  let mut x164: u32 = 0;
  let mut x165: u32 = 0;
  fiat_p224_mulx_u32(&mut x164, &mut x165, x2, (arg2[0]));
  let mut x166: u32 = 0;
  let mut x167: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x166, &mut x167, 0x0, x165, x162);
  let mut x168: u32 = 0;
  let mut x169: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x168, &mut x169, x167, x163, x160);
  let mut x170: u32 = 0;
  let mut x171: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x170, &mut x171, x169, x161, x158);
  let mut x172: u32 = 0;
  let mut x173: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x172, &mut x173, x171, x159, x156);
  let mut x174: u32 = 0;
  let mut x175: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x174, &mut x175, x173, x157, x154);
  let mut x176: u32 = 0;
  let mut x177: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x176, &mut x177, x175, x155, x152);
  let mut x178: u32 = 0;
  let mut x179: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x178, &mut x179, x177, x153, (0x0 as u32));
  let mut x180: u32 = 0;
  let mut x181: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x180, &mut x181, 0x0, x136, x164);
  let mut x182: u32 = 0;
  let mut x183: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x182, &mut x183, x181, x138, x166);
  let mut x184: u32 = 0;
  let mut x185: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x184, &mut x185, x183, x140, x168);
  let mut x186: u32 = 0;
  let mut x187: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x186, &mut x187, x185, x142, x170);
  let mut x188: u32 = 0;
  let mut x189: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x188, &mut x189, x187, x144, x172);
  let mut x190: u32 = 0;
  let mut x191: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x190, &mut x191, x189, x146, x174);
  let mut x192: u32 = 0;
  let mut x193: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x192, &mut x193, x191, x148, x176);
  let mut x194: u32 = 0;
  let mut x195: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x194, &mut x195, x193, x150, x178);
  let mut x196: u32 = 0;
  let mut x197: u32 = 0;
  fiat_p224_mulx_u32(&mut x196, &mut x197, x180, 0xffffffff);
  let mut x198: u32 = 0;
  let mut x199: u32 = 0;
  fiat_p224_mulx_u32(&mut x198, &mut x199, x196, 0xffffffff);
  let mut x200: u32 = 0;
  let mut x201: u32 = 0;
  fiat_p224_mulx_u32(&mut x200, &mut x201, x196, 0xffffffff);
  let mut x202: u32 = 0;
  let mut x203: u32 = 0;
  fiat_p224_mulx_u32(&mut x202, &mut x203, x196, 0xffffffff);
  let mut x204: u32 = 0;
  let mut x205: u32 = 0;
  fiat_p224_mulx_u32(&mut x204, &mut x205, x196, 0xffffffff);
  let mut x206: u32 = 0;
  let mut x207: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x206, &mut x207, 0x0, x205, x202);
  let mut x208: u32 = 0;
  let mut x209: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x208, &mut x209, x207, x203, x200);
  let mut x210: u32 = 0;
  let mut x211: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x210, &mut x211, x209, x201, x198);
  let mut x212: u32 = 0;
  let mut x213: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x212, &mut x213, x211, x199, (0x0 as u32));
  let mut x214: u32 = 0;
  let mut x215: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x214, &mut x215, 0x0, x180, x196);
  let mut x216: u32 = 0;
  let mut x217: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x216, &mut x217, x215, x182, (0x0 as u32));
  let mut x218: u32 = 0;
  let mut x219: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x218, &mut x219, x217, x184, (0x0 as u32));
  let mut x220: u32 = 0;
  let mut x221: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x220, &mut x221, x219, x186, x204);
  let mut x222: u32 = 0;
  let mut x223: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x222, &mut x223, x221, x188, x206);
  let mut x224: u32 = 0;
  let mut x225: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x224, &mut x225, x223, x190, x208);
  let mut x226: u32 = 0;
  let mut x227: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x226, &mut x227, x225, x192, x210);
  let mut x228: u32 = 0;
  let mut x229: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x228, &mut x229, x227, x194, x212);
  let mut x230: u32 = 0;
  let mut x231: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x230, &mut x231, x229, (x195 as u32), (0x0 as u32));
  let mut x232: u32 = 0;
  let mut x233: u32 = 0;
  fiat_p224_mulx_u32(&mut x232, &mut x233, x3, (arg2[6]));
  let mut x234: u32 = 0;
  let mut x235: u32 = 0;
  fiat_p224_mulx_u32(&mut x234, &mut x235, x3, (arg2[5]));
  let mut x236: u32 = 0;
  let mut x237: u32 = 0;
  fiat_p224_mulx_u32(&mut x236, &mut x237, x3, (arg2[4]));
  let mut x238: u32 = 0;
  let mut x239: u32 = 0;
  fiat_p224_mulx_u32(&mut x238, &mut x239, x3, (arg2[3]));
  let mut x240: u32 = 0;
  let mut x241: u32 = 0;
  fiat_p224_mulx_u32(&mut x240, &mut x241, x3, (arg2[2]));
  let mut x242: u32 = 0;
  let mut x243: u32 = 0;
  fiat_p224_mulx_u32(&mut x242, &mut x243, x3, (arg2[1]));
  let mut x244: u32 = 0;
  let mut x245: u32 = 0;
  fiat_p224_mulx_u32(&mut x244, &mut x245, x3, (arg2[0]));
  let mut x246: u32 = 0;
  let mut x247: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x246, &mut x247, 0x0, x245, x242);
  let mut x248: u32 = 0;
  let mut x249: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x248, &mut x249, x247, x243, x240);
  let mut x250: u32 = 0;
  let mut x251: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x250, &mut x251, x249, x241, x238);
  let mut x252: u32 = 0;
  let mut x253: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x252, &mut x253, x251, x239, x236);
  let mut x254: u32 = 0;
  let mut x255: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x254, &mut x255, x253, x237, x234);
  let mut x256: u32 = 0;
  let mut x257: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x256, &mut x257, x255, x235, x232);
  let mut x258: u32 = 0;
  let mut x259: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x258, &mut x259, x257, x233, (0x0 as u32));
  let mut x260: u32 = 0;
  let mut x261: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x260, &mut x261, 0x0, x216, x244);
  let mut x262: u32 = 0;
  let mut x263: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x262, &mut x263, x261, x218, x246);
  let mut x264: u32 = 0;
  let mut x265: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x264, &mut x265, x263, x220, x248);
  let mut x266: u32 = 0;
  let mut x267: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x266, &mut x267, x265, x222, x250);
  let mut x268: u32 = 0;
  let mut x269: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x268, &mut x269, x267, x224, x252);
  let mut x270: u32 = 0;
  let mut x271: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x270, &mut x271, x269, x226, x254);
  let mut x272: u32 = 0;
  let mut x273: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x272, &mut x273, x271, x228, x256);
  let mut x274: u32 = 0;
  let mut x275: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x274, &mut x275, x273, x230, x258);
  let mut x276: u32 = 0;
  let mut x277: u32 = 0;
  fiat_p224_mulx_u32(&mut x276, &mut x277, x260, 0xffffffff);
  let mut x278: u32 = 0;
  let mut x279: u32 = 0;
  fiat_p224_mulx_u32(&mut x278, &mut x279, x276, 0xffffffff);
  let mut x280: u32 = 0;
  let mut x281: u32 = 0;
  fiat_p224_mulx_u32(&mut x280, &mut x281, x276, 0xffffffff);
  let mut x282: u32 = 0;
  let mut x283: u32 = 0;
  fiat_p224_mulx_u32(&mut x282, &mut x283, x276, 0xffffffff);
  let mut x284: u32 = 0;
  let mut x285: u32 = 0;
  fiat_p224_mulx_u32(&mut x284, &mut x285, x276, 0xffffffff);
  let mut x286: u32 = 0;
  let mut x287: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x286, &mut x287, 0x0, x285, x282);
  let mut x288: u32 = 0;
  let mut x289: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x288, &mut x289, x287, x283, x280);
  let mut x290: u32 = 0;
  let mut x291: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x290, &mut x291, x289, x281, x278);
  let mut x292: u32 = 0;
  let mut x293: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x292, &mut x293, x291, x279, (0x0 as u32));
  let mut x294: u32 = 0;
  let mut x295: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x294, &mut x295, 0x0, x260, x276);
  let mut x296: u32 = 0;
  let mut x297: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x296, &mut x297, x295, x262, (0x0 as u32));
  let mut x298: u32 = 0;
  let mut x299: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x298, &mut x299, x297, x264, (0x0 as u32));
  let mut x300: u32 = 0;
  let mut x301: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x300, &mut x301, x299, x266, x284);
  let mut x302: u32 = 0;
  let mut x303: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x302, &mut x303, x301, x268, x286);
  let mut x304: u32 = 0;
  let mut x305: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x304, &mut x305, x303, x270, x288);
  let mut x306: u32 = 0;
  let mut x307: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x306, &mut x307, x305, x272, x290);
  let mut x308: u32 = 0;
  let mut x309: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x308, &mut x309, x307, x274, x292);
  let mut x310: u32 = 0;
  let mut x311: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x310, &mut x311, x309, (x275 as u32), (0x0 as u32));
  let mut x312: u32 = 0;
  let mut x313: u32 = 0;
  fiat_p224_mulx_u32(&mut x312, &mut x313, x4, (arg2[6]));
  let mut x314: u32 = 0;
  let mut x315: u32 = 0;
  fiat_p224_mulx_u32(&mut x314, &mut x315, x4, (arg2[5]));
  let mut x316: u32 = 0;
  let mut x317: u32 = 0;
  fiat_p224_mulx_u32(&mut x316, &mut x317, x4, (arg2[4]));
  let mut x318: u32 = 0;
  let mut x319: u32 = 0;
  fiat_p224_mulx_u32(&mut x318, &mut x319, x4, (arg2[3]));
  let mut x320: u32 = 0;
  let mut x321: u32 = 0;
  fiat_p224_mulx_u32(&mut x320, &mut x321, x4, (arg2[2]));
  let mut x322: u32 = 0;
  let mut x323: u32 = 0;
  fiat_p224_mulx_u32(&mut x322, &mut x323, x4, (arg2[1]));
  let mut x324: u32 = 0;
  let mut x325: u32 = 0;
  fiat_p224_mulx_u32(&mut x324, &mut x325, x4, (arg2[0]));
  let mut x326: u32 = 0;
  let mut x327: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x326, &mut x327, 0x0, x325, x322);
  let mut x328: u32 = 0;
  let mut x329: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x328, &mut x329, x327, x323, x320);
  let mut x330: u32 = 0;
  let mut x331: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x330, &mut x331, x329, x321, x318);
  let mut x332: u32 = 0;
  let mut x333: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x332, &mut x333, x331, x319, x316);
  let mut x334: u32 = 0;
  let mut x335: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x334, &mut x335, x333, x317, x314);
  let mut x336: u32 = 0;
  let mut x337: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x336, &mut x337, x335, x315, x312);
  let mut x338: u32 = 0;
  let mut x339: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x338, &mut x339, x337, x313, (0x0 as u32));
  let mut x340: u32 = 0;
  let mut x341: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x340, &mut x341, 0x0, x296, x324);
  let mut x342: u32 = 0;
  let mut x343: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x342, &mut x343, x341, x298, x326);
  let mut x344: u32 = 0;
  let mut x345: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x344, &mut x345, x343, x300, x328);
  let mut x346: u32 = 0;
  let mut x347: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x346, &mut x347, x345, x302, x330);
  let mut x348: u32 = 0;
  let mut x349: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x348, &mut x349, x347, x304, x332);
  let mut x350: u32 = 0;
  let mut x351: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x350, &mut x351, x349, x306, x334);
  let mut x352: u32 = 0;
  let mut x353: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x352, &mut x353, x351, x308, x336);
  let mut x354: u32 = 0;
  let mut x355: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x354, &mut x355, x353, x310, x338);
  let mut x356: u32 = 0;
  let mut x357: u32 = 0;
  fiat_p224_mulx_u32(&mut x356, &mut x357, x340, 0xffffffff);
  let mut x358: u32 = 0;
  let mut x359: u32 = 0;
  fiat_p224_mulx_u32(&mut x358, &mut x359, x356, 0xffffffff);
  let mut x360: u32 = 0;
  let mut x361: u32 = 0;
  fiat_p224_mulx_u32(&mut x360, &mut x361, x356, 0xffffffff);
  let mut x362: u32 = 0;
  let mut x363: u32 = 0;
  fiat_p224_mulx_u32(&mut x362, &mut x363, x356, 0xffffffff);
  let mut x364: u32 = 0;
  let mut x365: u32 = 0;
  fiat_p224_mulx_u32(&mut x364, &mut x365, x356, 0xffffffff);
  let mut x366: u32 = 0;
  let mut x367: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x366, &mut x367, 0x0, x365, x362);
  let mut x368: u32 = 0;
  let mut x369: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x368, &mut x369, x367, x363, x360);
  let mut x370: u32 = 0;
  let mut x371: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x370, &mut x371, x369, x361, x358);
  let mut x372: u32 = 0;
  let mut x373: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x372, &mut x373, x371, x359, (0x0 as u32));
  let mut x374: u32 = 0;
  let mut x375: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x374, &mut x375, 0x0, x340, x356);
  let mut x376: u32 = 0;
  let mut x377: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x376, &mut x377, x375, x342, (0x0 as u32));
  let mut x378: u32 = 0;
  let mut x379: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x378, &mut x379, x377, x344, (0x0 as u32));
  let mut x380: u32 = 0;
  let mut x381: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x380, &mut x381, x379, x346, x364);
  let mut x382: u32 = 0;
  let mut x383: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x382, &mut x383, x381, x348, x366);
  let mut x384: u32 = 0;
  let mut x385: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x384, &mut x385, x383, x350, x368);
  let mut x386: u32 = 0;
  let mut x387: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x386, &mut x387, x385, x352, x370);
  let mut x388: u32 = 0;
  let mut x389: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x388, &mut x389, x387, x354, x372);
  let mut x390: u32 = 0;
  let mut x391: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x390, &mut x391, x389, (x355 as u32), (0x0 as u32));
  let mut x392: u32 = 0;
  let mut x393: u32 = 0;
  fiat_p224_mulx_u32(&mut x392, &mut x393, x5, (arg2[6]));
  let mut x394: u32 = 0;
  let mut x395: u32 = 0;
  fiat_p224_mulx_u32(&mut x394, &mut x395, x5, (arg2[5]));
  let mut x396: u32 = 0;
  let mut x397: u32 = 0;
  fiat_p224_mulx_u32(&mut x396, &mut x397, x5, (arg2[4]));
  let mut x398: u32 = 0;
  let mut x399: u32 = 0;
  fiat_p224_mulx_u32(&mut x398, &mut x399, x5, (arg2[3]));
  let mut x400: u32 = 0;
  let mut x401: u32 = 0;
  fiat_p224_mulx_u32(&mut x400, &mut x401, x5, (arg2[2]));
  let mut x402: u32 = 0;
  let mut x403: u32 = 0;
  fiat_p224_mulx_u32(&mut x402, &mut x403, x5, (arg2[1]));
  let mut x404: u32 = 0;
  let mut x405: u32 = 0;
  fiat_p224_mulx_u32(&mut x404, &mut x405, x5, (arg2[0]));
  let mut x406: u32 = 0;
  let mut x407: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x406, &mut x407, 0x0, x405, x402);
  let mut x408: u32 = 0;
  let mut x409: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x408, &mut x409, x407, x403, x400);
  let mut x410: u32 = 0;
  let mut x411: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x410, &mut x411, x409, x401, x398);
  let mut x412: u32 = 0;
  let mut x413: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x412, &mut x413, x411, x399, x396);
  let mut x414: u32 = 0;
  let mut x415: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x414, &mut x415, x413, x397, x394);
  let mut x416: u32 = 0;
  let mut x417: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x416, &mut x417, x415, x395, x392);
  let mut x418: u32 = 0;
  let mut x419: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x418, &mut x419, x417, x393, (0x0 as u32));
  let mut x420: u32 = 0;
  let mut x421: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x420, &mut x421, 0x0, x376, x404);
  let mut x422: u32 = 0;
  let mut x423: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x422, &mut x423, x421, x378, x406);
  let mut x424: u32 = 0;
  let mut x425: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x424, &mut x425, x423, x380, x408);
  let mut x426: u32 = 0;
  let mut x427: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x426, &mut x427, x425, x382, x410);
  let mut x428: u32 = 0;
  let mut x429: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x428, &mut x429, x427, x384, x412);
  let mut x430: u32 = 0;
  let mut x431: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x430, &mut x431, x429, x386, x414);
  let mut x432: u32 = 0;
  let mut x433: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x432, &mut x433, x431, x388, x416);
  let mut x434: u32 = 0;
  let mut x435: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x434, &mut x435, x433, x390, x418);
  let mut x436: u32 = 0;
  let mut x437: u32 = 0;
  fiat_p224_mulx_u32(&mut x436, &mut x437, x420, 0xffffffff);
  let mut x438: u32 = 0;
  let mut x439: u32 = 0;
  fiat_p224_mulx_u32(&mut x438, &mut x439, x436, 0xffffffff);
  let mut x440: u32 = 0;
  let mut x441: u32 = 0;
  fiat_p224_mulx_u32(&mut x440, &mut x441, x436, 0xffffffff);
  let mut x442: u32 = 0;
  let mut x443: u32 = 0;
  fiat_p224_mulx_u32(&mut x442, &mut x443, x436, 0xffffffff);
  let mut x444: u32 = 0;
  let mut x445: u32 = 0;
  fiat_p224_mulx_u32(&mut x444, &mut x445, x436, 0xffffffff);
  let mut x446: u32 = 0;
  let mut x447: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x446, &mut x447, 0x0, x445, x442);
  let mut x448: u32 = 0;
  let mut x449: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x448, &mut x449, x447, x443, x440);
  let mut x450: u32 = 0;
  let mut x451: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x450, &mut x451, x449, x441, x438);
  let mut x452: u32 = 0;
  let mut x453: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x452, &mut x453, x451, x439, (0x0 as u32));
  let mut x454: u32 = 0;
  let mut x455: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x454, &mut x455, 0x0, x420, x436);
  let mut x456: u32 = 0;
  let mut x457: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x456, &mut x457, x455, x422, (0x0 as u32));
  let mut x458: u32 = 0;
  let mut x459: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x458, &mut x459, x457, x424, (0x0 as u32));
  let mut x460: u32 = 0;
  let mut x461: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x460, &mut x461, x459, x426, x444);
  let mut x462: u32 = 0;
  let mut x463: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x462, &mut x463, x461, x428, x446);
  let mut x464: u32 = 0;
  let mut x465: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x464, &mut x465, x463, x430, x448);
  let mut x466: u32 = 0;
  let mut x467: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x466, &mut x467, x465, x432, x450);
  let mut x468: u32 = 0;
  let mut x469: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x468, &mut x469, x467, x434, x452);
  let mut x470: u32 = 0;
  let mut x471: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x470, &mut x471, x469, (x435 as u32), (0x0 as u32));
  let mut x472: u32 = 0;
  let mut x473: u32 = 0;
  fiat_p224_mulx_u32(&mut x472, &mut x473, x6, (arg2[6]));
  let mut x474: u32 = 0;
  let mut x475: u32 = 0;
  fiat_p224_mulx_u32(&mut x474, &mut x475, x6, (arg2[5]));
  let mut x476: u32 = 0;
  let mut x477: u32 = 0;
  fiat_p224_mulx_u32(&mut x476, &mut x477, x6, (arg2[4]));
  let mut x478: u32 = 0;
  let mut x479: u32 = 0;
  fiat_p224_mulx_u32(&mut x478, &mut x479, x6, (arg2[3]));
  let mut x480: u32 = 0;
  let mut x481: u32 = 0;
  fiat_p224_mulx_u32(&mut x480, &mut x481, x6, (arg2[2]));
  let mut x482: u32 = 0;
  let mut x483: u32 = 0;
  fiat_p224_mulx_u32(&mut x482, &mut x483, x6, (arg2[1]));
  let mut x484: u32 = 0;
  let mut x485: u32 = 0;
  fiat_p224_mulx_u32(&mut x484, &mut x485, x6, (arg2[0]));
  let mut x486: u32 = 0;
  let mut x487: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x486, &mut x487, 0x0, x485, x482);
  let mut x488: u32 = 0;
  let mut x489: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x488, &mut x489, x487, x483, x480);
  let mut x490: u32 = 0;
  let mut x491: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x490, &mut x491, x489, x481, x478);
  let mut x492: u32 = 0;
  let mut x493: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x492, &mut x493, x491, x479, x476);
  let mut x494: u32 = 0;
  let mut x495: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x494, &mut x495, x493, x477, x474);
  let mut x496: u32 = 0;
  let mut x497: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x496, &mut x497, x495, x475, x472);
  let mut x498: u32 = 0;
  let mut x499: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x498, &mut x499, x497, x473, (0x0 as u32));
  let mut x500: u32 = 0;
  let mut x501: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x500, &mut x501, 0x0, x456, x484);
  let mut x502: u32 = 0;
  let mut x503: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x502, &mut x503, x501, x458, x486);
  let mut x504: u32 = 0;
  let mut x505: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x504, &mut x505, x503, x460, x488);
  let mut x506: u32 = 0;
  let mut x507: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x506, &mut x507, x505, x462, x490);
  let mut x508: u32 = 0;
  let mut x509: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x508, &mut x509, x507, x464, x492);
  let mut x510: u32 = 0;
  let mut x511: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x510, &mut x511, x509, x466, x494);
  let mut x512: u32 = 0;
  let mut x513: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x512, &mut x513, x511, x468, x496);
  let mut x514: u32 = 0;
  let mut x515: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x514, &mut x515, x513, x470, x498);
  let mut x516: u32 = 0;
  let mut x517: u32 = 0;
  fiat_p224_mulx_u32(&mut x516, &mut x517, x500, 0xffffffff);
  let mut x518: u32 = 0;
  let mut x519: u32 = 0;
  fiat_p224_mulx_u32(&mut x518, &mut x519, x516, 0xffffffff);
  let mut x520: u32 = 0;
  let mut x521: u32 = 0;
  fiat_p224_mulx_u32(&mut x520, &mut x521, x516, 0xffffffff);
  let mut x522: u32 = 0;
  let mut x523: u32 = 0;
  fiat_p224_mulx_u32(&mut x522, &mut x523, x516, 0xffffffff);
  let mut x524: u32 = 0;
  let mut x525: u32 = 0;
  fiat_p224_mulx_u32(&mut x524, &mut x525, x516, 0xffffffff);
  let mut x526: u32 = 0;
  let mut x527: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x526, &mut x527, 0x0, x525, x522);
  let mut x528: u32 = 0;
  let mut x529: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x528, &mut x529, x527, x523, x520);
  let mut x530: u32 = 0;
  let mut x531: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x530, &mut x531, x529, x521, x518);
  let mut x532: u32 = 0;
  let mut x533: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x532, &mut x533, x531, x519, (0x0 as u32));
  let mut x534: u32 = 0;
  let mut x535: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x534, &mut x535, 0x0, x500, x516);
  let mut x536: u32 = 0;
  let mut x537: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x536, &mut x537, x535, x502, (0x0 as u32));
  let mut x538: u32 = 0;
  let mut x539: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x538, &mut x539, x537, x504, (0x0 as u32));
  let mut x540: u32 = 0;
  let mut x541: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x540, &mut x541, x539, x506, x524);
  let mut x542: u32 = 0;
  let mut x543: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x542, &mut x543, x541, x508, x526);
  let mut x544: u32 = 0;
  let mut x545: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x544, &mut x545, x543, x510, x528);
  let mut x546: u32 = 0;
  let mut x547: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x546, &mut x547, x545, x512, x530);
  let mut x548: u32 = 0;
  let mut x549: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x548, &mut x549, x547, x514, x532);
  let mut x550: u32 = 0;
  let mut x551: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x550, &mut x551, x549, (x515 as u32), (0x0 as u32));
  let mut x552: u32 = 0;
  let mut x553: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x552, &mut x553, 0x0, x536, (0x1 as u32));
  let mut x554: u32 = 0;
  let mut x555: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x554, &mut x555, x553, x538, (0x0 as u32));
  let mut x556: u32 = 0;
  let mut x557: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x556, &mut x557, x555, x540, (0x0 as u32));
  let mut x558: u32 = 0;
  let mut x559: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x558, &mut x559, x557, x542, 0xffffffff);
  let mut x560: u32 = 0;
  let mut x561: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x560, &mut x561, x559, x544, 0xffffffff);
  let mut x562: u32 = 0;
  let mut x563: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x562, &mut x563, x561, x546, 0xffffffff);
  let mut x564: u32 = 0;
  let mut x565: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x564, &mut x565, x563, x548, 0xffffffff);
  let mut x566: u32 = 0;
  let mut x567: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x566, &mut x567, x565, x550, (0x0 as u32));
  let mut x568: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x568, x567, x552, x536);
  let mut x569: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x569, x567, x554, x538);
  let mut x570: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x570, x567, x556, x540);
  let mut x571: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x571, x567, x558, x542);
  let mut x572: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x572, x567, x560, x544);
  let mut x573: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x573, x567, x562, x546);
  let mut x574: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x574, x567, x564, x548);
  out1[0] = x568;
  out1[1] = x569;
  out1[2] = x570;
  out1[3] = x571;
  out1[4] = x572;
  out1[5] = x573;
  out1[6] = x574;
}

/*
 * The function fiat_p224_square squares a field element in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg1)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_square(out1: &mut [u32; 7], arg1: &[u32; 7]) -> () {
  let x1: u32 = (arg1[1]);
  let x2: u32 = (arg1[2]);
  let x3: u32 = (arg1[3]);
  let x4: u32 = (arg1[4]);
  let x5: u32 = (arg1[5]);
  let x6: u32 = (arg1[6]);
  let x7: u32 = (arg1[0]);
  let mut x8: u32 = 0;
  let mut x9: u32 = 0;
  fiat_p224_mulx_u32(&mut x8, &mut x9, x7, (arg1[6]));
  let mut x10: u32 = 0;
  let mut x11: u32 = 0;
  fiat_p224_mulx_u32(&mut x10, &mut x11, x7, (arg1[5]));
  let mut x12: u32 = 0;
  let mut x13: u32 = 0;
  fiat_p224_mulx_u32(&mut x12, &mut x13, x7, (arg1[4]));
  let mut x14: u32 = 0;
  let mut x15: u32 = 0;
  fiat_p224_mulx_u32(&mut x14, &mut x15, x7, (arg1[3]));
  let mut x16: u32 = 0;
  let mut x17: u32 = 0;
  fiat_p224_mulx_u32(&mut x16, &mut x17, x7, (arg1[2]));
  let mut x18: u32 = 0;
  let mut x19: u32 = 0;
  fiat_p224_mulx_u32(&mut x18, &mut x19, x7, (arg1[1]));
  let mut x20: u32 = 0;
  let mut x21: u32 = 0;
  fiat_p224_mulx_u32(&mut x20, &mut x21, x7, (arg1[0]));
  let mut x22: u32 = 0;
  let mut x23: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x22, &mut x23, 0x0, x21, x18);
  let mut x24: u32 = 0;
  let mut x25: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x24, &mut x25, x23, x19, x16);
  let mut x26: u32 = 0;
  let mut x27: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x26, &mut x27, x25, x17, x14);
  let mut x28: u32 = 0;
  let mut x29: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x28, &mut x29, x27, x15, x12);
  let mut x30: u32 = 0;
  let mut x31: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x30, &mut x31, x29, x13, x10);
  let mut x32: u32 = 0;
  let mut x33: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x32, &mut x33, x31, x11, x8);
  let mut x34: u32 = 0;
  let mut x35: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x34, &mut x35, x33, x9, (0x0 as u32));
  let mut x36: u32 = 0;
  let mut x37: u32 = 0;
  fiat_p224_mulx_u32(&mut x36, &mut x37, x20, 0xffffffff);
  let mut x38: u32 = 0;
  let mut x39: u32 = 0;
  fiat_p224_mulx_u32(&mut x38, &mut x39, x36, 0xffffffff);
  let mut x40: u32 = 0;
  let mut x41: u32 = 0;
  fiat_p224_mulx_u32(&mut x40, &mut x41, x36, 0xffffffff);
  let mut x42: u32 = 0;
  let mut x43: u32 = 0;
  fiat_p224_mulx_u32(&mut x42, &mut x43, x36, 0xffffffff);
  let mut x44: u32 = 0;
  let mut x45: u32 = 0;
  fiat_p224_mulx_u32(&mut x44, &mut x45, x36, 0xffffffff);
  let mut x46: u32 = 0;
  let mut x47: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x46, &mut x47, 0x0, x45, x42);
  let mut x48: u32 = 0;
  let mut x49: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x48, &mut x49, x47, x43, x40);
  let mut x50: u32 = 0;
  let mut x51: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x50, &mut x51, x49, x41, x38);
  let mut x52: u32 = 0;
  let mut x53: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x52, &mut x53, x51, x39, (0x0 as u32));
  let mut x54: u32 = 0;
  let mut x55: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x54, &mut x55, 0x0, x20, x36);
  let mut x56: u32 = 0;
  let mut x57: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x56, &mut x57, x55, x22, (0x0 as u32));
  let mut x58: u32 = 0;
  let mut x59: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x58, &mut x59, x57, x24, (0x0 as u32));
  let mut x60: u32 = 0;
  let mut x61: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x60, &mut x61, x59, x26, x44);
  let mut x62: u32 = 0;
  let mut x63: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x62, &mut x63, x61, x28, x46);
  let mut x64: u32 = 0;
  let mut x65: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x64, &mut x65, x63, x30, x48);
  let mut x66: u32 = 0;
  let mut x67: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x66, &mut x67, x65, x32, x50);
  let mut x68: u32 = 0;
  let mut x69: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x68, &mut x69, x67, x34, x52);
  let mut x70: u32 = 0;
  let mut x71: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x70, &mut x71, x69, (0x0 as u32), (0x0 as u32));
  let mut x72: u32 = 0;
  let mut x73: u32 = 0;
  fiat_p224_mulx_u32(&mut x72, &mut x73, x1, (arg1[6]));
  let mut x74: u32 = 0;
  let mut x75: u32 = 0;
  fiat_p224_mulx_u32(&mut x74, &mut x75, x1, (arg1[5]));
  let mut x76: u32 = 0;
  let mut x77: u32 = 0;
  fiat_p224_mulx_u32(&mut x76, &mut x77, x1, (arg1[4]));
  let mut x78: u32 = 0;
  let mut x79: u32 = 0;
  fiat_p224_mulx_u32(&mut x78, &mut x79, x1, (arg1[3]));
  let mut x80: u32 = 0;
  let mut x81: u32 = 0;
  fiat_p224_mulx_u32(&mut x80, &mut x81, x1, (arg1[2]));
  let mut x82: u32 = 0;
  let mut x83: u32 = 0;
  fiat_p224_mulx_u32(&mut x82, &mut x83, x1, (arg1[1]));
  let mut x84: u32 = 0;
  let mut x85: u32 = 0;
  fiat_p224_mulx_u32(&mut x84, &mut x85, x1, (arg1[0]));
  let mut x86: u32 = 0;
  let mut x87: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x86, &mut x87, 0x0, x85, x82);
  let mut x88: u32 = 0;
  let mut x89: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x88, &mut x89, x87, x83, x80);
  let mut x90: u32 = 0;
  let mut x91: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x90, &mut x91, x89, x81, x78);
  let mut x92: u32 = 0;
  let mut x93: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x92, &mut x93, x91, x79, x76);
  let mut x94: u32 = 0;
  let mut x95: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x94, &mut x95, x93, x77, x74);
  let mut x96: u32 = 0;
  let mut x97: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x96, &mut x97, x95, x75, x72);
  let mut x98: u32 = 0;
  let mut x99: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x98, &mut x99, x97, x73, (0x0 as u32));
  let mut x100: u32 = 0;
  let mut x101: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x100, &mut x101, 0x0, x56, x84);
  let mut x102: u32 = 0;
  let mut x103: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x102, &mut x103, x101, x58, x86);
  let mut x104: u32 = 0;
  let mut x105: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x104, &mut x105, x103, x60, x88);
  let mut x106: u32 = 0;
  let mut x107: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x106, &mut x107, x105, x62, x90);
  let mut x108: u32 = 0;
  let mut x109: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x108, &mut x109, x107, x64, x92);
  let mut x110: u32 = 0;
  let mut x111: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x110, &mut x111, x109, x66, x94);
  let mut x112: u32 = 0;
  let mut x113: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x112, &mut x113, x111, x68, x96);
  let mut x114: u32 = 0;
  let mut x115: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x114, &mut x115, x113, ((x70 as fiat_p224_u1) as u32), x98);
  let mut x116: u32 = 0;
  let mut x117: u32 = 0;
  fiat_p224_mulx_u32(&mut x116, &mut x117, x100, 0xffffffff);
  let mut x118: u32 = 0;
  let mut x119: u32 = 0;
  fiat_p224_mulx_u32(&mut x118, &mut x119, x116, 0xffffffff);
  let mut x120: u32 = 0;
  let mut x121: u32 = 0;
  fiat_p224_mulx_u32(&mut x120, &mut x121, x116, 0xffffffff);
  let mut x122: u32 = 0;
  let mut x123: u32 = 0;
  fiat_p224_mulx_u32(&mut x122, &mut x123, x116, 0xffffffff);
  let mut x124: u32 = 0;
  let mut x125: u32 = 0;
  fiat_p224_mulx_u32(&mut x124, &mut x125, x116, 0xffffffff);
  let mut x126: u32 = 0;
  let mut x127: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x126, &mut x127, 0x0, x125, x122);
  let mut x128: u32 = 0;
  let mut x129: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x128, &mut x129, x127, x123, x120);
  let mut x130: u32 = 0;
  let mut x131: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x130, &mut x131, x129, x121, x118);
  let mut x132: u32 = 0;
  let mut x133: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x132, &mut x133, x131, x119, (0x0 as u32));
  let mut x134: u32 = 0;
  let mut x135: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x134, &mut x135, 0x0, x100, x116);
  let mut x136: u32 = 0;
  let mut x137: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x136, &mut x137, x135, x102, (0x0 as u32));
  let mut x138: u32 = 0;
  let mut x139: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x138, &mut x139, x137, x104, (0x0 as u32));
  let mut x140: u32 = 0;
  let mut x141: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x140, &mut x141, x139, x106, x124);
  let mut x142: u32 = 0;
  let mut x143: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x142, &mut x143, x141, x108, x126);
  let mut x144: u32 = 0;
  let mut x145: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x144, &mut x145, x143, x110, x128);
  let mut x146: u32 = 0;
  let mut x147: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x146, &mut x147, x145, x112, x130);
  let mut x148: u32 = 0;
  let mut x149: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x148, &mut x149, x147, x114, x132);
  let mut x150: u32 = 0;
  let mut x151: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x150, &mut x151, x149, (x115 as u32), (0x0 as u32));
  let mut x152: u32 = 0;
  let mut x153: u32 = 0;
  fiat_p224_mulx_u32(&mut x152, &mut x153, x2, (arg1[6]));
  let mut x154: u32 = 0;
  let mut x155: u32 = 0;
  fiat_p224_mulx_u32(&mut x154, &mut x155, x2, (arg1[5]));
  let mut x156: u32 = 0;
  let mut x157: u32 = 0;
  fiat_p224_mulx_u32(&mut x156, &mut x157, x2, (arg1[4]));
  let mut x158: u32 = 0;
  let mut x159: u32 = 0;
  fiat_p224_mulx_u32(&mut x158, &mut x159, x2, (arg1[3]));
  let mut x160: u32 = 0;
  let mut x161: u32 = 0;
  fiat_p224_mulx_u32(&mut x160, &mut x161, x2, (arg1[2]));
  let mut x162: u32 = 0;
  let mut x163: u32 = 0;
  fiat_p224_mulx_u32(&mut x162, &mut x163, x2, (arg1[1]));
  let mut x164: u32 = 0;
  let mut x165: u32 = 0;
  fiat_p224_mulx_u32(&mut x164, &mut x165, x2, (arg1[0]));
  let mut x166: u32 = 0;
  let mut x167: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x166, &mut x167, 0x0, x165, x162);
  let mut x168: u32 = 0;
  let mut x169: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x168, &mut x169, x167, x163, x160);
  let mut x170: u32 = 0;
  let mut x171: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x170, &mut x171, x169, x161, x158);
  let mut x172: u32 = 0;
  let mut x173: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x172, &mut x173, x171, x159, x156);
  let mut x174: u32 = 0;
  let mut x175: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x174, &mut x175, x173, x157, x154);
  let mut x176: u32 = 0;
  let mut x177: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x176, &mut x177, x175, x155, x152);
  let mut x178: u32 = 0;
  let mut x179: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x178, &mut x179, x177, x153, (0x0 as u32));
  let mut x180: u32 = 0;
  let mut x181: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x180, &mut x181, 0x0, x136, x164);
  let mut x182: u32 = 0;
  let mut x183: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x182, &mut x183, x181, x138, x166);
  let mut x184: u32 = 0;
  let mut x185: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x184, &mut x185, x183, x140, x168);
  let mut x186: u32 = 0;
  let mut x187: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x186, &mut x187, x185, x142, x170);
  let mut x188: u32 = 0;
  let mut x189: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x188, &mut x189, x187, x144, x172);
  let mut x190: u32 = 0;
  let mut x191: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x190, &mut x191, x189, x146, x174);
  let mut x192: u32 = 0;
  let mut x193: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x192, &mut x193, x191, x148, x176);
  let mut x194: u32 = 0;
  let mut x195: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x194, &mut x195, x193, x150, x178);
  let mut x196: u32 = 0;
  let mut x197: u32 = 0;
  fiat_p224_mulx_u32(&mut x196, &mut x197, x180, 0xffffffff);
  let mut x198: u32 = 0;
  let mut x199: u32 = 0;
  fiat_p224_mulx_u32(&mut x198, &mut x199, x196, 0xffffffff);
  let mut x200: u32 = 0;
  let mut x201: u32 = 0;
  fiat_p224_mulx_u32(&mut x200, &mut x201, x196, 0xffffffff);
  let mut x202: u32 = 0;
  let mut x203: u32 = 0;
  fiat_p224_mulx_u32(&mut x202, &mut x203, x196, 0xffffffff);
  let mut x204: u32 = 0;
  let mut x205: u32 = 0;
  fiat_p224_mulx_u32(&mut x204, &mut x205, x196, 0xffffffff);
  let mut x206: u32 = 0;
  let mut x207: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x206, &mut x207, 0x0, x205, x202);
  let mut x208: u32 = 0;
  let mut x209: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x208, &mut x209, x207, x203, x200);
  let mut x210: u32 = 0;
  let mut x211: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x210, &mut x211, x209, x201, x198);
  let mut x212: u32 = 0;
  let mut x213: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x212, &mut x213, x211, x199, (0x0 as u32));
  let mut x214: u32 = 0;
  let mut x215: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x214, &mut x215, 0x0, x180, x196);
  let mut x216: u32 = 0;
  let mut x217: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x216, &mut x217, x215, x182, (0x0 as u32));
  let mut x218: u32 = 0;
  let mut x219: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x218, &mut x219, x217, x184, (0x0 as u32));
  let mut x220: u32 = 0;
  let mut x221: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x220, &mut x221, x219, x186, x204);
  let mut x222: u32 = 0;
  let mut x223: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x222, &mut x223, x221, x188, x206);
  let mut x224: u32 = 0;
  let mut x225: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x224, &mut x225, x223, x190, x208);
  let mut x226: u32 = 0;
  let mut x227: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x226, &mut x227, x225, x192, x210);
  let mut x228: u32 = 0;
  let mut x229: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x228, &mut x229, x227, x194, x212);
  let mut x230: u32 = 0;
  let mut x231: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x230, &mut x231, x229, (x195 as u32), (0x0 as u32));
  let mut x232: u32 = 0;
  let mut x233: u32 = 0;
  fiat_p224_mulx_u32(&mut x232, &mut x233, x3, (arg1[6]));
  let mut x234: u32 = 0;
  let mut x235: u32 = 0;
  fiat_p224_mulx_u32(&mut x234, &mut x235, x3, (arg1[5]));
  let mut x236: u32 = 0;
  let mut x237: u32 = 0;
  fiat_p224_mulx_u32(&mut x236, &mut x237, x3, (arg1[4]));
  let mut x238: u32 = 0;
  let mut x239: u32 = 0;
  fiat_p224_mulx_u32(&mut x238, &mut x239, x3, (arg1[3]));
  let mut x240: u32 = 0;
  let mut x241: u32 = 0;
  fiat_p224_mulx_u32(&mut x240, &mut x241, x3, (arg1[2]));
  let mut x242: u32 = 0;
  let mut x243: u32 = 0;
  fiat_p224_mulx_u32(&mut x242, &mut x243, x3, (arg1[1]));
  let mut x244: u32 = 0;
  let mut x245: u32 = 0;
  fiat_p224_mulx_u32(&mut x244, &mut x245, x3, (arg1[0]));
  let mut x246: u32 = 0;
  let mut x247: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x246, &mut x247, 0x0, x245, x242);
  let mut x248: u32 = 0;
  let mut x249: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x248, &mut x249, x247, x243, x240);
  let mut x250: u32 = 0;
  let mut x251: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x250, &mut x251, x249, x241, x238);
  let mut x252: u32 = 0;
  let mut x253: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x252, &mut x253, x251, x239, x236);
  let mut x254: u32 = 0;
  let mut x255: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x254, &mut x255, x253, x237, x234);
  let mut x256: u32 = 0;
  let mut x257: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x256, &mut x257, x255, x235, x232);
  let mut x258: u32 = 0;
  let mut x259: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x258, &mut x259, x257, x233, (0x0 as u32));
  let mut x260: u32 = 0;
  let mut x261: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x260, &mut x261, 0x0, x216, x244);
  let mut x262: u32 = 0;
  let mut x263: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x262, &mut x263, x261, x218, x246);
  let mut x264: u32 = 0;
  let mut x265: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x264, &mut x265, x263, x220, x248);
  let mut x266: u32 = 0;
  let mut x267: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x266, &mut x267, x265, x222, x250);
  let mut x268: u32 = 0;
  let mut x269: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x268, &mut x269, x267, x224, x252);
  let mut x270: u32 = 0;
  let mut x271: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x270, &mut x271, x269, x226, x254);
  let mut x272: u32 = 0;
  let mut x273: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x272, &mut x273, x271, x228, x256);
  let mut x274: u32 = 0;
  let mut x275: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x274, &mut x275, x273, x230, x258);
  let mut x276: u32 = 0;
  let mut x277: u32 = 0;
  fiat_p224_mulx_u32(&mut x276, &mut x277, x260, 0xffffffff);
  let mut x278: u32 = 0;
  let mut x279: u32 = 0;
  fiat_p224_mulx_u32(&mut x278, &mut x279, x276, 0xffffffff);
  let mut x280: u32 = 0;
  let mut x281: u32 = 0;
  fiat_p224_mulx_u32(&mut x280, &mut x281, x276, 0xffffffff);
  let mut x282: u32 = 0;
  let mut x283: u32 = 0;
  fiat_p224_mulx_u32(&mut x282, &mut x283, x276, 0xffffffff);
  let mut x284: u32 = 0;
  let mut x285: u32 = 0;
  fiat_p224_mulx_u32(&mut x284, &mut x285, x276, 0xffffffff);
  let mut x286: u32 = 0;
  let mut x287: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x286, &mut x287, 0x0, x285, x282);
  let mut x288: u32 = 0;
  let mut x289: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x288, &mut x289, x287, x283, x280);
  let mut x290: u32 = 0;
  let mut x291: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x290, &mut x291, x289, x281, x278);
  let mut x292: u32 = 0;
  let mut x293: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x292, &mut x293, x291, x279, (0x0 as u32));
  let mut x294: u32 = 0;
  let mut x295: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x294, &mut x295, 0x0, x260, x276);
  let mut x296: u32 = 0;
  let mut x297: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x296, &mut x297, x295, x262, (0x0 as u32));
  let mut x298: u32 = 0;
  let mut x299: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x298, &mut x299, x297, x264, (0x0 as u32));
  let mut x300: u32 = 0;
  let mut x301: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x300, &mut x301, x299, x266, x284);
  let mut x302: u32 = 0;
  let mut x303: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x302, &mut x303, x301, x268, x286);
  let mut x304: u32 = 0;
  let mut x305: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x304, &mut x305, x303, x270, x288);
  let mut x306: u32 = 0;
  let mut x307: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x306, &mut x307, x305, x272, x290);
  let mut x308: u32 = 0;
  let mut x309: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x308, &mut x309, x307, x274, x292);
  let mut x310: u32 = 0;
  let mut x311: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x310, &mut x311, x309, (x275 as u32), (0x0 as u32));
  let mut x312: u32 = 0;
  let mut x313: u32 = 0;
  fiat_p224_mulx_u32(&mut x312, &mut x313, x4, (arg1[6]));
  let mut x314: u32 = 0;
  let mut x315: u32 = 0;
  fiat_p224_mulx_u32(&mut x314, &mut x315, x4, (arg1[5]));
  let mut x316: u32 = 0;
  let mut x317: u32 = 0;
  fiat_p224_mulx_u32(&mut x316, &mut x317, x4, (arg1[4]));
  let mut x318: u32 = 0;
  let mut x319: u32 = 0;
  fiat_p224_mulx_u32(&mut x318, &mut x319, x4, (arg1[3]));
  let mut x320: u32 = 0;
  let mut x321: u32 = 0;
  fiat_p224_mulx_u32(&mut x320, &mut x321, x4, (arg1[2]));
  let mut x322: u32 = 0;
  let mut x323: u32 = 0;
  fiat_p224_mulx_u32(&mut x322, &mut x323, x4, (arg1[1]));
  let mut x324: u32 = 0;
  let mut x325: u32 = 0;
  fiat_p224_mulx_u32(&mut x324, &mut x325, x4, (arg1[0]));
  let mut x326: u32 = 0;
  let mut x327: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x326, &mut x327, 0x0, x325, x322);
  let mut x328: u32 = 0;
  let mut x329: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x328, &mut x329, x327, x323, x320);
  let mut x330: u32 = 0;
  let mut x331: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x330, &mut x331, x329, x321, x318);
  let mut x332: u32 = 0;
  let mut x333: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x332, &mut x333, x331, x319, x316);
  let mut x334: u32 = 0;
  let mut x335: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x334, &mut x335, x333, x317, x314);
  let mut x336: u32 = 0;
  let mut x337: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x336, &mut x337, x335, x315, x312);
  let mut x338: u32 = 0;
  let mut x339: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x338, &mut x339, x337, x313, (0x0 as u32));
  let mut x340: u32 = 0;
  let mut x341: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x340, &mut x341, 0x0, x296, x324);
  let mut x342: u32 = 0;
  let mut x343: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x342, &mut x343, x341, x298, x326);
  let mut x344: u32 = 0;
  let mut x345: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x344, &mut x345, x343, x300, x328);
  let mut x346: u32 = 0;
  let mut x347: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x346, &mut x347, x345, x302, x330);
  let mut x348: u32 = 0;
  let mut x349: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x348, &mut x349, x347, x304, x332);
  let mut x350: u32 = 0;
  let mut x351: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x350, &mut x351, x349, x306, x334);
  let mut x352: u32 = 0;
  let mut x353: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x352, &mut x353, x351, x308, x336);
  let mut x354: u32 = 0;
  let mut x355: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x354, &mut x355, x353, x310, x338);
  let mut x356: u32 = 0;
  let mut x357: u32 = 0;
  fiat_p224_mulx_u32(&mut x356, &mut x357, x340, 0xffffffff);
  let mut x358: u32 = 0;
  let mut x359: u32 = 0;
  fiat_p224_mulx_u32(&mut x358, &mut x359, x356, 0xffffffff);
  let mut x360: u32 = 0;
  let mut x361: u32 = 0;
  fiat_p224_mulx_u32(&mut x360, &mut x361, x356, 0xffffffff);
  let mut x362: u32 = 0;
  let mut x363: u32 = 0;
  fiat_p224_mulx_u32(&mut x362, &mut x363, x356, 0xffffffff);
  let mut x364: u32 = 0;
  let mut x365: u32 = 0;
  fiat_p224_mulx_u32(&mut x364, &mut x365, x356, 0xffffffff);
  let mut x366: u32 = 0;
  let mut x367: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x366, &mut x367, 0x0, x365, x362);
  let mut x368: u32 = 0;
  let mut x369: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x368, &mut x369, x367, x363, x360);
  let mut x370: u32 = 0;
  let mut x371: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x370, &mut x371, x369, x361, x358);
  let mut x372: u32 = 0;
  let mut x373: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x372, &mut x373, x371, x359, (0x0 as u32));
  let mut x374: u32 = 0;
  let mut x375: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x374, &mut x375, 0x0, x340, x356);
  let mut x376: u32 = 0;
  let mut x377: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x376, &mut x377, x375, x342, (0x0 as u32));
  let mut x378: u32 = 0;
  let mut x379: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x378, &mut x379, x377, x344, (0x0 as u32));
  let mut x380: u32 = 0;
  let mut x381: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x380, &mut x381, x379, x346, x364);
  let mut x382: u32 = 0;
  let mut x383: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x382, &mut x383, x381, x348, x366);
  let mut x384: u32 = 0;
  let mut x385: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x384, &mut x385, x383, x350, x368);
  let mut x386: u32 = 0;
  let mut x387: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x386, &mut x387, x385, x352, x370);
  let mut x388: u32 = 0;
  let mut x389: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x388, &mut x389, x387, x354, x372);
  let mut x390: u32 = 0;
  let mut x391: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x390, &mut x391, x389, (x355 as u32), (0x0 as u32));
  let mut x392: u32 = 0;
  let mut x393: u32 = 0;
  fiat_p224_mulx_u32(&mut x392, &mut x393, x5, (arg1[6]));
  let mut x394: u32 = 0;
  let mut x395: u32 = 0;
  fiat_p224_mulx_u32(&mut x394, &mut x395, x5, (arg1[5]));
  let mut x396: u32 = 0;
  let mut x397: u32 = 0;
  fiat_p224_mulx_u32(&mut x396, &mut x397, x5, (arg1[4]));
  let mut x398: u32 = 0;
  let mut x399: u32 = 0;
  fiat_p224_mulx_u32(&mut x398, &mut x399, x5, (arg1[3]));
  let mut x400: u32 = 0;
  let mut x401: u32 = 0;
  fiat_p224_mulx_u32(&mut x400, &mut x401, x5, (arg1[2]));
  let mut x402: u32 = 0;
  let mut x403: u32 = 0;
  fiat_p224_mulx_u32(&mut x402, &mut x403, x5, (arg1[1]));
  let mut x404: u32 = 0;
  let mut x405: u32 = 0;
  fiat_p224_mulx_u32(&mut x404, &mut x405, x5, (arg1[0]));
  let mut x406: u32 = 0;
  let mut x407: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x406, &mut x407, 0x0, x405, x402);
  let mut x408: u32 = 0;
  let mut x409: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x408, &mut x409, x407, x403, x400);
  let mut x410: u32 = 0;
  let mut x411: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x410, &mut x411, x409, x401, x398);
  let mut x412: u32 = 0;
  let mut x413: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x412, &mut x413, x411, x399, x396);
  let mut x414: u32 = 0;
  let mut x415: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x414, &mut x415, x413, x397, x394);
  let mut x416: u32 = 0;
  let mut x417: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x416, &mut x417, x415, x395, x392);
  let mut x418: u32 = 0;
  let mut x419: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x418, &mut x419, x417, x393, (0x0 as u32));
  let mut x420: u32 = 0;
  let mut x421: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x420, &mut x421, 0x0, x376, x404);
  let mut x422: u32 = 0;
  let mut x423: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x422, &mut x423, x421, x378, x406);
  let mut x424: u32 = 0;
  let mut x425: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x424, &mut x425, x423, x380, x408);
  let mut x426: u32 = 0;
  let mut x427: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x426, &mut x427, x425, x382, x410);
  let mut x428: u32 = 0;
  let mut x429: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x428, &mut x429, x427, x384, x412);
  let mut x430: u32 = 0;
  let mut x431: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x430, &mut x431, x429, x386, x414);
  let mut x432: u32 = 0;
  let mut x433: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x432, &mut x433, x431, x388, x416);
  let mut x434: u32 = 0;
  let mut x435: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x434, &mut x435, x433, x390, x418);
  let mut x436: u32 = 0;
  let mut x437: u32 = 0;
  fiat_p224_mulx_u32(&mut x436, &mut x437, x420, 0xffffffff);
  let mut x438: u32 = 0;
  let mut x439: u32 = 0;
  fiat_p224_mulx_u32(&mut x438, &mut x439, x436, 0xffffffff);
  let mut x440: u32 = 0;
  let mut x441: u32 = 0;
  fiat_p224_mulx_u32(&mut x440, &mut x441, x436, 0xffffffff);
  let mut x442: u32 = 0;
  let mut x443: u32 = 0;
  fiat_p224_mulx_u32(&mut x442, &mut x443, x436, 0xffffffff);
  let mut x444: u32 = 0;
  let mut x445: u32 = 0;
  fiat_p224_mulx_u32(&mut x444, &mut x445, x436, 0xffffffff);
  let mut x446: u32 = 0;
  let mut x447: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x446, &mut x447, 0x0, x445, x442);
  let mut x448: u32 = 0;
  let mut x449: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x448, &mut x449, x447, x443, x440);
  let mut x450: u32 = 0;
  let mut x451: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x450, &mut x451, x449, x441, x438);
  let mut x452: u32 = 0;
  let mut x453: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x452, &mut x453, x451, x439, (0x0 as u32));
  let mut x454: u32 = 0;
  let mut x455: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x454, &mut x455, 0x0, x420, x436);
  let mut x456: u32 = 0;
  let mut x457: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x456, &mut x457, x455, x422, (0x0 as u32));
  let mut x458: u32 = 0;
  let mut x459: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x458, &mut x459, x457, x424, (0x0 as u32));
  let mut x460: u32 = 0;
  let mut x461: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x460, &mut x461, x459, x426, x444);
  let mut x462: u32 = 0;
  let mut x463: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x462, &mut x463, x461, x428, x446);
  let mut x464: u32 = 0;
  let mut x465: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x464, &mut x465, x463, x430, x448);
  let mut x466: u32 = 0;
  let mut x467: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x466, &mut x467, x465, x432, x450);
  let mut x468: u32 = 0;
  let mut x469: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x468, &mut x469, x467, x434, x452);
  let mut x470: u32 = 0;
  let mut x471: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x470, &mut x471, x469, (x435 as u32), (0x0 as u32));
  let mut x472: u32 = 0;
  let mut x473: u32 = 0;
  fiat_p224_mulx_u32(&mut x472, &mut x473, x6, (arg1[6]));
  let mut x474: u32 = 0;
  let mut x475: u32 = 0;
  fiat_p224_mulx_u32(&mut x474, &mut x475, x6, (arg1[5]));
  let mut x476: u32 = 0;
  let mut x477: u32 = 0;
  fiat_p224_mulx_u32(&mut x476, &mut x477, x6, (arg1[4]));
  let mut x478: u32 = 0;
  let mut x479: u32 = 0;
  fiat_p224_mulx_u32(&mut x478, &mut x479, x6, (arg1[3]));
  let mut x480: u32 = 0;
  let mut x481: u32 = 0;
  fiat_p224_mulx_u32(&mut x480, &mut x481, x6, (arg1[2]));
  let mut x482: u32 = 0;
  let mut x483: u32 = 0;
  fiat_p224_mulx_u32(&mut x482, &mut x483, x6, (arg1[1]));
  let mut x484: u32 = 0;
  let mut x485: u32 = 0;
  fiat_p224_mulx_u32(&mut x484, &mut x485, x6, (arg1[0]));
  let mut x486: u32 = 0;
  let mut x487: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x486, &mut x487, 0x0, x485, x482);
  let mut x488: u32 = 0;
  let mut x489: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x488, &mut x489, x487, x483, x480);
  let mut x490: u32 = 0;
  let mut x491: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x490, &mut x491, x489, x481, x478);
  let mut x492: u32 = 0;
  let mut x493: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x492, &mut x493, x491, x479, x476);
  let mut x494: u32 = 0;
  let mut x495: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x494, &mut x495, x493, x477, x474);
  let mut x496: u32 = 0;
  let mut x497: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x496, &mut x497, x495, x475, x472);
  let mut x498: u32 = 0;
  let mut x499: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x498, &mut x499, x497, x473, (0x0 as u32));
  let mut x500: u32 = 0;
  let mut x501: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x500, &mut x501, 0x0, x456, x484);
  let mut x502: u32 = 0;
  let mut x503: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x502, &mut x503, x501, x458, x486);
  let mut x504: u32 = 0;
  let mut x505: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x504, &mut x505, x503, x460, x488);
  let mut x506: u32 = 0;
  let mut x507: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x506, &mut x507, x505, x462, x490);
  let mut x508: u32 = 0;
  let mut x509: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x508, &mut x509, x507, x464, x492);
  let mut x510: u32 = 0;
  let mut x511: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x510, &mut x511, x509, x466, x494);
  let mut x512: u32 = 0;
  let mut x513: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x512, &mut x513, x511, x468, x496);
  let mut x514: u32 = 0;
  let mut x515: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x514, &mut x515, x513, x470, x498);
  let mut x516: u32 = 0;
  let mut x517: u32 = 0;
  fiat_p224_mulx_u32(&mut x516, &mut x517, x500, 0xffffffff);
  let mut x518: u32 = 0;
  let mut x519: u32 = 0;
  fiat_p224_mulx_u32(&mut x518, &mut x519, x516, 0xffffffff);
  let mut x520: u32 = 0;
  let mut x521: u32 = 0;
  fiat_p224_mulx_u32(&mut x520, &mut x521, x516, 0xffffffff);
  let mut x522: u32 = 0;
  let mut x523: u32 = 0;
  fiat_p224_mulx_u32(&mut x522, &mut x523, x516, 0xffffffff);
  let mut x524: u32 = 0;
  let mut x525: u32 = 0;
  fiat_p224_mulx_u32(&mut x524, &mut x525, x516, 0xffffffff);
  let mut x526: u32 = 0;
  let mut x527: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x526, &mut x527, 0x0, x525, x522);
  let mut x528: u32 = 0;
  let mut x529: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x528, &mut x529, x527, x523, x520);
  let mut x530: u32 = 0;
  let mut x531: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x530, &mut x531, x529, x521, x518);
  let mut x532: u32 = 0;
  let mut x533: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x532, &mut x533, x531, x519, (0x0 as u32));
  let mut x534: u32 = 0;
  let mut x535: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x534, &mut x535, 0x0, x500, x516);
  let mut x536: u32 = 0;
  let mut x537: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x536, &mut x537, x535, x502, (0x0 as u32));
  let mut x538: u32 = 0;
  let mut x539: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x538, &mut x539, x537, x504, (0x0 as u32));
  let mut x540: u32 = 0;
  let mut x541: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x540, &mut x541, x539, x506, x524);
  let mut x542: u32 = 0;
  let mut x543: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x542, &mut x543, x541, x508, x526);
  let mut x544: u32 = 0;
  let mut x545: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x544, &mut x545, x543, x510, x528);
  let mut x546: u32 = 0;
  let mut x547: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x546, &mut x547, x545, x512, x530);
  let mut x548: u32 = 0;
  let mut x549: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x548, &mut x549, x547, x514, x532);
  let mut x550: u32 = 0;
  let mut x551: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x550, &mut x551, x549, (x515 as u32), (0x0 as u32));
  let mut x552: u32 = 0;
  let mut x553: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x552, &mut x553, 0x0, x536, (0x1 as u32));
  let mut x554: u32 = 0;
  let mut x555: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x554, &mut x555, x553, x538, (0x0 as u32));
  let mut x556: u32 = 0;
  let mut x557: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x556, &mut x557, x555, x540, (0x0 as u32));
  let mut x558: u32 = 0;
  let mut x559: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x558, &mut x559, x557, x542, 0xffffffff);
  let mut x560: u32 = 0;
  let mut x561: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x560, &mut x561, x559, x544, 0xffffffff);
  let mut x562: u32 = 0;
  let mut x563: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x562, &mut x563, x561, x546, 0xffffffff);
  let mut x564: u32 = 0;
  let mut x565: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x564, &mut x565, x563, x548, 0xffffffff);
  let mut x566: u32 = 0;
  let mut x567: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x566, &mut x567, x565, x550, (0x0 as u32));
  let mut x568: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x568, x567, x552, x536);
  let mut x569: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x569, x567, x554, x538);
  let mut x570: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x570, x567, x556, x540);
  let mut x571: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x571, x567, x558, x542);
  let mut x572: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x572, x567, x560, x544);
  let mut x573: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x573, x567, x562, x546);
  let mut x574: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x574, x567, x564, x548);
  out1[0] = x568;
  out1[1] = x569;
  out1[2] = x570;
  out1[3] = x571;
  out1[4] = x572;
  out1[5] = x573;
  out1[6] = x574;
}

/*
 * The function fiat_p224_add adds two field elements in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 *   0 ≤ eval arg2 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) + eval (from_montgomery arg2)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_add(out1: &mut [u32; 7], arg1: &[u32; 7], arg2: &[u32; 7]) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x1, &mut x2, 0x0, (arg1[0]), (arg2[0]));
  let mut x3: u32 = 0;
  let mut x4: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x3, &mut x4, x2, (arg1[1]), (arg2[1]));
  let mut x5: u32 = 0;
  let mut x6: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x5, &mut x6, x4, (arg1[2]), (arg2[2]));
  let mut x7: u32 = 0;
  let mut x8: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x7, &mut x8, x6, (arg1[3]), (arg2[3]));
  let mut x9: u32 = 0;
  let mut x10: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x9, &mut x10, x8, (arg1[4]), (arg2[4]));
  let mut x11: u32 = 0;
  let mut x12: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x11, &mut x12, x10, (arg1[5]), (arg2[5]));
  let mut x13: u32 = 0;
  let mut x14: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x13, &mut x14, x12, (arg1[6]), (arg2[6]));
  let mut x15: u32 = 0;
  let mut x16: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x15, &mut x16, 0x0, x1, (0x1 as u32));
  let mut x17: u32 = 0;
  let mut x18: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x17, &mut x18, x16, x3, (0x0 as u32));
  let mut x19: u32 = 0;
  let mut x20: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x19, &mut x20, x18, x5, (0x0 as u32));
  let mut x21: u32 = 0;
  let mut x22: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x21, &mut x22, x20, x7, 0xffffffff);
  let mut x23: u32 = 0;
  let mut x24: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x23, &mut x24, x22, x9, 0xffffffff);
  let mut x25: u32 = 0;
  let mut x26: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x25, &mut x26, x24, x11, 0xffffffff);
  let mut x27: u32 = 0;
  let mut x28: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x27, &mut x28, x26, x13, 0xffffffff);
  let mut x29: u32 = 0;
  let mut x30: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x29, &mut x30, x28, (x14 as u32), (0x0 as u32));
  let mut x31: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x31, x30, x15, x1);
  let mut x32: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x32, x30, x17, x3);
  let mut x33: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x33, x30, x19, x5);
  let mut x34: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x34, x30, x21, x7);
  let mut x35: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x35, x30, x23, x9);
  let mut x36: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x36, x30, x25, x11);
  let mut x37: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x37, x30, x27, x13);
  out1[0] = x31;
  out1[1] = x32;
  out1[2] = x33;
  out1[3] = x34;
  out1[4] = x35;
  out1[5] = x36;
  out1[6] = x37;
}

/*
 * The function fiat_p224_sub subtracts two field elements in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 *   0 ≤ eval arg2 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) - eval (from_montgomery arg2)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_sub(out1: &mut [u32; 7], arg1: &[u32; 7], arg2: &[u32; 7]) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x1, &mut x2, 0x0, (arg1[0]), (arg2[0]));
  let mut x3: u32 = 0;
  let mut x4: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x3, &mut x4, x2, (arg1[1]), (arg2[1]));
  let mut x5: u32 = 0;
  let mut x6: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x5, &mut x6, x4, (arg1[2]), (arg2[2]));
  let mut x7: u32 = 0;
  let mut x8: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x7, &mut x8, x6, (arg1[3]), (arg2[3]));
  let mut x9: u32 = 0;
  let mut x10: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x9, &mut x10, x8, (arg1[4]), (arg2[4]));
  let mut x11: u32 = 0;
  let mut x12: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x11, &mut x12, x10, (arg1[5]), (arg2[5]));
  let mut x13: u32 = 0;
  let mut x14: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x13, &mut x14, x12, (arg1[6]), (arg2[6]));
  let mut x15: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x15, x14, (0x0 as u32), 0xffffffff);
  let mut x16: u32 = 0;
  let mut x17: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x16, &mut x17, 0x0, x1, (((x15 & (0x1 as u32)) as fiat_p224_u1) as u32));
  let mut x18: u32 = 0;
  let mut x19: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x18, &mut x19, x17, x3, (0x0 as u32));
  let mut x20: u32 = 0;
  let mut x21: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x20, &mut x21, x19, x5, (0x0 as u32));
  let mut x22: u32 = 0;
  let mut x23: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x22, &mut x23, x21, x7, (x15 & 0xffffffff));
  let mut x24: u32 = 0;
  let mut x25: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x24, &mut x25, x23, x9, (x15 & 0xffffffff));
  let mut x26: u32 = 0;
  let mut x27: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x26, &mut x27, x25, x11, (x15 & 0xffffffff));
  let mut x28: u32 = 0;
  let mut x29: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x28, &mut x29, x27, x13, (x15 & 0xffffffff));
  out1[0] = x16;
  out1[1] = x18;
  out1[2] = x20;
  out1[3] = x22;
  out1[4] = x24;
  out1[5] = x26;
  out1[6] = x28;
}

/*
 * The function fiat_p224_opp negates a field element in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = -eval (from_montgomery arg1) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_opp(out1: &mut [u32; 7], arg1: &[u32; 7]) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x1, &mut x2, 0x0, (0x0 as u32), (arg1[0]));
  let mut x3: u32 = 0;
  let mut x4: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x3, &mut x4, x2, (0x0 as u32), (arg1[1]));
  let mut x5: u32 = 0;
  let mut x6: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x5, &mut x6, x4, (0x0 as u32), (arg1[2]));
  let mut x7: u32 = 0;
  let mut x8: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x7, &mut x8, x6, (0x0 as u32), (arg1[3]));
  let mut x9: u32 = 0;
  let mut x10: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x9, &mut x10, x8, (0x0 as u32), (arg1[4]));
  let mut x11: u32 = 0;
  let mut x12: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x11, &mut x12, x10, (0x0 as u32), (arg1[5]));
  let mut x13: u32 = 0;
  let mut x14: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x13, &mut x14, x12, (0x0 as u32), (arg1[6]));
  let mut x15: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x15, x14, (0x0 as u32), 0xffffffff);
  let mut x16: u32 = 0;
  let mut x17: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x16, &mut x17, 0x0, x1, (((x15 & (0x1 as u32)) as fiat_p224_u1) as u32));
  let mut x18: u32 = 0;
  let mut x19: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x18, &mut x19, x17, x3, (0x0 as u32));
  let mut x20: u32 = 0;
  let mut x21: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x20, &mut x21, x19, x5, (0x0 as u32));
  let mut x22: u32 = 0;
  let mut x23: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x22, &mut x23, x21, x7, (x15 & 0xffffffff));
  let mut x24: u32 = 0;
  let mut x25: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x24, &mut x25, x23, x9, (x15 & 0xffffffff));
  let mut x26: u32 = 0;
  let mut x27: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x26, &mut x27, x25, x11, (x15 & 0xffffffff));
  let mut x28: u32 = 0;
  let mut x29: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x28, &mut x29, x27, x13, (x15 & 0xffffffff));
  out1[0] = x16;
  out1[1] = x18;
  out1[2] = x20;
  out1[3] = x22;
  out1[4] = x24;
  out1[5] = x26;
  out1[6] = x28;
}

/*
 * The function fiat_p224_from_montgomery translates a field element out of the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval out1 mod m = (eval arg1 * ((2^32)⁻¹ mod m)^7) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_from_montgomery(out1: &mut [u32; 7], arg1: &[u32; 7]) -> () {
  let x1: u32 = (arg1[0]);
  let mut x2: u32 = 0;
  let mut x3: u32 = 0;
  fiat_p224_mulx_u32(&mut x2, &mut x3, x1, 0xffffffff);
  let mut x4: u32 = 0;
  let mut x5: u32 = 0;
  fiat_p224_mulx_u32(&mut x4, &mut x5, x2, 0xffffffff);
  let mut x6: u32 = 0;
  let mut x7: u32 = 0;
  fiat_p224_mulx_u32(&mut x6, &mut x7, x2, 0xffffffff);
  let mut x8: u32 = 0;
  let mut x9: u32 = 0;
  fiat_p224_mulx_u32(&mut x8, &mut x9, x2, 0xffffffff);
  let mut x10: u32 = 0;
  let mut x11: u32 = 0;
  fiat_p224_mulx_u32(&mut x10, &mut x11, x2, 0xffffffff);
  let mut x12: u32 = 0;
  let mut x13: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x12, &mut x13, 0x0, x11, x8);
  let mut x14: u32 = 0;
  let mut x15: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x14, &mut x15, x13, x9, x6);
  let mut x16: u32 = 0;
  let mut x17: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x16, &mut x17, x15, x7, x4);
  let mut x18: u32 = 0;
  let mut x19: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x18, &mut x19, 0x0, x1, x2);
  let mut x20: u32 = 0;
  let mut x21: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x20, &mut x21, x19, (0x0 as u32), (0x0 as u32));
  let mut x22: u32 = 0;
  let mut x23: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x22, &mut x23, 0x0, ((x20 as fiat_p224_u1) as u32), (arg1[1]));
  let mut x24: u32 = 0;
  let mut x25: u32 = 0;
  fiat_p224_mulx_u32(&mut x24, &mut x25, x22, 0xffffffff);
  let mut x26: u32 = 0;
  let mut x27: u32 = 0;
  fiat_p224_mulx_u32(&mut x26, &mut x27, x24, 0xffffffff);
  let mut x28: u32 = 0;
  let mut x29: u32 = 0;
  fiat_p224_mulx_u32(&mut x28, &mut x29, x24, 0xffffffff);
  let mut x30: u32 = 0;
  let mut x31: u32 = 0;
  fiat_p224_mulx_u32(&mut x30, &mut x31, x24, 0xffffffff);
  let mut x32: u32 = 0;
  let mut x33: u32 = 0;
  fiat_p224_mulx_u32(&mut x32, &mut x33, x24, 0xffffffff);
  let mut x34: u32 = 0;
  let mut x35: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x34, &mut x35, 0x0, x33, x30);
  let mut x36: u32 = 0;
  let mut x37: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x36, &mut x37, x35, x31, x28);
  let mut x38: u32 = 0;
  let mut x39: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x38, &mut x39, x37, x29, x26);
  let mut x40: u32 = 0;
  let mut x41: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x40, &mut x41, 0x0, x12, x32);
  let mut x42: u32 = 0;
  let mut x43: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x42, &mut x43, x41, x14, x34);
  let mut x44: u32 = 0;
  let mut x45: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x44, &mut x45, x43, x16, x36);
  let mut x46: u32 = 0;
  let mut x47: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x46, &mut x47, x17, x5, (0x0 as u32));
  let mut x48: u32 = 0;
  let mut x49: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x48, &mut x49, x45, x46, x38);
  let mut x50: u32 = 0;
  let mut x51: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x50, &mut x51, x39, x27, (0x0 as u32));
  let mut x52: u32 = 0;
  let mut x53: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x52, &mut x53, x49, (0x0 as u32), x50);
  let mut x54: u32 = 0;
  let mut x55: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x54, &mut x55, x23, (0x0 as u32), (0x0 as u32));
  let mut x56: u32 = 0;
  let mut x57: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x56, &mut x57, 0x0, x22, x24);
  let mut x58: u32 = 0;
  let mut x59: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x58, &mut x59, x57, ((x54 as fiat_p224_u1) as u32), (0x0 as u32));
  let mut x60: u32 = 0;
  let mut x61: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x60, &mut x61, 0x0, x58, (arg1[2]));
  let mut x62: u32 = 0;
  let mut x63: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x62, &mut x63, x61, x10, (0x0 as u32));
  let mut x64: u32 = 0;
  let mut x65: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x64, &mut x65, x63, x40, (0x0 as u32));
  let mut x66: u32 = 0;
  let mut x67: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x66, &mut x67, x65, x42, (0x0 as u32));
  let mut x68: u32 = 0;
  let mut x69: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x68, &mut x69, x67, x44, (0x0 as u32));
  let mut x70: u32 = 0;
  let mut x71: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x70, &mut x71, x69, x48, (0x0 as u32));
  let mut x72: u32 = 0;
  let mut x73: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x72, &mut x73, x71, x52, (0x0 as u32));
  let mut x74: u32 = 0;
  let mut x75: u32 = 0;
  fiat_p224_mulx_u32(&mut x74, &mut x75, x60, 0xffffffff);
  let mut x76: u32 = 0;
  let mut x77: u32 = 0;
  fiat_p224_mulx_u32(&mut x76, &mut x77, x74, 0xffffffff);
  let mut x78: u32 = 0;
  let mut x79: u32 = 0;
  fiat_p224_mulx_u32(&mut x78, &mut x79, x74, 0xffffffff);
  let mut x80: u32 = 0;
  let mut x81: u32 = 0;
  fiat_p224_mulx_u32(&mut x80, &mut x81, x74, 0xffffffff);
  let mut x82: u32 = 0;
  let mut x83: u32 = 0;
  fiat_p224_mulx_u32(&mut x82, &mut x83, x74, 0xffffffff);
  let mut x84: u32 = 0;
  let mut x85: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x84, &mut x85, 0x0, x83, x80);
  let mut x86: u32 = 0;
  let mut x87: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x86, &mut x87, x85, x81, x78);
  let mut x88: u32 = 0;
  let mut x89: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x88, &mut x89, x87, x79, x76);
  let mut x90: u32 = 0;
  let mut x91: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x90, &mut x91, 0x0, x60, x74);
  let mut x92: u32 = 0;
  let mut x93: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x92, &mut x93, x91, x62, (0x0 as u32));
  let mut x94: u32 = 0;
  let mut x95: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x94, &mut x95, x93, x64, (0x0 as u32));
  let mut x96: u32 = 0;
  let mut x97: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x96, &mut x97, x95, x66, x82);
  let mut x98: u32 = 0;
  let mut x99: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x98, &mut x99, x97, x68, x84);
  let mut x100: u32 = 0;
  let mut x101: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x100, &mut x101, x99, x70, x86);
  let mut x102: u32 = 0;
  let mut x103: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x102, &mut x103, x101, x72, x88);
  let mut x104: u32 = 0;
  let mut x105: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x104, &mut x105, x89, x77, (0x0 as u32));
  let mut x106: u32 = 0;
  let mut x107: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x106, &mut x107, x53, (0x0 as u32), (0x0 as u32));
  let mut x108: u32 = 0;
  let mut x109: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x108, &mut x109, x73, ((x106 as fiat_p224_u1) as u32), (0x0 as u32));
  let mut x110: u32 = 0;
  let mut x111: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x110, &mut x111, x103, x108, x104);
  let mut x112: u32 = 0;
  let mut x113: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x112, &mut x113, 0x0, x92, (arg1[3]));
  let mut x114: u32 = 0;
  let mut x115: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x114, &mut x115, x113, x94, (0x0 as u32));
  let mut x116: u32 = 0;
  let mut x117: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x116, &mut x117, x115, x96, (0x0 as u32));
  let mut x118: u32 = 0;
  let mut x119: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x118, &mut x119, x117, x98, (0x0 as u32));
  let mut x120: u32 = 0;
  let mut x121: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x120, &mut x121, x119, x100, (0x0 as u32));
  let mut x122: u32 = 0;
  let mut x123: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x122, &mut x123, x121, x102, (0x0 as u32));
  let mut x124: u32 = 0;
  let mut x125: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x124, &mut x125, x123, x110, (0x0 as u32));
  let mut x126: u32 = 0;
  let mut x127: u32 = 0;
  fiat_p224_mulx_u32(&mut x126, &mut x127, x112, 0xffffffff);
  let mut x128: u32 = 0;
  let mut x129: u32 = 0;
  fiat_p224_mulx_u32(&mut x128, &mut x129, x126, 0xffffffff);
  let mut x130: u32 = 0;
  let mut x131: u32 = 0;
  fiat_p224_mulx_u32(&mut x130, &mut x131, x126, 0xffffffff);
  let mut x132: u32 = 0;
  let mut x133: u32 = 0;
  fiat_p224_mulx_u32(&mut x132, &mut x133, x126, 0xffffffff);
  let mut x134: u32 = 0;
  let mut x135: u32 = 0;
  fiat_p224_mulx_u32(&mut x134, &mut x135, x126, 0xffffffff);
  let mut x136: u32 = 0;
  let mut x137: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x136, &mut x137, 0x0, x135, x132);
  let mut x138: u32 = 0;
  let mut x139: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x138, &mut x139, x137, x133, x130);
  let mut x140: u32 = 0;
  let mut x141: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x140, &mut x141, x139, x131, x128);
  let mut x142: u32 = 0;
  let mut x143: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x142, &mut x143, 0x0, x112, x126);
  let mut x144: u32 = 0;
  let mut x145: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x144, &mut x145, x143, x114, (0x0 as u32));
  let mut x146: u32 = 0;
  let mut x147: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x146, &mut x147, x145, x116, (0x0 as u32));
  let mut x148: u32 = 0;
  let mut x149: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x148, &mut x149, x147, x118, x134);
  let mut x150: u32 = 0;
  let mut x151: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x150, &mut x151, x149, x120, x136);
  let mut x152: u32 = 0;
  let mut x153: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x152, &mut x153, x151, x122, x138);
  let mut x154: u32 = 0;
  let mut x155: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x154, &mut x155, x153, x124, x140);
  let mut x156: u32 = 0;
  let mut x157: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x156, &mut x157, x141, x129, (0x0 as u32));
  let mut x158: u32 = 0;
  let mut x159: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x158, &mut x159, x111, (0x0 as u32), (0x0 as u32));
  let mut x160: u32 = 0;
  let mut x161: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x160, &mut x161, x125, ((x158 as fiat_p224_u1) as u32), (0x0 as u32));
  let mut x162: u32 = 0;
  let mut x163: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x162, &mut x163, x155, x160, x156);
  let mut x164: u32 = 0;
  let mut x165: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x164, &mut x165, 0x0, x144, (arg1[4]));
  let mut x166: u32 = 0;
  let mut x167: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x166, &mut x167, x165, x146, (0x0 as u32));
  let mut x168: u32 = 0;
  let mut x169: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x168, &mut x169, x167, x148, (0x0 as u32));
  let mut x170: u32 = 0;
  let mut x171: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x170, &mut x171, x169, x150, (0x0 as u32));
  let mut x172: u32 = 0;
  let mut x173: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x172, &mut x173, x171, x152, (0x0 as u32));
  let mut x174: u32 = 0;
  let mut x175: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x174, &mut x175, x173, x154, (0x0 as u32));
  let mut x176: u32 = 0;
  let mut x177: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x176, &mut x177, x175, x162, (0x0 as u32));
  let mut x178: u32 = 0;
  let mut x179: u32 = 0;
  fiat_p224_mulx_u32(&mut x178, &mut x179, x164, 0xffffffff);
  let mut x180: u32 = 0;
  let mut x181: u32 = 0;
  fiat_p224_mulx_u32(&mut x180, &mut x181, x178, 0xffffffff);
  let mut x182: u32 = 0;
  let mut x183: u32 = 0;
  fiat_p224_mulx_u32(&mut x182, &mut x183, x178, 0xffffffff);
  let mut x184: u32 = 0;
  let mut x185: u32 = 0;
  fiat_p224_mulx_u32(&mut x184, &mut x185, x178, 0xffffffff);
  let mut x186: u32 = 0;
  let mut x187: u32 = 0;
  fiat_p224_mulx_u32(&mut x186, &mut x187, x178, 0xffffffff);
  let mut x188: u32 = 0;
  let mut x189: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x188, &mut x189, 0x0, x187, x184);
  let mut x190: u32 = 0;
  let mut x191: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x190, &mut x191, x189, x185, x182);
  let mut x192: u32 = 0;
  let mut x193: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x192, &mut x193, x191, x183, x180);
  let mut x194: u32 = 0;
  let mut x195: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x194, &mut x195, 0x0, x164, x178);
  let mut x196: u32 = 0;
  let mut x197: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x196, &mut x197, x195, x166, (0x0 as u32));
  let mut x198: u32 = 0;
  let mut x199: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x198, &mut x199, x197, x168, (0x0 as u32));
  let mut x200: u32 = 0;
  let mut x201: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x200, &mut x201, x199, x170, x186);
  let mut x202: u32 = 0;
  let mut x203: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x202, &mut x203, x201, x172, x188);
  let mut x204: u32 = 0;
  let mut x205: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x204, &mut x205, x203, x174, x190);
  let mut x206: u32 = 0;
  let mut x207: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x206, &mut x207, x205, x176, x192);
  let mut x208: u32 = 0;
  let mut x209: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x208, &mut x209, x193, x181, (0x0 as u32));
  let mut x210: u32 = 0;
  let mut x211: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x210, &mut x211, x163, (0x0 as u32), (0x0 as u32));
  let mut x212: u32 = 0;
  let mut x213: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x212, &mut x213, x177, ((x210 as fiat_p224_u1) as u32), (0x0 as u32));
  let mut x214: u32 = 0;
  let mut x215: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x214, &mut x215, x207, x212, x208);
  let mut x216: u32 = 0;
  let mut x217: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x216, &mut x217, 0x0, x196, (arg1[5]));
  let mut x218: u32 = 0;
  let mut x219: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x218, &mut x219, x217, x198, (0x0 as u32));
  let mut x220: u32 = 0;
  let mut x221: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x220, &mut x221, x219, x200, (0x0 as u32));
  let mut x222: u32 = 0;
  let mut x223: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x222, &mut x223, x221, x202, (0x0 as u32));
  let mut x224: u32 = 0;
  let mut x225: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x224, &mut x225, x223, x204, (0x0 as u32));
  let mut x226: u32 = 0;
  let mut x227: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x226, &mut x227, x225, x206, (0x0 as u32));
  let mut x228: u32 = 0;
  let mut x229: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x228, &mut x229, x227, x214, (0x0 as u32));
  let mut x230: u32 = 0;
  let mut x231: u32 = 0;
  fiat_p224_mulx_u32(&mut x230, &mut x231, x216, 0xffffffff);
  let mut x232: u32 = 0;
  let mut x233: u32 = 0;
  fiat_p224_mulx_u32(&mut x232, &mut x233, x230, 0xffffffff);
  let mut x234: u32 = 0;
  let mut x235: u32 = 0;
  fiat_p224_mulx_u32(&mut x234, &mut x235, x230, 0xffffffff);
  let mut x236: u32 = 0;
  let mut x237: u32 = 0;
  fiat_p224_mulx_u32(&mut x236, &mut x237, x230, 0xffffffff);
  let mut x238: u32 = 0;
  let mut x239: u32 = 0;
  fiat_p224_mulx_u32(&mut x238, &mut x239, x230, 0xffffffff);
  let mut x240: u32 = 0;
  let mut x241: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x240, &mut x241, 0x0, x239, x236);
  let mut x242: u32 = 0;
  let mut x243: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x242, &mut x243, x241, x237, x234);
  let mut x244: u32 = 0;
  let mut x245: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x244, &mut x245, x243, x235, x232);
  let mut x246: u32 = 0;
  let mut x247: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x246, &mut x247, 0x0, x216, x230);
  let mut x248: u32 = 0;
  let mut x249: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x248, &mut x249, x247, x218, (0x0 as u32));
  let mut x250: u32 = 0;
  let mut x251: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x250, &mut x251, x249, x220, (0x0 as u32));
  let mut x252: u32 = 0;
  let mut x253: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x252, &mut x253, x251, x222, x238);
  let mut x254: u32 = 0;
  let mut x255: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x254, &mut x255, x253, x224, x240);
  let mut x256: u32 = 0;
  let mut x257: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x256, &mut x257, x255, x226, x242);
  let mut x258: u32 = 0;
  let mut x259: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x258, &mut x259, x257, x228, x244);
  let mut x260: u32 = 0;
  let mut x261: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x260, &mut x261, x245, x233, (0x0 as u32));
  let mut x262: u32 = 0;
  let mut x263: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x262, &mut x263, x215, (0x0 as u32), (0x0 as u32));
  let mut x264: u32 = 0;
  let mut x265: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x264, &mut x265, x229, ((x262 as fiat_p224_u1) as u32), (0x0 as u32));
  let mut x266: u32 = 0;
  let mut x267: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x266, &mut x267, x259, x264, x260);
  let mut x268: u32 = 0;
  let mut x269: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x268, &mut x269, 0x0, x248, (arg1[6]));
  let mut x270: u32 = 0;
  let mut x271: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x270, &mut x271, x269, x250, (0x0 as u32));
  let mut x272: u32 = 0;
  let mut x273: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x272, &mut x273, x271, x252, (0x0 as u32));
  let mut x274: u32 = 0;
  let mut x275: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x274, &mut x275, x273, x254, (0x0 as u32));
  let mut x276: u32 = 0;
  let mut x277: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x276, &mut x277, x275, x256, (0x0 as u32));
  let mut x278: u32 = 0;
  let mut x279: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x278, &mut x279, x277, x258, (0x0 as u32));
  let mut x280: u32 = 0;
  let mut x281: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x280, &mut x281, x279, x266, (0x0 as u32));
  let mut x282: u32 = 0;
  let mut x283: u32 = 0;
  fiat_p224_mulx_u32(&mut x282, &mut x283, x268, 0xffffffff);
  let mut x284: u32 = 0;
  let mut x285: u32 = 0;
  fiat_p224_mulx_u32(&mut x284, &mut x285, x282, 0xffffffff);
  let mut x286: u32 = 0;
  let mut x287: u32 = 0;
  fiat_p224_mulx_u32(&mut x286, &mut x287, x282, 0xffffffff);
  let mut x288: u32 = 0;
  let mut x289: u32 = 0;
  fiat_p224_mulx_u32(&mut x288, &mut x289, x282, 0xffffffff);
  let mut x290: u32 = 0;
  let mut x291: u32 = 0;
  fiat_p224_mulx_u32(&mut x290, &mut x291, x282, 0xffffffff);
  let mut x292: u32 = 0;
  let mut x293: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x292, &mut x293, 0x0, x291, x288);
  let mut x294: u32 = 0;
  let mut x295: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x294, &mut x295, x293, x289, x286);
  let mut x296: u32 = 0;
  let mut x297: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x296, &mut x297, x295, x287, x284);
  let mut x298: u32 = 0;
  let mut x299: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x298, &mut x299, 0x0, x268, x282);
  let mut x300: u32 = 0;
  let mut x301: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x300, &mut x301, x299, x270, (0x0 as u32));
  let mut x302: u32 = 0;
  let mut x303: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x302, &mut x303, x301, x272, (0x0 as u32));
  let mut x304: u32 = 0;
  let mut x305: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x304, &mut x305, x303, x274, x290);
  let mut x306: u32 = 0;
  let mut x307: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x306, &mut x307, x305, x276, x292);
  let mut x308: u32 = 0;
  let mut x309: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x308, &mut x309, x307, x278, x294);
  let mut x310: u32 = 0;
  let mut x311: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x310, &mut x311, x309, x280, x296);
  let mut x312: u32 = 0;
  let mut x313: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x312, &mut x313, x297, x285, (0x0 as u32));
  let mut x314: u32 = 0;
  let mut x315: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x314, &mut x315, x267, (0x0 as u32), (0x0 as u32));
  let mut x316: u32 = 0;
  let mut x317: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x316, &mut x317, x281, ((x314 as fiat_p224_u1) as u32), (0x0 as u32));
  let mut x318: u32 = 0;
  let mut x319: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x318, &mut x319, x311, x316, x312);
  let mut x320: u32 = 0;
  let mut x321: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x320, &mut x321, 0x0, x300, (0x1 as u32));
  let mut x322: u32 = 0;
  let mut x323: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x322, &mut x323, x321, x302, (0x0 as u32));
  let mut x324: u32 = 0;
  let mut x325: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x324, &mut x325, x323, x304, (0x0 as u32));
  let mut x326: u32 = 0;
  let mut x327: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x326, &mut x327, x325, x306, 0xffffffff);
  let mut x328: u32 = 0;
  let mut x329: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x328, &mut x329, x327, x308, 0xffffffff);
  let mut x330: u32 = 0;
  let mut x331: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x330, &mut x331, x329, x310, 0xffffffff);
  let mut x332: u32 = 0;
  let mut x333: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x332, &mut x333, x331, x318, 0xffffffff);
  let mut x334: u32 = 0;
  let mut x335: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x334, &mut x335, x319, (0x0 as u32), (0x0 as u32));
  let mut x336: u32 = 0;
  let mut x337: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x336, &mut x337, x333, ((x334 as fiat_p224_u1) as u32), (0x0 as u32));
  let mut x338: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x338, x337, x320, x300);
  let mut x339: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x339, x337, x322, x302);
  let mut x340: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x340, x337, x324, x304);
  let mut x341: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x341, x337, x326, x306);
  let mut x342: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x342, x337, x328, x308);
  let mut x343: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x343, x337, x330, x310);
  let mut x344: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x344, x337, x332, x318);
  out1[0] = x338;
  out1[1] = x339;
  out1[2] = x340;
  out1[3] = x341;
  out1[4] = x342;
  out1[5] = x343;
  out1[6] = x344;
}

/*
 * The function fiat_p224_nonzero outputs a single non-zero word if the input is non-zero and zero otherwise.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   out1 = 0 ↔ eval (from_montgomery arg1) mod m = 0
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 */
#[inline]
pub fn fiat_p224_nonzero(out1: &mut u32, arg1: &[u32; 7]) -> () {
  let x1: u32 = ((arg1[0]) | ((arg1[1]) | ((arg1[2]) | ((arg1[3]) | ((arg1[4]) | ((arg1[5]) | ((arg1[6]) | (0x0 as u32))))))));
  *out1 = x1;
}

/*
 * The function fiat_p224_selectznz is a multi-limb conditional select.
 * Postconditions:
 *   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_selectznz(out1: &mut [u32; 7], arg1: fiat_p224_u1, arg2: &[u32; 7], arg3: &[u32; 7]) -> () {
  let mut x1: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x1, arg1, (arg2[0]), (arg3[0]));
  let mut x2: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x2, arg1, (arg2[1]), (arg3[1]));
  let mut x3: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x3, arg1, (arg2[2]), (arg3[2]));
  let mut x4: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x4, arg1, (arg2[3]), (arg3[3]));
  let mut x5: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x5, arg1, (arg2[4]), (arg3[4]));
  let mut x6: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x6, arg1, (arg2[5]), (arg3[5]));
  let mut x7: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x7, arg1, (arg2[6]), (arg3[6]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
}

/*
 * The function fiat_p224_to_bytes serializes a field element in the Montgomery domain to bytes in little-endian order.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..27]
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
 */
#[inline]
pub fn fiat_p224_to_bytes(out1: &mut [u8; 28], arg1: &[u32; 7]) -> () {
  let x1: u32 = (arg1[6]);
  let x2: u32 = (arg1[5]);
  let x3: u32 = (arg1[4]);
  let x4: u32 = (arg1[3]);
  let x5: u32 = (arg1[2]);
  let x6: u32 = (arg1[1]);
  let x7: u32 = (arg1[0]);
  let x8: u32 = (x7 >> 8);
  let x9: u8 = ((x7 & (0xff as u32)) as u8);
  let x10: u32 = (x8 >> 8);
  let x11: u8 = ((x8 & (0xff as u32)) as u8);
  let x12: u8 = ((x10 >> 8) as u8);
  let x13: u8 = ((x10 & (0xff as u32)) as u8);
  let x14: u8 = (x12 & 0xff);
  let x15: u32 = (x6 >> 8);
  let x16: u8 = ((x6 & (0xff as u32)) as u8);
  let x17: u32 = (x15 >> 8);
  let x18: u8 = ((x15 & (0xff as u32)) as u8);
  let x19: u8 = ((x17 >> 8) as u8);
  let x20: u8 = ((x17 & (0xff as u32)) as u8);
  let x21: u8 = (x19 & 0xff);
  let x22: u32 = (x5 >> 8);
  let x23: u8 = ((x5 & (0xff as u32)) as u8);
  let x24: u32 = (x22 >> 8);
  let x25: u8 = ((x22 & (0xff as u32)) as u8);
  let x26: u8 = ((x24 >> 8) as u8);
  let x27: u8 = ((x24 & (0xff as u32)) as u8);
  let x28: u8 = (x26 & 0xff);
  let x29: u32 = (x4 >> 8);
  let x30: u8 = ((x4 & (0xff as u32)) as u8);
  let x31: u32 = (x29 >> 8);
  let x32: u8 = ((x29 & (0xff as u32)) as u8);
  let x33: u8 = ((x31 >> 8) as u8);
  let x34: u8 = ((x31 & (0xff as u32)) as u8);
  let x35: u8 = (x33 & 0xff);
  let x36: u32 = (x3 >> 8);
  let x37: u8 = ((x3 & (0xff as u32)) as u8);
  let x38: u32 = (x36 >> 8);
  let x39: u8 = ((x36 & (0xff as u32)) as u8);
  let x40: u8 = ((x38 >> 8) as u8);
  let x41: u8 = ((x38 & (0xff as u32)) as u8);
  let x42: u8 = (x40 & 0xff);
  let x43: u32 = (x2 >> 8);
  let x44: u8 = ((x2 & (0xff as u32)) as u8);
  let x45: u32 = (x43 >> 8);
  let x46: u8 = ((x43 & (0xff as u32)) as u8);
  let x47: u8 = ((x45 >> 8) as u8);
  let x48: u8 = ((x45 & (0xff as u32)) as u8);
  let x49: u8 = (x47 & 0xff);
  let x50: u32 = (x1 >> 8);
  let x51: u8 = ((x1 & (0xff as u32)) as u8);
  let x52: u32 = (x50 >> 8);
  let x53: u8 = ((x50 & (0xff as u32)) as u8);
  let x54: u8 = ((x52 >> 8) as u8);
  let x55: u8 = ((x52 & (0xff as u32)) as u8);
  out1[0] = x9;
  out1[1] = x11;
  out1[2] = x13;
  out1[3] = x14;
  out1[4] = x16;
  out1[5] = x18;
  out1[6] = x20;
  out1[7] = x21;
  out1[8] = x23;
  out1[9] = x25;
  out1[10] = x27;
  out1[11] = x28;
  out1[12] = x30;
  out1[13] = x32;
  out1[14] = x34;
  out1[15] = x35;
  out1[16] = x37;
  out1[17] = x39;
  out1[18] = x41;
  out1[19] = x42;
  out1[20] = x44;
  out1[21] = x46;
  out1[22] = x48;
  out1[23] = x49;
  out1[24] = x51;
  out1[25] = x53;
  out1[26] = x55;
  out1[27] = x54;
}

/*
 * The function fiat_p224_from_bytes deserializes a field element in the Montgomery domain from bytes in little-endian order.
 * Preconditions:
 *   0 ≤ bytes_eval arg1 < m
 * Postconditions:
 *   eval out1 mod m = bytes_eval arg1 mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_from_bytes(out1: &mut [u32; 7], arg1: &[u8; 28]) -> () {
  let x1: u32 = (((arg1[27]) as u32) << 24);
  let x2: u32 = (((arg1[26]) as u32) << 16);
  let x3: u32 = (((arg1[25]) as u32) << 8);
  let x4: u8 = (arg1[24]);
  let x5: u32 = (((arg1[23]) as u32) << 24);
  let x6: u32 = (((arg1[22]) as u32) << 16);
  let x7: u32 = (((arg1[21]) as u32) << 8);
  let x8: u8 = (arg1[20]);
  let x9: u32 = (((arg1[19]) as u32) << 24);
  let x10: u32 = (((arg1[18]) as u32) << 16);
  let x11: u32 = (((arg1[17]) as u32) << 8);
  let x12: u8 = (arg1[16]);
  let x13: u32 = (((arg1[15]) as u32) << 24);
  let x14: u32 = (((arg1[14]) as u32) << 16);
  let x15: u32 = (((arg1[13]) as u32) << 8);
  let x16: u8 = (arg1[12]);
  let x17: u32 = (((arg1[11]) as u32) << 24);
  let x18: u32 = (((arg1[10]) as u32) << 16);
  let x19: u32 = (((arg1[9]) as u32) << 8);
  let x20: u8 = (arg1[8]);
  let x21: u32 = (((arg1[7]) as u32) << 24);
  let x22: u32 = (((arg1[6]) as u32) << 16);
  let x23: u32 = (((arg1[5]) as u32) << 8);
  let x24: u8 = (arg1[4]);
  let x25: u32 = (((arg1[3]) as u32) << 24);
  let x26: u32 = (((arg1[2]) as u32) << 16);
  let x27: u32 = (((arg1[1]) as u32) << 8);
  let x28: u8 = (arg1[0]);
  let x29: u32 = ((x28 as u32) + (x27 + (x26 + x25)));
  let x30: u32 = (x29 & 0xffffffff);
  let x31: u32 = ((x4 as u32) + (x3 + (x2 + x1)));
  let x32: u32 = ((x8 as u32) + (x7 + (x6 + x5)));
  let x33: u32 = ((x12 as u32) + (x11 + (x10 + x9)));
  let x34: u32 = ((x16 as u32) + (x15 + (x14 + x13)));
  let x35: u32 = ((x20 as u32) + (x19 + (x18 + x17)));
  let x36: u32 = ((x24 as u32) + (x23 + (x22 + x21)));
  let x37: u32 = (x36 & 0xffffffff);
  let x38: u32 = (x35 & 0xffffffff);
  let x39: u32 = (x34 & 0xffffffff);
  let x40: u32 = (x33 & 0xffffffff);
  let x41: u32 = (x32 & 0xffffffff);
  out1[0] = x30;
  out1[1] = x37;
  out1[2] = x38;
  out1[3] = x39;
  out1[4] = x40;
  out1[5] = x41;
  out1[6] = x31;
}

