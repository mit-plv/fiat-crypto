/* Autogenerated: src/ExtractionOCaml/word_by_word_montgomery --lang=Rust p224 '2^224 - 2^96 + 1' 32 mul square add sub opp from_montgomery nonzero selectznz to_bytes from_bytes */
/* curve description: p224 */
/* requested operations: mul, square, add, sub, opp, from_montgomery, nonzero, selectznz, to_bytes, from_bytes */
/* m = 0xffffffffffffffffffffffffffffffff000000000000000000000001 (from "2^224 - 2^96 + 1") */
/* machine_wordsize = 32 (from "32") */
/*                                                                    */
/* NOTE: In addition to the bounds specified above each function, all */
/*   functions synthesized for this Montgomery arithmetic require the */
/*   input to be strictly less than the prime modulus (m), and also   */
/*   require the input to be in the unique saturated representation.  */
/*   All functions also ensure that these two properties are true of  */
/*   return values.                                                   */

#![allow(unused_parens)]
#[allow(non_camel_case_types)]

pub type fiat_p224_u1 = u8;
pub type fiat_p224_i1 = i8;
pub type fiat_p224_u2 = u8;
pub type fiat_p224_i2 = i8;


/*
 * The function fiat_p224_addcarryx_u32 is an addition with carry.
 * Postconditions:
 *   out1 = (arg1 + arg2 + arg3) mod 2^32
 *   out2 = ⌊(arg1 + arg2 + arg3) / 2^32⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffff]
 *   arg3: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 *   out2: [0x0 ~> 0x1]
 */
#[inline]
pub fn fiat_p224_addcarryx_u32(out1: &mut u32, out2: &mut fiat_p224_u1, arg1: fiat_p224_u1, arg2: u32, arg3: u32) -> () {
  let x1: u64 = (((arg1 as u64) + (arg2 as u64)) + (arg3 as u64));
  let x2: u32 = ((x1 & (0xffffffff as u64)) as u32);
  let x3: fiat_p224_u1 = ((x1 >> 32) as fiat_p224_u1);
  *out1 = x2;
  *out2 = x3;
}

/*
 * The function fiat_p224_subborrowx_u32 is a subtraction with borrow.
 * Postconditions:
 *   out1 = (-arg1 + arg2 + -arg3) mod 2^32
 *   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^32⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffff]
 *   arg3: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 *   out2: [0x0 ~> 0x1]
 */
#[inline]
pub fn fiat_p224_subborrowx_u32(out1: &mut u32, out2: &mut fiat_p224_u1, arg1: fiat_p224_u1, arg2: u32, arg3: u32) -> () {
  let x1: i64 = (((arg2 as i64) - (arg1 as i64)) - (arg3 as i64));
  let x2: fiat_p224_i1 = ((x1 >> 32) as fiat_p224_i1);
  let x3: u32 = ((x1 & (0xffffffff as i64)) as u32);
  *out1 = x3;
  *out2 = (((0x0 as fiat_p224_i2) - (x2 as fiat_p224_i2)) as fiat_p224_u1);
}

/*
 * The function fiat_p224_mulx_u32 is a multiplication, returning the full double-width result.
 * Postconditions:
 *   out1 = (arg1 * arg2) mod 2^32
 *   out2 = ⌊arg1 * arg2 / 2^32⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0xffffffff]
 *   arg2: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 *   out2: [0x0 ~> 0xffffffff]
 */
#[inline]
pub fn fiat_p224_mulx_u32(out1: &mut u32, out2: &mut u32, arg1: u32, arg2: u32) -> () {
  let x1: u64 = ((arg1 as u64) * (arg2 as u64));
  let x2: u32 = ((x1 & (0xffffffff as u64)) as u32);
  let x3: u32 = ((x1 >> 32) as u32);
  *out1 = x2;
  *out2 = x3;
}

/*
 * The function fiat_p224_cmovznz_u32 is a single-word conditional move.
 * Postconditions:
 *   out1 = (if arg1 = 0 then arg2 else arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffff]
 *   arg3: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 */
#[inline]
pub fn fiat_p224_cmovznz_u32(out1: &mut u32, arg1: fiat_p224_u1, arg2: u32, arg3: u32) -> () {
  let x1: fiat_p224_u1 = (!(!arg1));
  let x2: u32 = ((((((0x0 as fiat_p224_i2) - (x1 as fiat_p224_i2)) as fiat_p224_i1) as i64) & (0xffffffff as i64)) as u32);
  let x3: u32 = ((x2 & arg3) | ((!x2) & arg2));
  *out1 = x3;
}

/*
 * The function fiat_p224_mul multiplies two field elements in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 *   0 ≤ eval arg2 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg2)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_mul(out1: &mut [u32; 7], arg1: &[u32; 7], arg2: &[u32; 7]) -> () {
  let x1: u32 = (arg1[1]);
  let x2: u32 = (arg1[2]);
  let x3: u32 = (arg1[3]);
  let x4: u32 = (arg1[4]);
  let x5: u32 = (arg1[5]);
  let x6: u32 = (arg1[6]);
  let x7: u32 = (arg1[0]);
  let mut x8: u32 = 0;
  let mut x9: u32 = 0;
  fiat_p224_mulx_u32(&mut x8, &mut x9, x7, (arg2[6]));
  let mut x10: u32 = 0;
  let mut x11: u32 = 0;
  fiat_p224_mulx_u32(&mut x10, &mut x11, x7, (arg2[5]));
  let mut x12: u32 = 0;
  let mut x13: u32 = 0;
  fiat_p224_mulx_u32(&mut x12, &mut x13, x7, (arg2[4]));
  let mut x14: u32 = 0;
  let mut x15: u32 = 0;
  fiat_p224_mulx_u32(&mut x14, &mut x15, x7, (arg2[3]));
  let mut x16: u32 = 0;
  let mut x17: u32 = 0;
  fiat_p224_mulx_u32(&mut x16, &mut x17, x7, (arg2[2]));
  let mut x18: u32 = 0;
  let mut x19: u32 = 0;
  fiat_p224_mulx_u32(&mut x18, &mut x19, x7, (arg2[1]));
  let mut x20: u32 = 0;
  let mut x21: u32 = 0;
  fiat_p224_mulx_u32(&mut x20, &mut x21, x7, (arg2[0]));
  let mut x22: u32 = 0;
  let mut x23: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x22, &mut x23, 0x0, x21, x18);
  let mut x24: u32 = 0;
  let mut x25: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x24, &mut x25, x23, x19, x16);
  let mut x26: u32 = 0;
  let mut x27: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x26, &mut x27, x25, x17, x14);
  let mut x28: u32 = 0;
  let mut x29: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x28, &mut x29, x27, x15, x12);
  let mut x30: u32 = 0;
  let mut x31: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x30, &mut x31, x29, x13, x10);
  let mut x32: u32 = 0;
  let mut x33: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x32, &mut x33, x31, x11, x8);
  let x34: u32 = ((x33 as u32) + x9);
  let mut x35: u32 = 0;
  let mut x36: u32 = 0;
  fiat_p224_mulx_u32(&mut x35, &mut x36, x20, 0xffffffff);
  let mut x37: u32 = 0;
  let mut x38: u32 = 0;
  fiat_p224_mulx_u32(&mut x37, &mut x38, x35, 0xffffffff);
  let mut x39: u32 = 0;
  let mut x40: u32 = 0;
  fiat_p224_mulx_u32(&mut x39, &mut x40, x35, 0xffffffff);
  let mut x41: u32 = 0;
  let mut x42: u32 = 0;
  fiat_p224_mulx_u32(&mut x41, &mut x42, x35, 0xffffffff);
  let mut x43: u32 = 0;
  let mut x44: u32 = 0;
  fiat_p224_mulx_u32(&mut x43, &mut x44, x35, 0xffffffff);
  let mut x45: u32 = 0;
  let mut x46: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x45, &mut x46, 0x0, x44, x41);
  let mut x47: u32 = 0;
  let mut x48: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x47, &mut x48, x46, x42, x39);
  let mut x49: u32 = 0;
  let mut x50: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x49, &mut x50, x48, x40, x37);
  let x51: u32 = ((x50 as u32) + x38);
  let mut x52: u32 = 0;
  let mut x53: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x52, &mut x53, 0x0, x20, x35);
  let mut x54: u32 = 0;
  let mut x55: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x54, &mut x55, x53, x22, (0x0 as u32));
  let mut x56: u32 = 0;
  let mut x57: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x56, &mut x57, x55, x24, (0x0 as u32));
  let mut x58: u32 = 0;
  let mut x59: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x58, &mut x59, x57, x26, x43);
  let mut x60: u32 = 0;
  let mut x61: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x60, &mut x61, x59, x28, x45);
  let mut x62: u32 = 0;
  let mut x63: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x62, &mut x63, x61, x30, x47);
  let mut x64: u32 = 0;
  let mut x65: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x64, &mut x65, x63, x32, x49);
  let mut x66: u32 = 0;
  let mut x67: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x66, &mut x67, x65, x34, x51);
  let mut x68: u32 = 0;
  let mut x69: u32 = 0;
  fiat_p224_mulx_u32(&mut x68, &mut x69, x1, (arg2[6]));
  let mut x70: u32 = 0;
  let mut x71: u32 = 0;
  fiat_p224_mulx_u32(&mut x70, &mut x71, x1, (arg2[5]));
  let mut x72: u32 = 0;
  let mut x73: u32 = 0;
  fiat_p224_mulx_u32(&mut x72, &mut x73, x1, (arg2[4]));
  let mut x74: u32 = 0;
  let mut x75: u32 = 0;
  fiat_p224_mulx_u32(&mut x74, &mut x75, x1, (arg2[3]));
  let mut x76: u32 = 0;
  let mut x77: u32 = 0;
  fiat_p224_mulx_u32(&mut x76, &mut x77, x1, (arg2[2]));
  let mut x78: u32 = 0;
  let mut x79: u32 = 0;
  fiat_p224_mulx_u32(&mut x78, &mut x79, x1, (arg2[1]));
  let mut x80: u32 = 0;
  let mut x81: u32 = 0;
  fiat_p224_mulx_u32(&mut x80, &mut x81, x1, (arg2[0]));
  let mut x82: u32 = 0;
  let mut x83: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x82, &mut x83, 0x0, x81, x78);
  let mut x84: u32 = 0;
  let mut x85: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x84, &mut x85, x83, x79, x76);
  let mut x86: u32 = 0;
  let mut x87: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x86, &mut x87, x85, x77, x74);
  let mut x88: u32 = 0;
  let mut x89: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x88, &mut x89, x87, x75, x72);
  let mut x90: u32 = 0;
  let mut x91: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x90, &mut x91, x89, x73, x70);
  let mut x92: u32 = 0;
  let mut x93: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x92, &mut x93, x91, x71, x68);
  let x94: u32 = ((x93 as u32) + x69);
  let mut x95: u32 = 0;
  let mut x96: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x95, &mut x96, 0x0, x54, x80);
  let mut x97: u32 = 0;
  let mut x98: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x97, &mut x98, x96, x56, x82);
  let mut x99: u32 = 0;
  let mut x100: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x99, &mut x100, x98, x58, x84);
  let mut x101: u32 = 0;
  let mut x102: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x101, &mut x102, x100, x60, x86);
  let mut x103: u32 = 0;
  let mut x104: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x103, &mut x104, x102, x62, x88);
  let mut x105: u32 = 0;
  let mut x106: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x105, &mut x106, x104, x64, x90);
  let mut x107: u32 = 0;
  let mut x108: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x107, &mut x108, x106, x66, x92);
  let mut x109: u32 = 0;
  let mut x110: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x109, &mut x110, x108, (x67 as u32), x94);
  let mut x111: u32 = 0;
  let mut x112: u32 = 0;
  fiat_p224_mulx_u32(&mut x111, &mut x112, x95, 0xffffffff);
  let mut x113: u32 = 0;
  let mut x114: u32 = 0;
  fiat_p224_mulx_u32(&mut x113, &mut x114, x111, 0xffffffff);
  let mut x115: u32 = 0;
  let mut x116: u32 = 0;
  fiat_p224_mulx_u32(&mut x115, &mut x116, x111, 0xffffffff);
  let mut x117: u32 = 0;
  let mut x118: u32 = 0;
  fiat_p224_mulx_u32(&mut x117, &mut x118, x111, 0xffffffff);
  let mut x119: u32 = 0;
  let mut x120: u32 = 0;
  fiat_p224_mulx_u32(&mut x119, &mut x120, x111, 0xffffffff);
  let mut x121: u32 = 0;
  let mut x122: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x121, &mut x122, 0x0, x120, x117);
  let mut x123: u32 = 0;
  let mut x124: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x123, &mut x124, x122, x118, x115);
  let mut x125: u32 = 0;
  let mut x126: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x125, &mut x126, x124, x116, x113);
  let x127: u32 = ((x126 as u32) + x114);
  let mut x128: u32 = 0;
  let mut x129: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x128, &mut x129, 0x0, x95, x111);
  let mut x130: u32 = 0;
  let mut x131: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x130, &mut x131, x129, x97, (0x0 as u32));
  let mut x132: u32 = 0;
  let mut x133: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x132, &mut x133, x131, x99, (0x0 as u32));
  let mut x134: u32 = 0;
  let mut x135: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x134, &mut x135, x133, x101, x119);
  let mut x136: u32 = 0;
  let mut x137: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x136, &mut x137, x135, x103, x121);
  let mut x138: u32 = 0;
  let mut x139: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x138, &mut x139, x137, x105, x123);
  let mut x140: u32 = 0;
  let mut x141: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x140, &mut x141, x139, x107, x125);
  let mut x142: u32 = 0;
  let mut x143: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x142, &mut x143, x141, x109, x127);
  let x144: u32 = ((x143 as u32) + (x110 as u32));
  let mut x145: u32 = 0;
  let mut x146: u32 = 0;
  fiat_p224_mulx_u32(&mut x145, &mut x146, x2, (arg2[6]));
  let mut x147: u32 = 0;
  let mut x148: u32 = 0;
  fiat_p224_mulx_u32(&mut x147, &mut x148, x2, (arg2[5]));
  let mut x149: u32 = 0;
  let mut x150: u32 = 0;
  fiat_p224_mulx_u32(&mut x149, &mut x150, x2, (arg2[4]));
  let mut x151: u32 = 0;
  let mut x152: u32 = 0;
  fiat_p224_mulx_u32(&mut x151, &mut x152, x2, (arg2[3]));
  let mut x153: u32 = 0;
  let mut x154: u32 = 0;
  fiat_p224_mulx_u32(&mut x153, &mut x154, x2, (arg2[2]));
  let mut x155: u32 = 0;
  let mut x156: u32 = 0;
  fiat_p224_mulx_u32(&mut x155, &mut x156, x2, (arg2[1]));
  let mut x157: u32 = 0;
  let mut x158: u32 = 0;
  fiat_p224_mulx_u32(&mut x157, &mut x158, x2, (arg2[0]));
  let mut x159: u32 = 0;
  let mut x160: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x159, &mut x160, 0x0, x158, x155);
  let mut x161: u32 = 0;
  let mut x162: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x161, &mut x162, x160, x156, x153);
  let mut x163: u32 = 0;
  let mut x164: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x163, &mut x164, x162, x154, x151);
  let mut x165: u32 = 0;
  let mut x166: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x165, &mut x166, x164, x152, x149);
  let mut x167: u32 = 0;
  let mut x168: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x167, &mut x168, x166, x150, x147);
  let mut x169: u32 = 0;
  let mut x170: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x169, &mut x170, x168, x148, x145);
  let x171: u32 = ((x170 as u32) + x146);
  let mut x172: u32 = 0;
  let mut x173: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x172, &mut x173, 0x0, x130, x157);
  let mut x174: u32 = 0;
  let mut x175: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x174, &mut x175, x173, x132, x159);
  let mut x176: u32 = 0;
  let mut x177: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x176, &mut x177, x175, x134, x161);
  let mut x178: u32 = 0;
  let mut x179: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x178, &mut x179, x177, x136, x163);
  let mut x180: u32 = 0;
  let mut x181: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x180, &mut x181, x179, x138, x165);
  let mut x182: u32 = 0;
  let mut x183: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x182, &mut x183, x181, x140, x167);
  let mut x184: u32 = 0;
  let mut x185: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x184, &mut x185, x183, x142, x169);
  let mut x186: u32 = 0;
  let mut x187: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x186, &mut x187, x185, x144, x171);
  let mut x188: u32 = 0;
  let mut x189: u32 = 0;
  fiat_p224_mulx_u32(&mut x188, &mut x189, x172, 0xffffffff);
  let mut x190: u32 = 0;
  let mut x191: u32 = 0;
  fiat_p224_mulx_u32(&mut x190, &mut x191, x188, 0xffffffff);
  let mut x192: u32 = 0;
  let mut x193: u32 = 0;
  fiat_p224_mulx_u32(&mut x192, &mut x193, x188, 0xffffffff);
  let mut x194: u32 = 0;
  let mut x195: u32 = 0;
  fiat_p224_mulx_u32(&mut x194, &mut x195, x188, 0xffffffff);
  let mut x196: u32 = 0;
  let mut x197: u32 = 0;
  fiat_p224_mulx_u32(&mut x196, &mut x197, x188, 0xffffffff);
  let mut x198: u32 = 0;
  let mut x199: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x198, &mut x199, 0x0, x197, x194);
  let mut x200: u32 = 0;
  let mut x201: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x200, &mut x201, x199, x195, x192);
  let mut x202: u32 = 0;
  let mut x203: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x202, &mut x203, x201, x193, x190);
  let x204: u32 = ((x203 as u32) + x191);
  let mut x205: u32 = 0;
  let mut x206: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x205, &mut x206, 0x0, x172, x188);
  let mut x207: u32 = 0;
  let mut x208: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x207, &mut x208, x206, x174, (0x0 as u32));
  let mut x209: u32 = 0;
  let mut x210: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x209, &mut x210, x208, x176, (0x0 as u32));
  let mut x211: u32 = 0;
  let mut x212: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x211, &mut x212, x210, x178, x196);
  let mut x213: u32 = 0;
  let mut x214: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x213, &mut x214, x212, x180, x198);
  let mut x215: u32 = 0;
  let mut x216: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x215, &mut x216, x214, x182, x200);
  let mut x217: u32 = 0;
  let mut x218: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x217, &mut x218, x216, x184, x202);
  let mut x219: u32 = 0;
  let mut x220: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x219, &mut x220, x218, x186, x204);
  let x221: u32 = ((x220 as u32) + (x187 as u32));
  let mut x222: u32 = 0;
  let mut x223: u32 = 0;
  fiat_p224_mulx_u32(&mut x222, &mut x223, x3, (arg2[6]));
  let mut x224: u32 = 0;
  let mut x225: u32 = 0;
  fiat_p224_mulx_u32(&mut x224, &mut x225, x3, (arg2[5]));
  let mut x226: u32 = 0;
  let mut x227: u32 = 0;
  fiat_p224_mulx_u32(&mut x226, &mut x227, x3, (arg2[4]));
  let mut x228: u32 = 0;
  let mut x229: u32 = 0;
  fiat_p224_mulx_u32(&mut x228, &mut x229, x3, (arg2[3]));
  let mut x230: u32 = 0;
  let mut x231: u32 = 0;
  fiat_p224_mulx_u32(&mut x230, &mut x231, x3, (arg2[2]));
  let mut x232: u32 = 0;
  let mut x233: u32 = 0;
  fiat_p224_mulx_u32(&mut x232, &mut x233, x3, (arg2[1]));
  let mut x234: u32 = 0;
  let mut x235: u32 = 0;
  fiat_p224_mulx_u32(&mut x234, &mut x235, x3, (arg2[0]));
  let mut x236: u32 = 0;
  let mut x237: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x236, &mut x237, 0x0, x235, x232);
  let mut x238: u32 = 0;
  let mut x239: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x238, &mut x239, x237, x233, x230);
  let mut x240: u32 = 0;
  let mut x241: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x240, &mut x241, x239, x231, x228);
  let mut x242: u32 = 0;
  let mut x243: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x242, &mut x243, x241, x229, x226);
  let mut x244: u32 = 0;
  let mut x245: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x244, &mut x245, x243, x227, x224);
  let mut x246: u32 = 0;
  let mut x247: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x246, &mut x247, x245, x225, x222);
  let x248: u32 = ((x247 as u32) + x223);
  let mut x249: u32 = 0;
  let mut x250: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x249, &mut x250, 0x0, x207, x234);
  let mut x251: u32 = 0;
  let mut x252: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x251, &mut x252, x250, x209, x236);
  let mut x253: u32 = 0;
  let mut x254: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x253, &mut x254, x252, x211, x238);
  let mut x255: u32 = 0;
  let mut x256: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x255, &mut x256, x254, x213, x240);
  let mut x257: u32 = 0;
  let mut x258: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x257, &mut x258, x256, x215, x242);
  let mut x259: u32 = 0;
  let mut x260: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x259, &mut x260, x258, x217, x244);
  let mut x261: u32 = 0;
  let mut x262: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x261, &mut x262, x260, x219, x246);
  let mut x263: u32 = 0;
  let mut x264: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x263, &mut x264, x262, x221, x248);
  let mut x265: u32 = 0;
  let mut x266: u32 = 0;
  fiat_p224_mulx_u32(&mut x265, &mut x266, x249, 0xffffffff);
  let mut x267: u32 = 0;
  let mut x268: u32 = 0;
  fiat_p224_mulx_u32(&mut x267, &mut x268, x265, 0xffffffff);
  let mut x269: u32 = 0;
  let mut x270: u32 = 0;
  fiat_p224_mulx_u32(&mut x269, &mut x270, x265, 0xffffffff);
  let mut x271: u32 = 0;
  let mut x272: u32 = 0;
  fiat_p224_mulx_u32(&mut x271, &mut x272, x265, 0xffffffff);
  let mut x273: u32 = 0;
  let mut x274: u32 = 0;
  fiat_p224_mulx_u32(&mut x273, &mut x274, x265, 0xffffffff);
  let mut x275: u32 = 0;
  let mut x276: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x275, &mut x276, 0x0, x274, x271);
  let mut x277: u32 = 0;
  let mut x278: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x277, &mut x278, x276, x272, x269);
  let mut x279: u32 = 0;
  let mut x280: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x279, &mut x280, x278, x270, x267);
  let x281: u32 = ((x280 as u32) + x268);
  let mut x282: u32 = 0;
  let mut x283: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x282, &mut x283, 0x0, x249, x265);
  let mut x284: u32 = 0;
  let mut x285: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x284, &mut x285, x283, x251, (0x0 as u32));
  let mut x286: u32 = 0;
  let mut x287: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x286, &mut x287, x285, x253, (0x0 as u32));
  let mut x288: u32 = 0;
  let mut x289: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x288, &mut x289, x287, x255, x273);
  let mut x290: u32 = 0;
  let mut x291: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x290, &mut x291, x289, x257, x275);
  let mut x292: u32 = 0;
  let mut x293: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x292, &mut x293, x291, x259, x277);
  let mut x294: u32 = 0;
  let mut x295: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x294, &mut x295, x293, x261, x279);
  let mut x296: u32 = 0;
  let mut x297: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x296, &mut x297, x295, x263, x281);
  let x298: u32 = ((x297 as u32) + (x264 as u32));
  let mut x299: u32 = 0;
  let mut x300: u32 = 0;
  fiat_p224_mulx_u32(&mut x299, &mut x300, x4, (arg2[6]));
  let mut x301: u32 = 0;
  let mut x302: u32 = 0;
  fiat_p224_mulx_u32(&mut x301, &mut x302, x4, (arg2[5]));
  let mut x303: u32 = 0;
  let mut x304: u32 = 0;
  fiat_p224_mulx_u32(&mut x303, &mut x304, x4, (arg2[4]));
  let mut x305: u32 = 0;
  let mut x306: u32 = 0;
  fiat_p224_mulx_u32(&mut x305, &mut x306, x4, (arg2[3]));
  let mut x307: u32 = 0;
  let mut x308: u32 = 0;
  fiat_p224_mulx_u32(&mut x307, &mut x308, x4, (arg2[2]));
  let mut x309: u32 = 0;
  let mut x310: u32 = 0;
  fiat_p224_mulx_u32(&mut x309, &mut x310, x4, (arg2[1]));
  let mut x311: u32 = 0;
  let mut x312: u32 = 0;
  fiat_p224_mulx_u32(&mut x311, &mut x312, x4, (arg2[0]));
  let mut x313: u32 = 0;
  let mut x314: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x313, &mut x314, 0x0, x312, x309);
  let mut x315: u32 = 0;
  let mut x316: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x315, &mut x316, x314, x310, x307);
  let mut x317: u32 = 0;
  let mut x318: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x317, &mut x318, x316, x308, x305);
  let mut x319: u32 = 0;
  let mut x320: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x319, &mut x320, x318, x306, x303);
  let mut x321: u32 = 0;
  let mut x322: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x321, &mut x322, x320, x304, x301);
  let mut x323: u32 = 0;
  let mut x324: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x323, &mut x324, x322, x302, x299);
  let x325: u32 = ((x324 as u32) + x300);
  let mut x326: u32 = 0;
  let mut x327: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x326, &mut x327, 0x0, x284, x311);
  let mut x328: u32 = 0;
  let mut x329: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x328, &mut x329, x327, x286, x313);
  let mut x330: u32 = 0;
  let mut x331: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x330, &mut x331, x329, x288, x315);
  let mut x332: u32 = 0;
  let mut x333: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x332, &mut x333, x331, x290, x317);
  let mut x334: u32 = 0;
  let mut x335: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x334, &mut x335, x333, x292, x319);
  let mut x336: u32 = 0;
  let mut x337: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x336, &mut x337, x335, x294, x321);
  let mut x338: u32 = 0;
  let mut x339: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x338, &mut x339, x337, x296, x323);
  let mut x340: u32 = 0;
  let mut x341: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x340, &mut x341, x339, x298, x325);
  let mut x342: u32 = 0;
  let mut x343: u32 = 0;
  fiat_p224_mulx_u32(&mut x342, &mut x343, x326, 0xffffffff);
  let mut x344: u32 = 0;
  let mut x345: u32 = 0;
  fiat_p224_mulx_u32(&mut x344, &mut x345, x342, 0xffffffff);
  let mut x346: u32 = 0;
  let mut x347: u32 = 0;
  fiat_p224_mulx_u32(&mut x346, &mut x347, x342, 0xffffffff);
  let mut x348: u32 = 0;
  let mut x349: u32 = 0;
  fiat_p224_mulx_u32(&mut x348, &mut x349, x342, 0xffffffff);
  let mut x350: u32 = 0;
  let mut x351: u32 = 0;
  fiat_p224_mulx_u32(&mut x350, &mut x351, x342, 0xffffffff);
  let mut x352: u32 = 0;
  let mut x353: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x352, &mut x353, 0x0, x351, x348);
  let mut x354: u32 = 0;
  let mut x355: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x354, &mut x355, x353, x349, x346);
  let mut x356: u32 = 0;
  let mut x357: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x356, &mut x357, x355, x347, x344);
  let x358: u32 = ((x357 as u32) + x345);
  let mut x359: u32 = 0;
  let mut x360: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x359, &mut x360, 0x0, x326, x342);
  let mut x361: u32 = 0;
  let mut x362: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x361, &mut x362, x360, x328, (0x0 as u32));
  let mut x363: u32 = 0;
  let mut x364: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x363, &mut x364, x362, x330, (0x0 as u32));
  let mut x365: u32 = 0;
  let mut x366: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x365, &mut x366, x364, x332, x350);
  let mut x367: u32 = 0;
  let mut x368: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x367, &mut x368, x366, x334, x352);
  let mut x369: u32 = 0;
  let mut x370: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x369, &mut x370, x368, x336, x354);
  let mut x371: u32 = 0;
  let mut x372: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x371, &mut x372, x370, x338, x356);
  let mut x373: u32 = 0;
  let mut x374: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x373, &mut x374, x372, x340, x358);
  let x375: u32 = ((x374 as u32) + (x341 as u32));
  let mut x376: u32 = 0;
  let mut x377: u32 = 0;
  fiat_p224_mulx_u32(&mut x376, &mut x377, x5, (arg2[6]));
  let mut x378: u32 = 0;
  let mut x379: u32 = 0;
  fiat_p224_mulx_u32(&mut x378, &mut x379, x5, (arg2[5]));
  let mut x380: u32 = 0;
  let mut x381: u32 = 0;
  fiat_p224_mulx_u32(&mut x380, &mut x381, x5, (arg2[4]));
  let mut x382: u32 = 0;
  let mut x383: u32 = 0;
  fiat_p224_mulx_u32(&mut x382, &mut x383, x5, (arg2[3]));
  let mut x384: u32 = 0;
  let mut x385: u32 = 0;
  fiat_p224_mulx_u32(&mut x384, &mut x385, x5, (arg2[2]));
  let mut x386: u32 = 0;
  let mut x387: u32 = 0;
  fiat_p224_mulx_u32(&mut x386, &mut x387, x5, (arg2[1]));
  let mut x388: u32 = 0;
  let mut x389: u32 = 0;
  fiat_p224_mulx_u32(&mut x388, &mut x389, x5, (arg2[0]));
  let mut x390: u32 = 0;
  let mut x391: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x390, &mut x391, 0x0, x389, x386);
  let mut x392: u32 = 0;
  let mut x393: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x392, &mut x393, x391, x387, x384);
  let mut x394: u32 = 0;
  let mut x395: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x394, &mut x395, x393, x385, x382);
  let mut x396: u32 = 0;
  let mut x397: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x396, &mut x397, x395, x383, x380);
  let mut x398: u32 = 0;
  let mut x399: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x398, &mut x399, x397, x381, x378);
  let mut x400: u32 = 0;
  let mut x401: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x400, &mut x401, x399, x379, x376);
  let x402: u32 = ((x401 as u32) + x377);
  let mut x403: u32 = 0;
  let mut x404: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x403, &mut x404, 0x0, x361, x388);
  let mut x405: u32 = 0;
  let mut x406: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x405, &mut x406, x404, x363, x390);
  let mut x407: u32 = 0;
  let mut x408: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x407, &mut x408, x406, x365, x392);
  let mut x409: u32 = 0;
  let mut x410: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x409, &mut x410, x408, x367, x394);
  let mut x411: u32 = 0;
  let mut x412: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x411, &mut x412, x410, x369, x396);
  let mut x413: u32 = 0;
  let mut x414: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x413, &mut x414, x412, x371, x398);
  let mut x415: u32 = 0;
  let mut x416: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x415, &mut x416, x414, x373, x400);
  let mut x417: u32 = 0;
  let mut x418: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x417, &mut x418, x416, x375, x402);
  let mut x419: u32 = 0;
  let mut x420: u32 = 0;
  fiat_p224_mulx_u32(&mut x419, &mut x420, x403, 0xffffffff);
  let mut x421: u32 = 0;
  let mut x422: u32 = 0;
  fiat_p224_mulx_u32(&mut x421, &mut x422, x419, 0xffffffff);
  let mut x423: u32 = 0;
  let mut x424: u32 = 0;
  fiat_p224_mulx_u32(&mut x423, &mut x424, x419, 0xffffffff);
  let mut x425: u32 = 0;
  let mut x426: u32 = 0;
  fiat_p224_mulx_u32(&mut x425, &mut x426, x419, 0xffffffff);
  let mut x427: u32 = 0;
  let mut x428: u32 = 0;
  fiat_p224_mulx_u32(&mut x427, &mut x428, x419, 0xffffffff);
  let mut x429: u32 = 0;
  let mut x430: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x429, &mut x430, 0x0, x428, x425);
  let mut x431: u32 = 0;
  let mut x432: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x431, &mut x432, x430, x426, x423);
  let mut x433: u32 = 0;
  let mut x434: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x433, &mut x434, x432, x424, x421);
  let x435: u32 = ((x434 as u32) + x422);
  let mut x436: u32 = 0;
  let mut x437: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x436, &mut x437, 0x0, x403, x419);
  let mut x438: u32 = 0;
  let mut x439: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x438, &mut x439, x437, x405, (0x0 as u32));
  let mut x440: u32 = 0;
  let mut x441: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x440, &mut x441, x439, x407, (0x0 as u32));
  let mut x442: u32 = 0;
  let mut x443: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x442, &mut x443, x441, x409, x427);
  let mut x444: u32 = 0;
  let mut x445: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x444, &mut x445, x443, x411, x429);
  let mut x446: u32 = 0;
  let mut x447: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x446, &mut x447, x445, x413, x431);
  let mut x448: u32 = 0;
  let mut x449: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x448, &mut x449, x447, x415, x433);
  let mut x450: u32 = 0;
  let mut x451: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x450, &mut x451, x449, x417, x435);
  let x452: u32 = ((x451 as u32) + (x418 as u32));
  let mut x453: u32 = 0;
  let mut x454: u32 = 0;
  fiat_p224_mulx_u32(&mut x453, &mut x454, x6, (arg2[6]));
  let mut x455: u32 = 0;
  let mut x456: u32 = 0;
  fiat_p224_mulx_u32(&mut x455, &mut x456, x6, (arg2[5]));
  let mut x457: u32 = 0;
  let mut x458: u32 = 0;
  fiat_p224_mulx_u32(&mut x457, &mut x458, x6, (arg2[4]));
  let mut x459: u32 = 0;
  let mut x460: u32 = 0;
  fiat_p224_mulx_u32(&mut x459, &mut x460, x6, (arg2[3]));
  let mut x461: u32 = 0;
  let mut x462: u32 = 0;
  fiat_p224_mulx_u32(&mut x461, &mut x462, x6, (arg2[2]));
  let mut x463: u32 = 0;
  let mut x464: u32 = 0;
  fiat_p224_mulx_u32(&mut x463, &mut x464, x6, (arg2[1]));
  let mut x465: u32 = 0;
  let mut x466: u32 = 0;
  fiat_p224_mulx_u32(&mut x465, &mut x466, x6, (arg2[0]));
  let mut x467: u32 = 0;
  let mut x468: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x467, &mut x468, 0x0, x466, x463);
  let mut x469: u32 = 0;
  let mut x470: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x469, &mut x470, x468, x464, x461);
  let mut x471: u32 = 0;
  let mut x472: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x471, &mut x472, x470, x462, x459);
  let mut x473: u32 = 0;
  let mut x474: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x473, &mut x474, x472, x460, x457);
  let mut x475: u32 = 0;
  let mut x476: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x475, &mut x476, x474, x458, x455);
  let mut x477: u32 = 0;
  let mut x478: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x477, &mut x478, x476, x456, x453);
  let x479: u32 = ((x478 as u32) + x454);
  let mut x480: u32 = 0;
  let mut x481: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x480, &mut x481, 0x0, x438, x465);
  let mut x482: u32 = 0;
  let mut x483: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x482, &mut x483, x481, x440, x467);
  let mut x484: u32 = 0;
  let mut x485: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x484, &mut x485, x483, x442, x469);
  let mut x486: u32 = 0;
  let mut x487: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x486, &mut x487, x485, x444, x471);
  let mut x488: u32 = 0;
  let mut x489: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x488, &mut x489, x487, x446, x473);
  let mut x490: u32 = 0;
  let mut x491: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x490, &mut x491, x489, x448, x475);
  let mut x492: u32 = 0;
  let mut x493: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x492, &mut x493, x491, x450, x477);
  let mut x494: u32 = 0;
  let mut x495: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x494, &mut x495, x493, x452, x479);
  let mut x496: u32 = 0;
  let mut x497: u32 = 0;
  fiat_p224_mulx_u32(&mut x496, &mut x497, x480, 0xffffffff);
  let mut x498: u32 = 0;
  let mut x499: u32 = 0;
  fiat_p224_mulx_u32(&mut x498, &mut x499, x496, 0xffffffff);
  let mut x500: u32 = 0;
  let mut x501: u32 = 0;
  fiat_p224_mulx_u32(&mut x500, &mut x501, x496, 0xffffffff);
  let mut x502: u32 = 0;
  let mut x503: u32 = 0;
  fiat_p224_mulx_u32(&mut x502, &mut x503, x496, 0xffffffff);
  let mut x504: u32 = 0;
  let mut x505: u32 = 0;
  fiat_p224_mulx_u32(&mut x504, &mut x505, x496, 0xffffffff);
  let mut x506: u32 = 0;
  let mut x507: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x506, &mut x507, 0x0, x505, x502);
  let mut x508: u32 = 0;
  let mut x509: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x508, &mut x509, x507, x503, x500);
  let mut x510: u32 = 0;
  let mut x511: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x510, &mut x511, x509, x501, x498);
  let x512: u32 = ((x511 as u32) + x499);
  let mut x513: u32 = 0;
  let mut x514: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x513, &mut x514, 0x0, x480, x496);
  let mut x515: u32 = 0;
  let mut x516: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x515, &mut x516, x514, x482, (0x0 as u32));
  let mut x517: u32 = 0;
  let mut x518: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x517, &mut x518, x516, x484, (0x0 as u32));
  let mut x519: u32 = 0;
  let mut x520: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x519, &mut x520, x518, x486, x504);
  let mut x521: u32 = 0;
  let mut x522: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x521, &mut x522, x520, x488, x506);
  let mut x523: u32 = 0;
  let mut x524: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x523, &mut x524, x522, x490, x508);
  let mut x525: u32 = 0;
  let mut x526: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x525, &mut x526, x524, x492, x510);
  let mut x527: u32 = 0;
  let mut x528: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x527, &mut x528, x526, x494, x512);
  let x529: u32 = ((x528 as u32) + (x495 as u32));
  let mut x530: u32 = 0;
  let mut x531: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x530, &mut x531, 0x0, x515, (0x1 as u32));
  let mut x532: u32 = 0;
  let mut x533: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x532, &mut x533, x531, x517, (0x0 as u32));
  let mut x534: u32 = 0;
  let mut x535: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x534, &mut x535, x533, x519, (0x0 as u32));
  let mut x536: u32 = 0;
  let mut x537: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x536, &mut x537, x535, x521, 0xffffffff);
  let mut x538: u32 = 0;
  let mut x539: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x538, &mut x539, x537, x523, 0xffffffff);
  let mut x540: u32 = 0;
  let mut x541: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x540, &mut x541, x539, x525, 0xffffffff);
  let mut x542: u32 = 0;
  let mut x543: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x542, &mut x543, x541, x527, 0xffffffff);
  let mut x544: u32 = 0;
  let mut x545: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x544, &mut x545, x543, x529, (0x0 as u32));
  let mut x546: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x546, x545, x530, x515);
  let mut x547: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x547, x545, x532, x517);
  let mut x548: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x548, x545, x534, x519);
  let mut x549: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x549, x545, x536, x521);
  let mut x550: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x550, x545, x538, x523);
  let mut x551: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x551, x545, x540, x525);
  let mut x552: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x552, x545, x542, x527);
  out1[0] = x546;
  out1[1] = x547;
  out1[2] = x548;
  out1[3] = x549;
  out1[4] = x550;
  out1[5] = x551;
  out1[6] = x552;
}

/*
 * The function fiat_p224_square squares a field element in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg1)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_square(out1: &mut [u32; 7], arg1: &[u32; 7]) -> () {
  let x1: u32 = (arg1[1]);
  let x2: u32 = (arg1[2]);
  let x3: u32 = (arg1[3]);
  let x4: u32 = (arg1[4]);
  let x5: u32 = (arg1[5]);
  let x6: u32 = (arg1[6]);
  let x7: u32 = (arg1[0]);
  let mut x8: u32 = 0;
  let mut x9: u32 = 0;
  fiat_p224_mulx_u32(&mut x8, &mut x9, x7, (arg1[6]));
  let mut x10: u32 = 0;
  let mut x11: u32 = 0;
  fiat_p224_mulx_u32(&mut x10, &mut x11, x7, (arg1[5]));
  let mut x12: u32 = 0;
  let mut x13: u32 = 0;
  fiat_p224_mulx_u32(&mut x12, &mut x13, x7, (arg1[4]));
  let mut x14: u32 = 0;
  let mut x15: u32 = 0;
  fiat_p224_mulx_u32(&mut x14, &mut x15, x7, (arg1[3]));
  let mut x16: u32 = 0;
  let mut x17: u32 = 0;
  fiat_p224_mulx_u32(&mut x16, &mut x17, x7, (arg1[2]));
  let mut x18: u32 = 0;
  let mut x19: u32 = 0;
  fiat_p224_mulx_u32(&mut x18, &mut x19, x7, (arg1[1]));
  let mut x20: u32 = 0;
  let mut x21: u32 = 0;
  fiat_p224_mulx_u32(&mut x20, &mut x21, x7, (arg1[0]));
  let mut x22: u32 = 0;
  let mut x23: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x22, &mut x23, 0x0, x21, x18);
  let mut x24: u32 = 0;
  let mut x25: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x24, &mut x25, x23, x19, x16);
  let mut x26: u32 = 0;
  let mut x27: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x26, &mut x27, x25, x17, x14);
  let mut x28: u32 = 0;
  let mut x29: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x28, &mut x29, x27, x15, x12);
  let mut x30: u32 = 0;
  let mut x31: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x30, &mut x31, x29, x13, x10);
  let mut x32: u32 = 0;
  let mut x33: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x32, &mut x33, x31, x11, x8);
  let x34: u32 = ((x33 as u32) + x9);
  let mut x35: u32 = 0;
  let mut x36: u32 = 0;
  fiat_p224_mulx_u32(&mut x35, &mut x36, x20, 0xffffffff);
  let mut x37: u32 = 0;
  let mut x38: u32 = 0;
  fiat_p224_mulx_u32(&mut x37, &mut x38, x35, 0xffffffff);
  let mut x39: u32 = 0;
  let mut x40: u32 = 0;
  fiat_p224_mulx_u32(&mut x39, &mut x40, x35, 0xffffffff);
  let mut x41: u32 = 0;
  let mut x42: u32 = 0;
  fiat_p224_mulx_u32(&mut x41, &mut x42, x35, 0xffffffff);
  let mut x43: u32 = 0;
  let mut x44: u32 = 0;
  fiat_p224_mulx_u32(&mut x43, &mut x44, x35, 0xffffffff);
  let mut x45: u32 = 0;
  let mut x46: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x45, &mut x46, 0x0, x44, x41);
  let mut x47: u32 = 0;
  let mut x48: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x47, &mut x48, x46, x42, x39);
  let mut x49: u32 = 0;
  let mut x50: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x49, &mut x50, x48, x40, x37);
  let x51: u32 = ((x50 as u32) + x38);
  let mut x52: u32 = 0;
  let mut x53: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x52, &mut x53, 0x0, x20, x35);
  let mut x54: u32 = 0;
  let mut x55: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x54, &mut x55, x53, x22, (0x0 as u32));
  let mut x56: u32 = 0;
  let mut x57: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x56, &mut x57, x55, x24, (0x0 as u32));
  let mut x58: u32 = 0;
  let mut x59: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x58, &mut x59, x57, x26, x43);
  let mut x60: u32 = 0;
  let mut x61: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x60, &mut x61, x59, x28, x45);
  let mut x62: u32 = 0;
  let mut x63: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x62, &mut x63, x61, x30, x47);
  let mut x64: u32 = 0;
  let mut x65: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x64, &mut x65, x63, x32, x49);
  let mut x66: u32 = 0;
  let mut x67: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x66, &mut x67, x65, x34, x51);
  let mut x68: u32 = 0;
  let mut x69: u32 = 0;
  fiat_p224_mulx_u32(&mut x68, &mut x69, x1, (arg1[6]));
  let mut x70: u32 = 0;
  let mut x71: u32 = 0;
  fiat_p224_mulx_u32(&mut x70, &mut x71, x1, (arg1[5]));
  let mut x72: u32 = 0;
  let mut x73: u32 = 0;
  fiat_p224_mulx_u32(&mut x72, &mut x73, x1, (arg1[4]));
  let mut x74: u32 = 0;
  let mut x75: u32 = 0;
  fiat_p224_mulx_u32(&mut x74, &mut x75, x1, (arg1[3]));
  let mut x76: u32 = 0;
  let mut x77: u32 = 0;
  fiat_p224_mulx_u32(&mut x76, &mut x77, x1, (arg1[2]));
  let mut x78: u32 = 0;
  let mut x79: u32 = 0;
  fiat_p224_mulx_u32(&mut x78, &mut x79, x1, (arg1[1]));
  let mut x80: u32 = 0;
  let mut x81: u32 = 0;
  fiat_p224_mulx_u32(&mut x80, &mut x81, x1, (arg1[0]));
  let mut x82: u32 = 0;
  let mut x83: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x82, &mut x83, 0x0, x81, x78);
  let mut x84: u32 = 0;
  let mut x85: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x84, &mut x85, x83, x79, x76);
  let mut x86: u32 = 0;
  let mut x87: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x86, &mut x87, x85, x77, x74);
  let mut x88: u32 = 0;
  let mut x89: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x88, &mut x89, x87, x75, x72);
  let mut x90: u32 = 0;
  let mut x91: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x90, &mut x91, x89, x73, x70);
  let mut x92: u32 = 0;
  let mut x93: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x92, &mut x93, x91, x71, x68);
  let x94: u32 = ((x93 as u32) + x69);
  let mut x95: u32 = 0;
  let mut x96: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x95, &mut x96, 0x0, x54, x80);
  let mut x97: u32 = 0;
  let mut x98: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x97, &mut x98, x96, x56, x82);
  let mut x99: u32 = 0;
  let mut x100: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x99, &mut x100, x98, x58, x84);
  let mut x101: u32 = 0;
  let mut x102: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x101, &mut x102, x100, x60, x86);
  let mut x103: u32 = 0;
  let mut x104: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x103, &mut x104, x102, x62, x88);
  let mut x105: u32 = 0;
  let mut x106: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x105, &mut x106, x104, x64, x90);
  let mut x107: u32 = 0;
  let mut x108: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x107, &mut x108, x106, x66, x92);
  let mut x109: u32 = 0;
  let mut x110: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x109, &mut x110, x108, (x67 as u32), x94);
  let mut x111: u32 = 0;
  let mut x112: u32 = 0;
  fiat_p224_mulx_u32(&mut x111, &mut x112, x95, 0xffffffff);
  let mut x113: u32 = 0;
  let mut x114: u32 = 0;
  fiat_p224_mulx_u32(&mut x113, &mut x114, x111, 0xffffffff);
  let mut x115: u32 = 0;
  let mut x116: u32 = 0;
  fiat_p224_mulx_u32(&mut x115, &mut x116, x111, 0xffffffff);
  let mut x117: u32 = 0;
  let mut x118: u32 = 0;
  fiat_p224_mulx_u32(&mut x117, &mut x118, x111, 0xffffffff);
  let mut x119: u32 = 0;
  let mut x120: u32 = 0;
  fiat_p224_mulx_u32(&mut x119, &mut x120, x111, 0xffffffff);
  let mut x121: u32 = 0;
  let mut x122: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x121, &mut x122, 0x0, x120, x117);
  let mut x123: u32 = 0;
  let mut x124: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x123, &mut x124, x122, x118, x115);
  let mut x125: u32 = 0;
  let mut x126: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x125, &mut x126, x124, x116, x113);
  let x127: u32 = ((x126 as u32) + x114);
  let mut x128: u32 = 0;
  let mut x129: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x128, &mut x129, 0x0, x95, x111);
  let mut x130: u32 = 0;
  let mut x131: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x130, &mut x131, x129, x97, (0x0 as u32));
  let mut x132: u32 = 0;
  let mut x133: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x132, &mut x133, x131, x99, (0x0 as u32));
  let mut x134: u32 = 0;
  let mut x135: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x134, &mut x135, x133, x101, x119);
  let mut x136: u32 = 0;
  let mut x137: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x136, &mut x137, x135, x103, x121);
  let mut x138: u32 = 0;
  let mut x139: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x138, &mut x139, x137, x105, x123);
  let mut x140: u32 = 0;
  let mut x141: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x140, &mut x141, x139, x107, x125);
  let mut x142: u32 = 0;
  let mut x143: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x142, &mut x143, x141, x109, x127);
  let x144: u32 = ((x143 as u32) + (x110 as u32));
  let mut x145: u32 = 0;
  let mut x146: u32 = 0;
  fiat_p224_mulx_u32(&mut x145, &mut x146, x2, (arg1[6]));
  let mut x147: u32 = 0;
  let mut x148: u32 = 0;
  fiat_p224_mulx_u32(&mut x147, &mut x148, x2, (arg1[5]));
  let mut x149: u32 = 0;
  let mut x150: u32 = 0;
  fiat_p224_mulx_u32(&mut x149, &mut x150, x2, (arg1[4]));
  let mut x151: u32 = 0;
  let mut x152: u32 = 0;
  fiat_p224_mulx_u32(&mut x151, &mut x152, x2, (arg1[3]));
  let mut x153: u32 = 0;
  let mut x154: u32 = 0;
  fiat_p224_mulx_u32(&mut x153, &mut x154, x2, (arg1[2]));
  let mut x155: u32 = 0;
  let mut x156: u32 = 0;
  fiat_p224_mulx_u32(&mut x155, &mut x156, x2, (arg1[1]));
  let mut x157: u32 = 0;
  let mut x158: u32 = 0;
  fiat_p224_mulx_u32(&mut x157, &mut x158, x2, (arg1[0]));
  let mut x159: u32 = 0;
  let mut x160: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x159, &mut x160, 0x0, x158, x155);
  let mut x161: u32 = 0;
  let mut x162: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x161, &mut x162, x160, x156, x153);
  let mut x163: u32 = 0;
  let mut x164: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x163, &mut x164, x162, x154, x151);
  let mut x165: u32 = 0;
  let mut x166: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x165, &mut x166, x164, x152, x149);
  let mut x167: u32 = 0;
  let mut x168: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x167, &mut x168, x166, x150, x147);
  let mut x169: u32 = 0;
  let mut x170: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x169, &mut x170, x168, x148, x145);
  let x171: u32 = ((x170 as u32) + x146);
  let mut x172: u32 = 0;
  let mut x173: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x172, &mut x173, 0x0, x130, x157);
  let mut x174: u32 = 0;
  let mut x175: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x174, &mut x175, x173, x132, x159);
  let mut x176: u32 = 0;
  let mut x177: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x176, &mut x177, x175, x134, x161);
  let mut x178: u32 = 0;
  let mut x179: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x178, &mut x179, x177, x136, x163);
  let mut x180: u32 = 0;
  let mut x181: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x180, &mut x181, x179, x138, x165);
  let mut x182: u32 = 0;
  let mut x183: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x182, &mut x183, x181, x140, x167);
  let mut x184: u32 = 0;
  let mut x185: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x184, &mut x185, x183, x142, x169);
  let mut x186: u32 = 0;
  let mut x187: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x186, &mut x187, x185, x144, x171);
  let mut x188: u32 = 0;
  let mut x189: u32 = 0;
  fiat_p224_mulx_u32(&mut x188, &mut x189, x172, 0xffffffff);
  let mut x190: u32 = 0;
  let mut x191: u32 = 0;
  fiat_p224_mulx_u32(&mut x190, &mut x191, x188, 0xffffffff);
  let mut x192: u32 = 0;
  let mut x193: u32 = 0;
  fiat_p224_mulx_u32(&mut x192, &mut x193, x188, 0xffffffff);
  let mut x194: u32 = 0;
  let mut x195: u32 = 0;
  fiat_p224_mulx_u32(&mut x194, &mut x195, x188, 0xffffffff);
  let mut x196: u32 = 0;
  let mut x197: u32 = 0;
  fiat_p224_mulx_u32(&mut x196, &mut x197, x188, 0xffffffff);
  let mut x198: u32 = 0;
  let mut x199: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x198, &mut x199, 0x0, x197, x194);
  let mut x200: u32 = 0;
  let mut x201: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x200, &mut x201, x199, x195, x192);
  let mut x202: u32 = 0;
  let mut x203: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x202, &mut x203, x201, x193, x190);
  let x204: u32 = ((x203 as u32) + x191);
  let mut x205: u32 = 0;
  let mut x206: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x205, &mut x206, 0x0, x172, x188);
  let mut x207: u32 = 0;
  let mut x208: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x207, &mut x208, x206, x174, (0x0 as u32));
  let mut x209: u32 = 0;
  let mut x210: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x209, &mut x210, x208, x176, (0x0 as u32));
  let mut x211: u32 = 0;
  let mut x212: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x211, &mut x212, x210, x178, x196);
  let mut x213: u32 = 0;
  let mut x214: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x213, &mut x214, x212, x180, x198);
  let mut x215: u32 = 0;
  let mut x216: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x215, &mut x216, x214, x182, x200);
  let mut x217: u32 = 0;
  let mut x218: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x217, &mut x218, x216, x184, x202);
  let mut x219: u32 = 0;
  let mut x220: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x219, &mut x220, x218, x186, x204);
  let x221: u32 = ((x220 as u32) + (x187 as u32));
  let mut x222: u32 = 0;
  let mut x223: u32 = 0;
  fiat_p224_mulx_u32(&mut x222, &mut x223, x3, (arg1[6]));
  let mut x224: u32 = 0;
  let mut x225: u32 = 0;
  fiat_p224_mulx_u32(&mut x224, &mut x225, x3, (arg1[5]));
  let mut x226: u32 = 0;
  let mut x227: u32 = 0;
  fiat_p224_mulx_u32(&mut x226, &mut x227, x3, (arg1[4]));
  let mut x228: u32 = 0;
  let mut x229: u32 = 0;
  fiat_p224_mulx_u32(&mut x228, &mut x229, x3, (arg1[3]));
  let mut x230: u32 = 0;
  let mut x231: u32 = 0;
  fiat_p224_mulx_u32(&mut x230, &mut x231, x3, (arg1[2]));
  let mut x232: u32 = 0;
  let mut x233: u32 = 0;
  fiat_p224_mulx_u32(&mut x232, &mut x233, x3, (arg1[1]));
  let mut x234: u32 = 0;
  let mut x235: u32 = 0;
  fiat_p224_mulx_u32(&mut x234, &mut x235, x3, (arg1[0]));
  let mut x236: u32 = 0;
  let mut x237: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x236, &mut x237, 0x0, x235, x232);
  let mut x238: u32 = 0;
  let mut x239: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x238, &mut x239, x237, x233, x230);
  let mut x240: u32 = 0;
  let mut x241: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x240, &mut x241, x239, x231, x228);
  let mut x242: u32 = 0;
  let mut x243: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x242, &mut x243, x241, x229, x226);
  let mut x244: u32 = 0;
  let mut x245: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x244, &mut x245, x243, x227, x224);
  let mut x246: u32 = 0;
  let mut x247: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x246, &mut x247, x245, x225, x222);
  let x248: u32 = ((x247 as u32) + x223);
  let mut x249: u32 = 0;
  let mut x250: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x249, &mut x250, 0x0, x207, x234);
  let mut x251: u32 = 0;
  let mut x252: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x251, &mut x252, x250, x209, x236);
  let mut x253: u32 = 0;
  let mut x254: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x253, &mut x254, x252, x211, x238);
  let mut x255: u32 = 0;
  let mut x256: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x255, &mut x256, x254, x213, x240);
  let mut x257: u32 = 0;
  let mut x258: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x257, &mut x258, x256, x215, x242);
  let mut x259: u32 = 0;
  let mut x260: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x259, &mut x260, x258, x217, x244);
  let mut x261: u32 = 0;
  let mut x262: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x261, &mut x262, x260, x219, x246);
  let mut x263: u32 = 0;
  let mut x264: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x263, &mut x264, x262, x221, x248);
  let mut x265: u32 = 0;
  let mut x266: u32 = 0;
  fiat_p224_mulx_u32(&mut x265, &mut x266, x249, 0xffffffff);
  let mut x267: u32 = 0;
  let mut x268: u32 = 0;
  fiat_p224_mulx_u32(&mut x267, &mut x268, x265, 0xffffffff);
  let mut x269: u32 = 0;
  let mut x270: u32 = 0;
  fiat_p224_mulx_u32(&mut x269, &mut x270, x265, 0xffffffff);
  let mut x271: u32 = 0;
  let mut x272: u32 = 0;
  fiat_p224_mulx_u32(&mut x271, &mut x272, x265, 0xffffffff);
  let mut x273: u32 = 0;
  let mut x274: u32 = 0;
  fiat_p224_mulx_u32(&mut x273, &mut x274, x265, 0xffffffff);
  let mut x275: u32 = 0;
  let mut x276: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x275, &mut x276, 0x0, x274, x271);
  let mut x277: u32 = 0;
  let mut x278: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x277, &mut x278, x276, x272, x269);
  let mut x279: u32 = 0;
  let mut x280: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x279, &mut x280, x278, x270, x267);
  let x281: u32 = ((x280 as u32) + x268);
  let mut x282: u32 = 0;
  let mut x283: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x282, &mut x283, 0x0, x249, x265);
  let mut x284: u32 = 0;
  let mut x285: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x284, &mut x285, x283, x251, (0x0 as u32));
  let mut x286: u32 = 0;
  let mut x287: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x286, &mut x287, x285, x253, (0x0 as u32));
  let mut x288: u32 = 0;
  let mut x289: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x288, &mut x289, x287, x255, x273);
  let mut x290: u32 = 0;
  let mut x291: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x290, &mut x291, x289, x257, x275);
  let mut x292: u32 = 0;
  let mut x293: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x292, &mut x293, x291, x259, x277);
  let mut x294: u32 = 0;
  let mut x295: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x294, &mut x295, x293, x261, x279);
  let mut x296: u32 = 0;
  let mut x297: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x296, &mut x297, x295, x263, x281);
  let x298: u32 = ((x297 as u32) + (x264 as u32));
  let mut x299: u32 = 0;
  let mut x300: u32 = 0;
  fiat_p224_mulx_u32(&mut x299, &mut x300, x4, (arg1[6]));
  let mut x301: u32 = 0;
  let mut x302: u32 = 0;
  fiat_p224_mulx_u32(&mut x301, &mut x302, x4, (arg1[5]));
  let mut x303: u32 = 0;
  let mut x304: u32 = 0;
  fiat_p224_mulx_u32(&mut x303, &mut x304, x4, (arg1[4]));
  let mut x305: u32 = 0;
  let mut x306: u32 = 0;
  fiat_p224_mulx_u32(&mut x305, &mut x306, x4, (arg1[3]));
  let mut x307: u32 = 0;
  let mut x308: u32 = 0;
  fiat_p224_mulx_u32(&mut x307, &mut x308, x4, (arg1[2]));
  let mut x309: u32 = 0;
  let mut x310: u32 = 0;
  fiat_p224_mulx_u32(&mut x309, &mut x310, x4, (arg1[1]));
  let mut x311: u32 = 0;
  let mut x312: u32 = 0;
  fiat_p224_mulx_u32(&mut x311, &mut x312, x4, (arg1[0]));
  let mut x313: u32 = 0;
  let mut x314: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x313, &mut x314, 0x0, x312, x309);
  let mut x315: u32 = 0;
  let mut x316: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x315, &mut x316, x314, x310, x307);
  let mut x317: u32 = 0;
  let mut x318: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x317, &mut x318, x316, x308, x305);
  let mut x319: u32 = 0;
  let mut x320: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x319, &mut x320, x318, x306, x303);
  let mut x321: u32 = 0;
  let mut x322: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x321, &mut x322, x320, x304, x301);
  let mut x323: u32 = 0;
  let mut x324: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x323, &mut x324, x322, x302, x299);
  let x325: u32 = ((x324 as u32) + x300);
  let mut x326: u32 = 0;
  let mut x327: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x326, &mut x327, 0x0, x284, x311);
  let mut x328: u32 = 0;
  let mut x329: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x328, &mut x329, x327, x286, x313);
  let mut x330: u32 = 0;
  let mut x331: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x330, &mut x331, x329, x288, x315);
  let mut x332: u32 = 0;
  let mut x333: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x332, &mut x333, x331, x290, x317);
  let mut x334: u32 = 0;
  let mut x335: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x334, &mut x335, x333, x292, x319);
  let mut x336: u32 = 0;
  let mut x337: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x336, &mut x337, x335, x294, x321);
  let mut x338: u32 = 0;
  let mut x339: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x338, &mut x339, x337, x296, x323);
  let mut x340: u32 = 0;
  let mut x341: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x340, &mut x341, x339, x298, x325);
  let mut x342: u32 = 0;
  let mut x343: u32 = 0;
  fiat_p224_mulx_u32(&mut x342, &mut x343, x326, 0xffffffff);
  let mut x344: u32 = 0;
  let mut x345: u32 = 0;
  fiat_p224_mulx_u32(&mut x344, &mut x345, x342, 0xffffffff);
  let mut x346: u32 = 0;
  let mut x347: u32 = 0;
  fiat_p224_mulx_u32(&mut x346, &mut x347, x342, 0xffffffff);
  let mut x348: u32 = 0;
  let mut x349: u32 = 0;
  fiat_p224_mulx_u32(&mut x348, &mut x349, x342, 0xffffffff);
  let mut x350: u32 = 0;
  let mut x351: u32 = 0;
  fiat_p224_mulx_u32(&mut x350, &mut x351, x342, 0xffffffff);
  let mut x352: u32 = 0;
  let mut x353: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x352, &mut x353, 0x0, x351, x348);
  let mut x354: u32 = 0;
  let mut x355: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x354, &mut x355, x353, x349, x346);
  let mut x356: u32 = 0;
  let mut x357: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x356, &mut x357, x355, x347, x344);
  let x358: u32 = ((x357 as u32) + x345);
  let mut x359: u32 = 0;
  let mut x360: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x359, &mut x360, 0x0, x326, x342);
  let mut x361: u32 = 0;
  let mut x362: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x361, &mut x362, x360, x328, (0x0 as u32));
  let mut x363: u32 = 0;
  let mut x364: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x363, &mut x364, x362, x330, (0x0 as u32));
  let mut x365: u32 = 0;
  let mut x366: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x365, &mut x366, x364, x332, x350);
  let mut x367: u32 = 0;
  let mut x368: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x367, &mut x368, x366, x334, x352);
  let mut x369: u32 = 0;
  let mut x370: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x369, &mut x370, x368, x336, x354);
  let mut x371: u32 = 0;
  let mut x372: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x371, &mut x372, x370, x338, x356);
  let mut x373: u32 = 0;
  let mut x374: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x373, &mut x374, x372, x340, x358);
  let x375: u32 = ((x374 as u32) + (x341 as u32));
  let mut x376: u32 = 0;
  let mut x377: u32 = 0;
  fiat_p224_mulx_u32(&mut x376, &mut x377, x5, (arg1[6]));
  let mut x378: u32 = 0;
  let mut x379: u32 = 0;
  fiat_p224_mulx_u32(&mut x378, &mut x379, x5, (arg1[5]));
  let mut x380: u32 = 0;
  let mut x381: u32 = 0;
  fiat_p224_mulx_u32(&mut x380, &mut x381, x5, (arg1[4]));
  let mut x382: u32 = 0;
  let mut x383: u32 = 0;
  fiat_p224_mulx_u32(&mut x382, &mut x383, x5, (arg1[3]));
  let mut x384: u32 = 0;
  let mut x385: u32 = 0;
  fiat_p224_mulx_u32(&mut x384, &mut x385, x5, (arg1[2]));
  let mut x386: u32 = 0;
  let mut x387: u32 = 0;
  fiat_p224_mulx_u32(&mut x386, &mut x387, x5, (arg1[1]));
  let mut x388: u32 = 0;
  let mut x389: u32 = 0;
  fiat_p224_mulx_u32(&mut x388, &mut x389, x5, (arg1[0]));
  let mut x390: u32 = 0;
  let mut x391: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x390, &mut x391, 0x0, x389, x386);
  let mut x392: u32 = 0;
  let mut x393: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x392, &mut x393, x391, x387, x384);
  let mut x394: u32 = 0;
  let mut x395: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x394, &mut x395, x393, x385, x382);
  let mut x396: u32 = 0;
  let mut x397: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x396, &mut x397, x395, x383, x380);
  let mut x398: u32 = 0;
  let mut x399: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x398, &mut x399, x397, x381, x378);
  let mut x400: u32 = 0;
  let mut x401: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x400, &mut x401, x399, x379, x376);
  let x402: u32 = ((x401 as u32) + x377);
  let mut x403: u32 = 0;
  let mut x404: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x403, &mut x404, 0x0, x361, x388);
  let mut x405: u32 = 0;
  let mut x406: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x405, &mut x406, x404, x363, x390);
  let mut x407: u32 = 0;
  let mut x408: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x407, &mut x408, x406, x365, x392);
  let mut x409: u32 = 0;
  let mut x410: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x409, &mut x410, x408, x367, x394);
  let mut x411: u32 = 0;
  let mut x412: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x411, &mut x412, x410, x369, x396);
  let mut x413: u32 = 0;
  let mut x414: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x413, &mut x414, x412, x371, x398);
  let mut x415: u32 = 0;
  let mut x416: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x415, &mut x416, x414, x373, x400);
  let mut x417: u32 = 0;
  let mut x418: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x417, &mut x418, x416, x375, x402);
  let mut x419: u32 = 0;
  let mut x420: u32 = 0;
  fiat_p224_mulx_u32(&mut x419, &mut x420, x403, 0xffffffff);
  let mut x421: u32 = 0;
  let mut x422: u32 = 0;
  fiat_p224_mulx_u32(&mut x421, &mut x422, x419, 0xffffffff);
  let mut x423: u32 = 0;
  let mut x424: u32 = 0;
  fiat_p224_mulx_u32(&mut x423, &mut x424, x419, 0xffffffff);
  let mut x425: u32 = 0;
  let mut x426: u32 = 0;
  fiat_p224_mulx_u32(&mut x425, &mut x426, x419, 0xffffffff);
  let mut x427: u32 = 0;
  let mut x428: u32 = 0;
  fiat_p224_mulx_u32(&mut x427, &mut x428, x419, 0xffffffff);
  let mut x429: u32 = 0;
  let mut x430: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x429, &mut x430, 0x0, x428, x425);
  let mut x431: u32 = 0;
  let mut x432: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x431, &mut x432, x430, x426, x423);
  let mut x433: u32 = 0;
  let mut x434: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x433, &mut x434, x432, x424, x421);
  let x435: u32 = ((x434 as u32) + x422);
  let mut x436: u32 = 0;
  let mut x437: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x436, &mut x437, 0x0, x403, x419);
  let mut x438: u32 = 0;
  let mut x439: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x438, &mut x439, x437, x405, (0x0 as u32));
  let mut x440: u32 = 0;
  let mut x441: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x440, &mut x441, x439, x407, (0x0 as u32));
  let mut x442: u32 = 0;
  let mut x443: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x442, &mut x443, x441, x409, x427);
  let mut x444: u32 = 0;
  let mut x445: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x444, &mut x445, x443, x411, x429);
  let mut x446: u32 = 0;
  let mut x447: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x446, &mut x447, x445, x413, x431);
  let mut x448: u32 = 0;
  let mut x449: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x448, &mut x449, x447, x415, x433);
  let mut x450: u32 = 0;
  let mut x451: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x450, &mut x451, x449, x417, x435);
  let x452: u32 = ((x451 as u32) + (x418 as u32));
  let mut x453: u32 = 0;
  let mut x454: u32 = 0;
  fiat_p224_mulx_u32(&mut x453, &mut x454, x6, (arg1[6]));
  let mut x455: u32 = 0;
  let mut x456: u32 = 0;
  fiat_p224_mulx_u32(&mut x455, &mut x456, x6, (arg1[5]));
  let mut x457: u32 = 0;
  let mut x458: u32 = 0;
  fiat_p224_mulx_u32(&mut x457, &mut x458, x6, (arg1[4]));
  let mut x459: u32 = 0;
  let mut x460: u32 = 0;
  fiat_p224_mulx_u32(&mut x459, &mut x460, x6, (arg1[3]));
  let mut x461: u32 = 0;
  let mut x462: u32 = 0;
  fiat_p224_mulx_u32(&mut x461, &mut x462, x6, (arg1[2]));
  let mut x463: u32 = 0;
  let mut x464: u32 = 0;
  fiat_p224_mulx_u32(&mut x463, &mut x464, x6, (arg1[1]));
  let mut x465: u32 = 0;
  let mut x466: u32 = 0;
  fiat_p224_mulx_u32(&mut x465, &mut x466, x6, (arg1[0]));
  let mut x467: u32 = 0;
  let mut x468: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x467, &mut x468, 0x0, x466, x463);
  let mut x469: u32 = 0;
  let mut x470: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x469, &mut x470, x468, x464, x461);
  let mut x471: u32 = 0;
  let mut x472: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x471, &mut x472, x470, x462, x459);
  let mut x473: u32 = 0;
  let mut x474: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x473, &mut x474, x472, x460, x457);
  let mut x475: u32 = 0;
  let mut x476: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x475, &mut x476, x474, x458, x455);
  let mut x477: u32 = 0;
  let mut x478: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x477, &mut x478, x476, x456, x453);
  let x479: u32 = ((x478 as u32) + x454);
  let mut x480: u32 = 0;
  let mut x481: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x480, &mut x481, 0x0, x438, x465);
  let mut x482: u32 = 0;
  let mut x483: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x482, &mut x483, x481, x440, x467);
  let mut x484: u32 = 0;
  let mut x485: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x484, &mut x485, x483, x442, x469);
  let mut x486: u32 = 0;
  let mut x487: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x486, &mut x487, x485, x444, x471);
  let mut x488: u32 = 0;
  let mut x489: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x488, &mut x489, x487, x446, x473);
  let mut x490: u32 = 0;
  let mut x491: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x490, &mut x491, x489, x448, x475);
  let mut x492: u32 = 0;
  let mut x493: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x492, &mut x493, x491, x450, x477);
  let mut x494: u32 = 0;
  let mut x495: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x494, &mut x495, x493, x452, x479);
  let mut x496: u32 = 0;
  let mut x497: u32 = 0;
  fiat_p224_mulx_u32(&mut x496, &mut x497, x480, 0xffffffff);
  let mut x498: u32 = 0;
  let mut x499: u32 = 0;
  fiat_p224_mulx_u32(&mut x498, &mut x499, x496, 0xffffffff);
  let mut x500: u32 = 0;
  let mut x501: u32 = 0;
  fiat_p224_mulx_u32(&mut x500, &mut x501, x496, 0xffffffff);
  let mut x502: u32 = 0;
  let mut x503: u32 = 0;
  fiat_p224_mulx_u32(&mut x502, &mut x503, x496, 0xffffffff);
  let mut x504: u32 = 0;
  let mut x505: u32 = 0;
  fiat_p224_mulx_u32(&mut x504, &mut x505, x496, 0xffffffff);
  let mut x506: u32 = 0;
  let mut x507: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x506, &mut x507, 0x0, x505, x502);
  let mut x508: u32 = 0;
  let mut x509: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x508, &mut x509, x507, x503, x500);
  let mut x510: u32 = 0;
  let mut x511: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x510, &mut x511, x509, x501, x498);
  let x512: u32 = ((x511 as u32) + x499);
  let mut x513: u32 = 0;
  let mut x514: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x513, &mut x514, 0x0, x480, x496);
  let mut x515: u32 = 0;
  let mut x516: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x515, &mut x516, x514, x482, (0x0 as u32));
  let mut x517: u32 = 0;
  let mut x518: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x517, &mut x518, x516, x484, (0x0 as u32));
  let mut x519: u32 = 0;
  let mut x520: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x519, &mut x520, x518, x486, x504);
  let mut x521: u32 = 0;
  let mut x522: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x521, &mut x522, x520, x488, x506);
  let mut x523: u32 = 0;
  let mut x524: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x523, &mut x524, x522, x490, x508);
  let mut x525: u32 = 0;
  let mut x526: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x525, &mut x526, x524, x492, x510);
  let mut x527: u32 = 0;
  let mut x528: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x527, &mut x528, x526, x494, x512);
  let x529: u32 = ((x528 as u32) + (x495 as u32));
  let mut x530: u32 = 0;
  let mut x531: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x530, &mut x531, 0x0, x515, (0x1 as u32));
  let mut x532: u32 = 0;
  let mut x533: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x532, &mut x533, x531, x517, (0x0 as u32));
  let mut x534: u32 = 0;
  let mut x535: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x534, &mut x535, x533, x519, (0x0 as u32));
  let mut x536: u32 = 0;
  let mut x537: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x536, &mut x537, x535, x521, 0xffffffff);
  let mut x538: u32 = 0;
  let mut x539: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x538, &mut x539, x537, x523, 0xffffffff);
  let mut x540: u32 = 0;
  let mut x541: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x540, &mut x541, x539, x525, 0xffffffff);
  let mut x542: u32 = 0;
  let mut x543: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x542, &mut x543, x541, x527, 0xffffffff);
  let mut x544: u32 = 0;
  let mut x545: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x544, &mut x545, x543, x529, (0x0 as u32));
  let mut x546: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x546, x545, x530, x515);
  let mut x547: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x547, x545, x532, x517);
  let mut x548: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x548, x545, x534, x519);
  let mut x549: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x549, x545, x536, x521);
  let mut x550: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x550, x545, x538, x523);
  let mut x551: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x551, x545, x540, x525);
  let mut x552: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x552, x545, x542, x527);
  out1[0] = x546;
  out1[1] = x547;
  out1[2] = x548;
  out1[3] = x549;
  out1[4] = x550;
  out1[5] = x551;
  out1[6] = x552;
}

/*
 * The function fiat_p224_add adds two field elements in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 *   0 ≤ eval arg2 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) + eval (from_montgomery arg2)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_add(out1: &mut [u32; 7], arg1: &[u32; 7], arg2: &[u32; 7]) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x1, &mut x2, 0x0, (arg1[0]), (arg2[0]));
  let mut x3: u32 = 0;
  let mut x4: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x3, &mut x4, x2, (arg1[1]), (arg2[1]));
  let mut x5: u32 = 0;
  let mut x6: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x5, &mut x6, x4, (arg1[2]), (arg2[2]));
  let mut x7: u32 = 0;
  let mut x8: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x7, &mut x8, x6, (arg1[3]), (arg2[3]));
  let mut x9: u32 = 0;
  let mut x10: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x9, &mut x10, x8, (arg1[4]), (arg2[4]));
  let mut x11: u32 = 0;
  let mut x12: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x11, &mut x12, x10, (arg1[5]), (arg2[5]));
  let mut x13: u32 = 0;
  let mut x14: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x13, &mut x14, x12, (arg1[6]), (arg2[6]));
  let mut x15: u32 = 0;
  let mut x16: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x15, &mut x16, 0x0, x1, (0x1 as u32));
  let mut x17: u32 = 0;
  let mut x18: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x17, &mut x18, x16, x3, (0x0 as u32));
  let mut x19: u32 = 0;
  let mut x20: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x19, &mut x20, x18, x5, (0x0 as u32));
  let mut x21: u32 = 0;
  let mut x22: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x21, &mut x22, x20, x7, 0xffffffff);
  let mut x23: u32 = 0;
  let mut x24: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x23, &mut x24, x22, x9, 0xffffffff);
  let mut x25: u32 = 0;
  let mut x26: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x25, &mut x26, x24, x11, 0xffffffff);
  let mut x27: u32 = 0;
  let mut x28: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x27, &mut x28, x26, x13, 0xffffffff);
  let mut x29: u32 = 0;
  let mut x30: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x29, &mut x30, x28, (x14 as u32), (0x0 as u32));
  let mut x31: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x31, x30, x15, x1);
  let mut x32: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x32, x30, x17, x3);
  let mut x33: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x33, x30, x19, x5);
  let mut x34: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x34, x30, x21, x7);
  let mut x35: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x35, x30, x23, x9);
  let mut x36: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x36, x30, x25, x11);
  let mut x37: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x37, x30, x27, x13);
  out1[0] = x31;
  out1[1] = x32;
  out1[2] = x33;
  out1[3] = x34;
  out1[4] = x35;
  out1[5] = x36;
  out1[6] = x37;
}

/*
 * The function fiat_p224_sub subtracts two field elements in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 *   0 ≤ eval arg2 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) - eval (from_montgomery arg2)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_sub(out1: &mut [u32; 7], arg1: &[u32; 7], arg2: &[u32; 7]) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x1, &mut x2, 0x0, (arg1[0]), (arg2[0]));
  let mut x3: u32 = 0;
  let mut x4: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x3, &mut x4, x2, (arg1[1]), (arg2[1]));
  let mut x5: u32 = 0;
  let mut x6: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x5, &mut x6, x4, (arg1[2]), (arg2[2]));
  let mut x7: u32 = 0;
  let mut x8: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x7, &mut x8, x6, (arg1[3]), (arg2[3]));
  let mut x9: u32 = 0;
  let mut x10: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x9, &mut x10, x8, (arg1[4]), (arg2[4]));
  let mut x11: u32 = 0;
  let mut x12: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x11, &mut x12, x10, (arg1[5]), (arg2[5]));
  let mut x13: u32 = 0;
  let mut x14: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x13, &mut x14, x12, (arg1[6]), (arg2[6]));
  let mut x15: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x15, x14, (0x0 as u32), 0xffffffff);
  let mut x16: u32 = 0;
  let mut x17: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x16, &mut x17, 0x0, x1, (((x15 & (0x1 as u32)) as fiat_p224_u1) as u32));
  let mut x18: u32 = 0;
  let mut x19: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x18, &mut x19, x17, x3, (0x0 as u32));
  let mut x20: u32 = 0;
  let mut x21: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x20, &mut x21, x19, x5, (0x0 as u32));
  let mut x22: u32 = 0;
  let mut x23: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x22, &mut x23, x21, x7, (x15 & 0xffffffff));
  let mut x24: u32 = 0;
  let mut x25: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x24, &mut x25, x23, x9, (x15 & 0xffffffff));
  let mut x26: u32 = 0;
  let mut x27: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x26, &mut x27, x25, x11, (x15 & 0xffffffff));
  let mut x28: u32 = 0;
  let mut x29: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x28, &mut x29, x27, x13, (x15 & 0xffffffff));
  out1[0] = x16;
  out1[1] = x18;
  out1[2] = x20;
  out1[3] = x22;
  out1[4] = x24;
  out1[5] = x26;
  out1[6] = x28;
}

/*
 * The function fiat_p224_opp negates a field element in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = -eval (from_montgomery arg1) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_opp(out1: &mut [u32; 7], arg1: &[u32; 7]) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x1, &mut x2, 0x0, (0x0 as u32), (arg1[0]));
  let mut x3: u32 = 0;
  let mut x4: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x3, &mut x4, x2, (0x0 as u32), (arg1[1]));
  let mut x5: u32 = 0;
  let mut x6: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x5, &mut x6, x4, (0x0 as u32), (arg1[2]));
  let mut x7: u32 = 0;
  let mut x8: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x7, &mut x8, x6, (0x0 as u32), (arg1[3]));
  let mut x9: u32 = 0;
  let mut x10: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x9, &mut x10, x8, (0x0 as u32), (arg1[4]));
  let mut x11: u32 = 0;
  let mut x12: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x11, &mut x12, x10, (0x0 as u32), (arg1[5]));
  let mut x13: u32 = 0;
  let mut x14: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x13, &mut x14, x12, (0x0 as u32), (arg1[6]));
  let mut x15: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x15, x14, (0x0 as u32), 0xffffffff);
  let mut x16: u32 = 0;
  let mut x17: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x16, &mut x17, 0x0, x1, (((x15 & (0x1 as u32)) as fiat_p224_u1) as u32));
  let mut x18: u32 = 0;
  let mut x19: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x18, &mut x19, x17, x3, (0x0 as u32));
  let mut x20: u32 = 0;
  let mut x21: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x20, &mut x21, x19, x5, (0x0 as u32));
  let mut x22: u32 = 0;
  let mut x23: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x22, &mut x23, x21, x7, (x15 & 0xffffffff));
  let mut x24: u32 = 0;
  let mut x25: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x24, &mut x25, x23, x9, (x15 & 0xffffffff));
  let mut x26: u32 = 0;
  let mut x27: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x26, &mut x27, x25, x11, (x15 & 0xffffffff));
  let mut x28: u32 = 0;
  let mut x29: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x28, &mut x29, x27, x13, (x15 & 0xffffffff));
  out1[0] = x16;
  out1[1] = x18;
  out1[2] = x20;
  out1[3] = x22;
  out1[4] = x24;
  out1[5] = x26;
  out1[6] = x28;
}

/*
 * The function fiat_p224_from_montgomery translates a field element out of the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval out1 mod m = (eval arg1 * ((2^32)⁻¹ mod m)^7) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_from_montgomery(out1: &mut [u32; 7], arg1: &[u32; 7]) -> () {
  let x1: u32 = (arg1[0]);
  let mut x2: u32 = 0;
  let mut x3: u32 = 0;
  fiat_p224_mulx_u32(&mut x2, &mut x3, x1, 0xffffffff);
  let mut x4: u32 = 0;
  let mut x5: u32 = 0;
  fiat_p224_mulx_u32(&mut x4, &mut x5, x2, 0xffffffff);
  let mut x6: u32 = 0;
  let mut x7: u32 = 0;
  fiat_p224_mulx_u32(&mut x6, &mut x7, x2, 0xffffffff);
  let mut x8: u32 = 0;
  let mut x9: u32 = 0;
  fiat_p224_mulx_u32(&mut x8, &mut x9, x2, 0xffffffff);
  let mut x10: u32 = 0;
  let mut x11: u32 = 0;
  fiat_p224_mulx_u32(&mut x10, &mut x11, x2, 0xffffffff);
  let mut x12: u32 = 0;
  let mut x13: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x12, &mut x13, 0x0, x11, x8);
  let mut x14: u32 = 0;
  let mut x15: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x14, &mut x15, x13, x9, x6);
  let mut x16: u32 = 0;
  let mut x17: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x16, &mut x17, x15, x7, x4);
  let mut x18: u32 = 0;
  let mut x19: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x18, &mut x19, 0x0, x1, x2);
  let mut x20: u32 = 0;
  let mut x21: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x20, &mut x21, 0x0, (x19 as u32), (arg1[1]));
  let mut x22: u32 = 0;
  let mut x23: u32 = 0;
  fiat_p224_mulx_u32(&mut x22, &mut x23, x20, 0xffffffff);
  let mut x24: u32 = 0;
  let mut x25: u32 = 0;
  fiat_p224_mulx_u32(&mut x24, &mut x25, x22, 0xffffffff);
  let mut x26: u32 = 0;
  let mut x27: u32 = 0;
  fiat_p224_mulx_u32(&mut x26, &mut x27, x22, 0xffffffff);
  let mut x28: u32 = 0;
  let mut x29: u32 = 0;
  fiat_p224_mulx_u32(&mut x28, &mut x29, x22, 0xffffffff);
  let mut x30: u32 = 0;
  let mut x31: u32 = 0;
  fiat_p224_mulx_u32(&mut x30, &mut x31, x22, 0xffffffff);
  let mut x32: u32 = 0;
  let mut x33: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x32, &mut x33, 0x0, x31, x28);
  let mut x34: u32 = 0;
  let mut x35: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x34, &mut x35, x33, x29, x26);
  let mut x36: u32 = 0;
  let mut x37: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x36, &mut x37, x35, x27, x24);
  let mut x38: u32 = 0;
  let mut x39: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x38, &mut x39, 0x0, x12, x30);
  let mut x40: u32 = 0;
  let mut x41: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x40, &mut x41, x39, x14, x32);
  let mut x42: u32 = 0;
  let mut x43: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x42, &mut x43, x41, x16, x34);
  let mut x44: u32 = 0;
  let mut x45: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x44, &mut x45, x43, ((x17 as u32) + x5), x36);
  let mut x46: u32 = 0;
  let mut x47: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x46, &mut x47, x45, (0x0 as u32), ((x37 as u32) + x25));
  let mut x48: u32 = 0;
  let mut x49: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x48, &mut x49, 0x0, x20, x22);
  let mut x50: u32 = 0;
  let mut x51: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x50, &mut x51, 0x0, ((x49 as u32) + (x21 as u32)), (arg1[2]));
  let mut x52: u32 = 0;
  let mut x53: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x52, &mut x53, x51, x10, (0x0 as u32));
  let mut x54: u32 = 0;
  let mut x55: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x54, &mut x55, x53, x38, (0x0 as u32));
  let mut x56: u32 = 0;
  let mut x57: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x56, &mut x57, x55, x40, (0x0 as u32));
  let mut x58: u32 = 0;
  let mut x59: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x58, &mut x59, x57, x42, (0x0 as u32));
  let mut x60: u32 = 0;
  let mut x61: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x60, &mut x61, x59, x44, (0x0 as u32));
  let mut x62: u32 = 0;
  let mut x63: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x62, &mut x63, x61, x46, (0x0 as u32));
  let mut x64: u32 = 0;
  let mut x65: u32 = 0;
  fiat_p224_mulx_u32(&mut x64, &mut x65, x50, 0xffffffff);
  let mut x66: u32 = 0;
  let mut x67: u32 = 0;
  fiat_p224_mulx_u32(&mut x66, &mut x67, x64, 0xffffffff);
  let mut x68: u32 = 0;
  let mut x69: u32 = 0;
  fiat_p224_mulx_u32(&mut x68, &mut x69, x64, 0xffffffff);
  let mut x70: u32 = 0;
  let mut x71: u32 = 0;
  fiat_p224_mulx_u32(&mut x70, &mut x71, x64, 0xffffffff);
  let mut x72: u32 = 0;
  let mut x73: u32 = 0;
  fiat_p224_mulx_u32(&mut x72, &mut x73, x64, 0xffffffff);
  let mut x74: u32 = 0;
  let mut x75: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x74, &mut x75, 0x0, x73, x70);
  let mut x76: u32 = 0;
  let mut x77: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x76, &mut x77, x75, x71, x68);
  let mut x78: u32 = 0;
  let mut x79: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x78, &mut x79, x77, x69, x66);
  let mut x80: u32 = 0;
  let mut x81: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x80, &mut x81, 0x0, x50, x64);
  let mut x82: u32 = 0;
  let mut x83: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x82, &mut x83, x81, x52, (0x0 as u32));
  let mut x84: u32 = 0;
  let mut x85: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x84, &mut x85, x83, x54, (0x0 as u32));
  let mut x86: u32 = 0;
  let mut x87: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x86, &mut x87, x85, x56, x72);
  let mut x88: u32 = 0;
  let mut x89: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x88, &mut x89, x87, x58, x74);
  let mut x90: u32 = 0;
  let mut x91: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x90, &mut x91, x89, x60, x76);
  let mut x92: u32 = 0;
  let mut x93: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x92, &mut x93, x91, x62, x78);
  let mut x94: u32 = 0;
  let mut x95: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x94, &mut x95, x93, ((x63 as u32) + (x47 as u32)), ((x79 as u32) + x67));
  let mut x96: u32 = 0;
  let mut x97: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x96, &mut x97, 0x0, x82, (arg1[3]));
  let mut x98: u32 = 0;
  let mut x99: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x98, &mut x99, x97, x84, (0x0 as u32));
  let mut x100: u32 = 0;
  let mut x101: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x100, &mut x101, x99, x86, (0x0 as u32));
  let mut x102: u32 = 0;
  let mut x103: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x102, &mut x103, x101, x88, (0x0 as u32));
  let mut x104: u32 = 0;
  let mut x105: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x104, &mut x105, x103, x90, (0x0 as u32));
  let mut x106: u32 = 0;
  let mut x107: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x106, &mut x107, x105, x92, (0x0 as u32));
  let mut x108: u32 = 0;
  let mut x109: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x108, &mut x109, x107, x94, (0x0 as u32));
  let mut x110: u32 = 0;
  let mut x111: u32 = 0;
  fiat_p224_mulx_u32(&mut x110, &mut x111, x96, 0xffffffff);
  let mut x112: u32 = 0;
  let mut x113: u32 = 0;
  fiat_p224_mulx_u32(&mut x112, &mut x113, x110, 0xffffffff);
  let mut x114: u32 = 0;
  let mut x115: u32 = 0;
  fiat_p224_mulx_u32(&mut x114, &mut x115, x110, 0xffffffff);
  let mut x116: u32 = 0;
  let mut x117: u32 = 0;
  fiat_p224_mulx_u32(&mut x116, &mut x117, x110, 0xffffffff);
  let mut x118: u32 = 0;
  let mut x119: u32 = 0;
  fiat_p224_mulx_u32(&mut x118, &mut x119, x110, 0xffffffff);
  let mut x120: u32 = 0;
  let mut x121: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x120, &mut x121, 0x0, x119, x116);
  let mut x122: u32 = 0;
  let mut x123: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x122, &mut x123, x121, x117, x114);
  let mut x124: u32 = 0;
  let mut x125: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x124, &mut x125, x123, x115, x112);
  let mut x126: u32 = 0;
  let mut x127: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x126, &mut x127, 0x0, x96, x110);
  let mut x128: u32 = 0;
  let mut x129: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x128, &mut x129, x127, x98, (0x0 as u32));
  let mut x130: u32 = 0;
  let mut x131: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x130, &mut x131, x129, x100, (0x0 as u32));
  let mut x132: u32 = 0;
  let mut x133: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x132, &mut x133, x131, x102, x118);
  let mut x134: u32 = 0;
  let mut x135: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x134, &mut x135, x133, x104, x120);
  let mut x136: u32 = 0;
  let mut x137: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x136, &mut x137, x135, x106, x122);
  let mut x138: u32 = 0;
  let mut x139: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x138, &mut x139, x137, x108, x124);
  let mut x140: u32 = 0;
  let mut x141: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x140, &mut x141, x139, ((x109 as u32) + (x95 as u32)), ((x125 as u32) + x113));
  let mut x142: u32 = 0;
  let mut x143: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x142, &mut x143, 0x0, x128, (arg1[4]));
  let mut x144: u32 = 0;
  let mut x145: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x144, &mut x145, x143, x130, (0x0 as u32));
  let mut x146: u32 = 0;
  let mut x147: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x146, &mut x147, x145, x132, (0x0 as u32));
  let mut x148: u32 = 0;
  let mut x149: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x148, &mut x149, x147, x134, (0x0 as u32));
  let mut x150: u32 = 0;
  let mut x151: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x150, &mut x151, x149, x136, (0x0 as u32));
  let mut x152: u32 = 0;
  let mut x153: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x152, &mut x153, x151, x138, (0x0 as u32));
  let mut x154: u32 = 0;
  let mut x155: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x154, &mut x155, x153, x140, (0x0 as u32));
  let mut x156: u32 = 0;
  let mut x157: u32 = 0;
  fiat_p224_mulx_u32(&mut x156, &mut x157, x142, 0xffffffff);
  let mut x158: u32 = 0;
  let mut x159: u32 = 0;
  fiat_p224_mulx_u32(&mut x158, &mut x159, x156, 0xffffffff);
  let mut x160: u32 = 0;
  let mut x161: u32 = 0;
  fiat_p224_mulx_u32(&mut x160, &mut x161, x156, 0xffffffff);
  let mut x162: u32 = 0;
  let mut x163: u32 = 0;
  fiat_p224_mulx_u32(&mut x162, &mut x163, x156, 0xffffffff);
  let mut x164: u32 = 0;
  let mut x165: u32 = 0;
  fiat_p224_mulx_u32(&mut x164, &mut x165, x156, 0xffffffff);
  let mut x166: u32 = 0;
  let mut x167: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x166, &mut x167, 0x0, x165, x162);
  let mut x168: u32 = 0;
  let mut x169: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x168, &mut x169, x167, x163, x160);
  let mut x170: u32 = 0;
  let mut x171: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x170, &mut x171, x169, x161, x158);
  let mut x172: u32 = 0;
  let mut x173: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x172, &mut x173, 0x0, x142, x156);
  let mut x174: u32 = 0;
  let mut x175: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x174, &mut x175, x173, x144, (0x0 as u32));
  let mut x176: u32 = 0;
  let mut x177: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x176, &mut x177, x175, x146, (0x0 as u32));
  let mut x178: u32 = 0;
  let mut x179: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x178, &mut x179, x177, x148, x164);
  let mut x180: u32 = 0;
  let mut x181: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x180, &mut x181, x179, x150, x166);
  let mut x182: u32 = 0;
  let mut x183: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x182, &mut x183, x181, x152, x168);
  let mut x184: u32 = 0;
  let mut x185: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x184, &mut x185, x183, x154, x170);
  let mut x186: u32 = 0;
  let mut x187: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x186, &mut x187, x185, ((x155 as u32) + (x141 as u32)), ((x171 as u32) + x159));
  let mut x188: u32 = 0;
  let mut x189: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x188, &mut x189, 0x0, x174, (arg1[5]));
  let mut x190: u32 = 0;
  let mut x191: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x190, &mut x191, x189, x176, (0x0 as u32));
  let mut x192: u32 = 0;
  let mut x193: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x192, &mut x193, x191, x178, (0x0 as u32));
  let mut x194: u32 = 0;
  let mut x195: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x194, &mut x195, x193, x180, (0x0 as u32));
  let mut x196: u32 = 0;
  let mut x197: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x196, &mut x197, x195, x182, (0x0 as u32));
  let mut x198: u32 = 0;
  let mut x199: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x198, &mut x199, x197, x184, (0x0 as u32));
  let mut x200: u32 = 0;
  let mut x201: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x200, &mut x201, x199, x186, (0x0 as u32));
  let mut x202: u32 = 0;
  let mut x203: u32 = 0;
  fiat_p224_mulx_u32(&mut x202, &mut x203, x188, 0xffffffff);
  let mut x204: u32 = 0;
  let mut x205: u32 = 0;
  fiat_p224_mulx_u32(&mut x204, &mut x205, x202, 0xffffffff);
  let mut x206: u32 = 0;
  let mut x207: u32 = 0;
  fiat_p224_mulx_u32(&mut x206, &mut x207, x202, 0xffffffff);
  let mut x208: u32 = 0;
  let mut x209: u32 = 0;
  fiat_p224_mulx_u32(&mut x208, &mut x209, x202, 0xffffffff);
  let mut x210: u32 = 0;
  let mut x211: u32 = 0;
  fiat_p224_mulx_u32(&mut x210, &mut x211, x202, 0xffffffff);
  let mut x212: u32 = 0;
  let mut x213: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x212, &mut x213, 0x0, x211, x208);
  let mut x214: u32 = 0;
  let mut x215: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x214, &mut x215, x213, x209, x206);
  let mut x216: u32 = 0;
  let mut x217: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x216, &mut x217, x215, x207, x204);
  let mut x218: u32 = 0;
  let mut x219: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x218, &mut x219, 0x0, x188, x202);
  let mut x220: u32 = 0;
  let mut x221: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x220, &mut x221, x219, x190, (0x0 as u32));
  let mut x222: u32 = 0;
  let mut x223: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x222, &mut x223, x221, x192, (0x0 as u32));
  let mut x224: u32 = 0;
  let mut x225: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x224, &mut x225, x223, x194, x210);
  let mut x226: u32 = 0;
  let mut x227: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x226, &mut x227, x225, x196, x212);
  let mut x228: u32 = 0;
  let mut x229: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x228, &mut x229, x227, x198, x214);
  let mut x230: u32 = 0;
  let mut x231: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x230, &mut x231, x229, x200, x216);
  let mut x232: u32 = 0;
  let mut x233: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x232, &mut x233, x231, ((x201 as u32) + (x187 as u32)), ((x217 as u32) + x205));
  let mut x234: u32 = 0;
  let mut x235: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x234, &mut x235, 0x0, x220, (arg1[6]));
  let mut x236: u32 = 0;
  let mut x237: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x236, &mut x237, x235, x222, (0x0 as u32));
  let mut x238: u32 = 0;
  let mut x239: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x238, &mut x239, x237, x224, (0x0 as u32));
  let mut x240: u32 = 0;
  let mut x241: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x240, &mut x241, x239, x226, (0x0 as u32));
  let mut x242: u32 = 0;
  let mut x243: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x242, &mut x243, x241, x228, (0x0 as u32));
  let mut x244: u32 = 0;
  let mut x245: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x244, &mut x245, x243, x230, (0x0 as u32));
  let mut x246: u32 = 0;
  let mut x247: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x246, &mut x247, x245, x232, (0x0 as u32));
  let mut x248: u32 = 0;
  let mut x249: u32 = 0;
  fiat_p224_mulx_u32(&mut x248, &mut x249, x234, 0xffffffff);
  let mut x250: u32 = 0;
  let mut x251: u32 = 0;
  fiat_p224_mulx_u32(&mut x250, &mut x251, x248, 0xffffffff);
  let mut x252: u32 = 0;
  let mut x253: u32 = 0;
  fiat_p224_mulx_u32(&mut x252, &mut x253, x248, 0xffffffff);
  let mut x254: u32 = 0;
  let mut x255: u32 = 0;
  fiat_p224_mulx_u32(&mut x254, &mut x255, x248, 0xffffffff);
  let mut x256: u32 = 0;
  let mut x257: u32 = 0;
  fiat_p224_mulx_u32(&mut x256, &mut x257, x248, 0xffffffff);
  let mut x258: u32 = 0;
  let mut x259: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x258, &mut x259, 0x0, x257, x254);
  let mut x260: u32 = 0;
  let mut x261: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x260, &mut x261, x259, x255, x252);
  let mut x262: u32 = 0;
  let mut x263: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x262, &mut x263, x261, x253, x250);
  let mut x264: u32 = 0;
  let mut x265: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x264, &mut x265, 0x0, x234, x248);
  let mut x266: u32 = 0;
  let mut x267: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x266, &mut x267, x265, x236, (0x0 as u32));
  let mut x268: u32 = 0;
  let mut x269: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x268, &mut x269, x267, x238, (0x0 as u32));
  let mut x270: u32 = 0;
  let mut x271: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x270, &mut x271, x269, x240, x256);
  let mut x272: u32 = 0;
  let mut x273: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x272, &mut x273, x271, x242, x258);
  let mut x274: u32 = 0;
  let mut x275: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x274, &mut x275, x273, x244, x260);
  let mut x276: u32 = 0;
  let mut x277: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x276, &mut x277, x275, x246, x262);
  let mut x278: u32 = 0;
  let mut x279: fiat_p224_u1 = 0;
  fiat_p224_addcarryx_u32(&mut x278, &mut x279, x277, ((x247 as u32) + (x233 as u32)), ((x263 as u32) + x251));
  let mut x280: u32 = 0;
  let mut x281: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x280, &mut x281, 0x0, x266, (0x1 as u32));
  let mut x282: u32 = 0;
  let mut x283: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x282, &mut x283, x281, x268, (0x0 as u32));
  let mut x284: u32 = 0;
  let mut x285: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x284, &mut x285, x283, x270, (0x0 as u32));
  let mut x286: u32 = 0;
  let mut x287: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x286, &mut x287, x285, x272, 0xffffffff);
  let mut x288: u32 = 0;
  let mut x289: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x288, &mut x289, x287, x274, 0xffffffff);
  let mut x290: u32 = 0;
  let mut x291: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x290, &mut x291, x289, x276, 0xffffffff);
  let mut x292: u32 = 0;
  let mut x293: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x292, &mut x293, x291, x278, 0xffffffff);
  let mut x294: u32 = 0;
  let mut x295: fiat_p224_u1 = 0;
  fiat_p224_subborrowx_u32(&mut x294, &mut x295, x293, (x279 as u32), (0x0 as u32));
  let mut x296: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x296, x295, x280, x266);
  let mut x297: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x297, x295, x282, x268);
  let mut x298: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x298, x295, x284, x270);
  let mut x299: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x299, x295, x286, x272);
  let mut x300: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x300, x295, x288, x274);
  let mut x301: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x301, x295, x290, x276);
  let mut x302: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x302, x295, x292, x278);
  out1[0] = x296;
  out1[1] = x297;
  out1[2] = x298;
  out1[3] = x299;
  out1[4] = x300;
  out1[5] = x301;
  out1[6] = x302;
}

/*
 * The function fiat_p224_nonzero outputs a single non-zero word if the input is non-zero and zero otherwise.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   out1 = 0 ↔ eval (from_montgomery arg1) mod m = 0
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 */
#[inline]
pub fn fiat_p224_nonzero(out1: &mut u32, arg1: &[u32; 7]) -> () {
  let x1: u32 = ((arg1[0]) | ((arg1[1]) | ((arg1[2]) | ((arg1[3]) | ((arg1[4]) | ((arg1[5]) | ((arg1[6]) | (0x0 as u32))))))));
  *out1 = x1;
}

/*
 * The function fiat_p224_selectznz is a multi-limb conditional select.
 * Postconditions:
 *   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_selectznz(out1: &mut [u32; 7], arg1: fiat_p224_u1, arg2: &[u32; 7], arg3: &[u32; 7]) -> () {
  let mut x1: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x1, arg1, (arg2[0]), (arg3[0]));
  let mut x2: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x2, arg1, (arg2[1]), (arg3[1]));
  let mut x3: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x3, arg1, (arg2[2]), (arg3[2]));
  let mut x4: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x4, arg1, (arg2[3]), (arg3[3]));
  let mut x5: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x5, arg1, (arg2[4]), (arg3[4]));
  let mut x6: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x6, arg1, (arg2[5]), (arg3[5]));
  let mut x7: u32 = 0;
  fiat_p224_cmovznz_u32(&mut x7, arg1, (arg2[6]), (arg3[6]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
}

/*
 * The function fiat_p224_to_bytes serializes a field element in the Montgomery domain to bytes in little-endian order.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..27]
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
 */
#[inline]
pub fn fiat_p224_to_bytes(out1: &mut [u8; 28], arg1: &[u32; 7]) -> () {
  let x1: u32 = (arg1[6]);
  let x2: u32 = (arg1[5]);
  let x3: u32 = (arg1[4]);
  let x4: u32 = (arg1[3]);
  let x5: u32 = (arg1[2]);
  let x6: u32 = (arg1[1]);
  let x7: u32 = (arg1[0]);
  let x8: u32 = (x7 >> 8);
  let x9: u8 = ((x7 & (0xff as u32)) as u8);
  let x10: u32 = (x8 >> 8);
  let x11: u8 = ((x8 & (0xff as u32)) as u8);
  let x12: u8 = ((x10 >> 8) as u8);
  let x13: u8 = ((x10 & (0xff as u32)) as u8);
  let x14: u8 = (x12 & 0xff);
  let x15: u32 = (x6 >> 8);
  let x16: u8 = ((x6 & (0xff as u32)) as u8);
  let x17: u32 = (x15 >> 8);
  let x18: u8 = ((x15 & (0xff as u32)) as u8);
  let x19: u8 = ((x17 >> 8) as u8);
  let x20: u8 = ((x17 & (0xff as u32)) as u8);
  let x21: u8 = (x19 & 0xff);
  let x22: u32 = (x5 >> 8);
  let x23: u8 = ((x5 & (0xff as u32)) as u8);
  let x24: u32 = (x22 >> 8);
  let x25: u8 = ((x22 & (0xff as u32)) as u8);
  let x26: u8 = ((x24 >> 8) as u8);
  let x27: u8 = ((x24 & (0xff as u32)) as u8);
  let x28: u8 = (x26 & 0xff);
  let x29: u32 = (x4 >> 8);
  let x30: u8 = ((x4 & (0xff as u32)) as u8);
  let x31: u32 = (x29 >> 8);
  let x32: u8 = ((x29 & (0xff as u32)) as u8);
  let x33: u8 = ((x31 >> 8) as u8);
  let x34: u8 = ((x31 & (0xff as u32)) as u8);
  let x35: u8 = (x33 & 0xff);
  let x36: u32 = (x3 >> 8);
  let x37: u8 = ((x3 & (0xff as u32)) as u8);
  let x38: u32 = (x36 >> 8);
  let x39: u8 = ((x36 & (0xff as u32)) as u8);
  let x40: u8 = ((x38 >> 8) as u8);
  let x41: u8 = ((x38 & (0xff as u32)) as u8);
  let x42: u8 = (x40 & 0xff);
  let x43: u32 = (x2 >> 8);
  let x44: u8 = ((x2 & (0xff as u32)) as u8);
  let x45: u32 = (x43 >> 8);
  let x46: u8 = ((x43 & (0xff as u32)) as u8);
  let x47: u8 = ((x45 >> 8) as u8);
  let x48: u8 = ((x45 & (0xff as u32)) as u8);
  let x49: u8 = (x47 & 0xff);
  let x50: u32 = (x1 >> 8);
  let x51: u8 = ((x1 & (0xff as u32)) as u8);
  let x52: u32 = (x50 >> 8);
  let x53: u8 = ((x50 & (0xff as u32)) as u8);
  let x54: u8 = ((x52 >> 8) as u8);
  let x55: u8 = ((x52 & (0xff as u32)) as u8);
  out1[0] = x9;
  out1[1] = x11;
  out1[2] = x13;
  out1[3] = x14;
  out1[4] = x16;
  out1[5] = x18;
  out1[6] = x20;
  out1[7] = x21;
  out1[8] = x23;
  out1[9] = x25;
  out1[10] = x27;
  out1[11] = x28;
  out1[12] = x30;
  out1[13] = x32;
  out1[14] = x34;
  out1[15] = x35;
  out1[16] = x37;
  out1[17] = x39;
  out1[18] = x41;
  out1[19] = x42;
  out1[20] = x44;
  out1[21] = x46;
  out1[22] = x48;
  out1[23] = x49;
  out1[24] = x51;
  out1[25] = x53;
  out1[26] = x55;
  out1[27] = x54;
}

/*
 * The function fiat_p224_from_bytes deserializes a field element in the Montgomery domain from bytes in little-endian order.
 * Preconditions:
 *   0 ≤ bytes_eval arg1 < m
 * Postconditions:
 *   eval out1 mod m = bytes_eval arg1 mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p224_from_bytes(out1: &mut [u32; 7], arg1: &[u8; 28]) -> () {
  let x1: u32 = (((arg1[27]) as u32) << 24);
  let x2: u32 = (((arg1[26]) as u32) << 16);
  let x3: u32 = (((arg1[25]) as u32) << 8);
  let x4: u8 = (arg1[24]);
  let x5: u32 = (((arg1[23]) as u32) << 24);
  let x6: u32 = (((arg1[22]) as u32) << 16);
  let x7: u32 = (((arg1[21]) as u32) << 8);
  let x8: u8 = (arg1[20]);
  let x9: u32 = (((arg1[19]) as u32) << 24);
  let x10: u32 = (((arg1[18]) as u32) << 16);
  let x11: u32 = (((arg1[17]) as u32) << 8);
  let x12: u8 = (arg1[16]);
  let x13: u32 = (((arg1[15]) as u32) << 24);
  let x14: u32 = (((arg1[14]) as u32) << 16);
  let x15: u32 = (((arg1[13]) as u32) << 8);
  let x16: u8 = (arg1[12]);
  let x17: u32 = (((arg1[11]) as u32) << 24);
  let x18: u32 = (((arg1[10]) as u32) << 16);
  let x19: u32 = (((arg1[9]) as u32) << 8);
  let x20: u8 = (arg1[8]);
  let x21: u32 = (((arg1[7]) as u32) << 24);
  let x22: u32 = (((arg1[6]) as u32) << 16);
  let x23: u32 = (((arg1[5]) as u32) << 8);
  let x24: u8 = (arg1[4]);
  let x25: u32 = (((arg1[3]) as u32) << 24);
  let x26: u32 = (((arg1[2]) as u32) << 16);
  let x27: u32 = (((arg1[1]) as u32) << 8);
  let x28: u8 = (arg1[0]);
  let x29: u32 = ((x28 as u32) + (x27 + (x26 + x25)));
  let x30: u32 = (x29 & 0xffffffff);
  let x31: u32 = ((x4 as u32) + (x3 + (x2 + x1)));
  let x32: u32 = ((x8 as u32) + (x7 + (x6 + x5)));
  let x33: u32 = ((x12 as u32) + (x11 + (x10 + x9)));
  let x34: u32 = ((x16 as u32) + (x15 + (x14 + x13)));
  let x35: u32 = ((x20 as u32) + (x19 + (x18 + x17)));
  let x36: u32 = ((x24 as u32) + (x23 + (x22 + x21)));
  let x37: u32 = (x36 & 0xffffffff);
  let x38: u32 = (x35 & 0xffffffff);
  let x39: u32 = (x34 & 0xffffffff);
  let x40: u32 = (x33 & 0xffffffff);
  let x41: u32 = (x32 & 0xffffffff);
  out1[0] = x30;
  out1[1] = x37;
  out1[2] = x38;
  out1[3] = x39;
  out1[4] = x40;
  out1[5] = x41;
  out1[6] = x31;
}

