/* Autogenerated: src/ExtractionOCaml/unsaturated_solinas --lang=Rust p521 17 '2^521 - 1' 32 */
/* curve description: p521 */
/* requested operations: (all) */
/* n = 17 (from "17") */
/* s-c = 2^521 - [(1, 1)] (from "2^521 - 1") */
/* machine_wordsize = 32 (from "32") */

/* Computed values: */
/* carry_chain = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1] */

#![allow(unused_parens)]
#[allow(non_camel_case_types)]

pub type fiat_p521_u1 = u8;
pub type fiat_p521_i1 = i8;
pub type fiat_p521_u2 = u8;
pub type fiat_p521_i2 = i8;
pub type fiat_p521_u128 = u128;
pub type fiat_p521_i128 = i128;


/*
 * The function fiat_p521_addcarryx_u30 is an addition with carry.
 * Postconditions:
 *   out1 = (arg1 + arg2 + arg3) mod 2^30
 *   out2 = ⌊(arg1 + arg2 + arg3) / 2^30⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0x3fffffff]
 *   arg3: [0x0 ~> 0x3fffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0x3fffffff]
 *   out2: [0x0 ~> 0x1]
 */
#[inline]
pub fn fiat_p521_addcarryx_u30(out1: &mut u32, out2: &mut fiat_p521_u1, arg1: fiat_p521_u1, arg2: u32, arg3: u32) -> () {
  let x1: u32 = (((arg1 as u32) + arg2) + arg3);
  let x2: u32 = (x1 & 0x3fffffff);
  let x3: fiat_p521_u1 = ((x1 >> 30) as fiat_p521_u1);
  *out1 = x2;
  *out2 = x3;
}

/*
 * The function fiat_p521_subborrowx_u30 is a subtraction with borrow.
 * Postconditions:
 *   out1 = (-arg1 + arg2 + -arg3) mod 2^30
 *   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^30⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0x3fffffff]
 *   arg3: [0x0 ~> 0x3fffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0x3fffffff]
 *   out2: [0x0 ~> 0x1]
 */
#[inline]
pub fn fiat_p521_subborrowx_u30(out1: &mut u32, out2: &mut fiat_p521_u1, arg1: fiat_p521_u1, arg2: u32, arg3: u32) -> () {
  let x1: i32 = ((((((arg2 as i64) - (arg1 as i64)) as i32) as i64) - (arg3 as i64)) as i32);
  let x2: fiat_p521_i1 = ((x1 >> 30) as fiat_p521_i1);
  let x3: u32 = (((x1 as i64) & (0x3fffffff as i64)) as u32);
  *out1 = x3;
  *out2 = (((0x0 as fiat_p521_i2) - (x2 as fiat_p521_i2)) as fiat_p521_u1);
}

/*
 * The function fiat_p521_addcarryx_u31 is an addition with carry.
 * Postconditions:
 *   out1 = (arg1 + arg2 + arg3) mod 2^31
 *   out2 = ⌊(arg1 + arg2 + arg3) / 2^31⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0x7fffffff]
 *   arg3: [0x0 ~> 0x7fffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0x7fffffff]
 *   out2: [0x0 ~> 0x1]
 */
#[inline]
pub fn fiat_p521_addcarryx_u31(out1: &mut u32, out2: &mut fiat_p521_u1, arg1: fiat_p521_u1, arg2: u32, arg3: u32) -> () {
  let x1: u32 = (((arg1 as u32) + arg2) + arg3);
  let x2: u32 = (x1 & 0x7fffffff);
  let x3: fiat_p521_u1 = ((x1 >> 31) as fiat_p521_u1);
  *out1 = x2;
  *out2 = x3;
}

/*
 * The function fiat_p521_subborrowx_u31 is a subtraction with borrow.
 * Postconditions:
 *   out1 = (-arg1 + arg2 + -arg3) mod 2^31
 *   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^31⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0x7fffffff]
 *   arg3: [0x0 ~> 0x7fffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0x7fffffff]
 *   out2: [0x0 ~> 0x1]
 */
#[inline]
pub fn fiat_p521_subborrowx_u31(out1: &mut u32, out2: &mut fiat_p521_u1, arg1: fiat_p521_u1, arg2: u32, arg3: u32) -> () {
  let x1: i32 = ((((((arg2 as i64) - (arg1 as i64)) as i32) as i64) - (arg3 as i64)) as i32);
  let x2: fiat_p521_i1 = (((x1 as i64) >> 31) as fiat_p521_i1);
  let x3: u32 = (((x1 as i64) & (0x7fffffff as i64)) as u32);
  *out1 = x3;
  *out2 = (((0x0 as fiat_p521_i2) - (x2 as fiat_p521_i2)) as fiat_p521_u1);
}

/*
 * The function fiat_p521_cmovznz_u32 is a single-word conditional move.
 * Postconditions:
 *   out1 = (if arg1 = 0 then arg2 else arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffff]
 *   arg3: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 */
#[inline]
pub fn fiat_p521_cmovznz_u32(out1: &mut u32, arg1: fiat_p521_u1, arg2: u32, arg3: u32) -> () {
  let x1: fiat_p521_u1 = (!(!arg1));
  let x2: u32 = ((((((0x0 as fiat_p521_i2) - (x1 as fiat_p521_i2)) as fiat_p521_i1) as i64) & (0xffffffff as i64)) as u32);
  let x3: u32 = ((x2 & arg3) | ((!x2) & arg2));
  *out1 = x3;
}

/*
 * The function fiat_p521_carry_mul multiplies two field elements and reduces the result.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 * eval arg2) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332]]
 *   arg2: [[0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666]]
 */
#[inline]
pub fn fiat_p521_carry_mul(out1: &mut [u32; 17], arg1: &[u64; 17], arg2: &[u64; 17]) -> () {
  let x1: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * (((((arg2[16]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x2: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * ((arg2[15]) as fiat_p521_u128));
  let x3: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x4: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * (((arg2[13]) * (0x2 as u64)) as fiat_p521_u128));
  let x5: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x6: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x7: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * (((arg2[10]) * (0x2 as u64)) as fiat_p521_u128));
  let x8: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x9: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x10: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * (((arg2[7]) * (0x2 as u64)) as fiat_p521_u128));
  let x11: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x12: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x13: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * (((arg2[4]) * (0x2 as u64)) as fiat_p521_u128));
  let x14: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x15: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * (((((arg2[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x16: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * (((arg2[1]) * (0x2 as u64)) as fiat_p521_u128));
  let x17: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * (((arg2[16]) as u32) as fiat_p521_u128));
  let x18: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * ((arg2[15]) as fiat_p521_u128));
  let x19: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x20: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * ((arg2[13]) as fiat_p521_u128));
  let x21: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x22: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x23: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * ((arg2[10]) as fiat_p521_u128));
  let x24: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x25: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x26: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * ((arg2[7]) as fiat_p521_u128));
  let x27: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x28: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x29: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * ((arg2[4]) as fiat_p521_u128));
  let x30: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x31: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * (((((arg2[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x32: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((((arg2[16]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x33: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((arg2[15]) * (0x2 as u64)) as fiat_p521_u128));
  let x34: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x35: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((arg2[13]) * (0x2 as u64)) as fiat_p521_u128));
  let x36: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((arg2[12]) * (0x2 as u64)) as fiat_p521_u128));
  let x37: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x38: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((arg2[10]) * (0x2 as u64)) as fiat_p521_u128));
  let x39: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((arg2[9]) * (0x2 as u64)) as fiat_p521_u128));
  let x40: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x41: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((arg2[7]) * (0x2 as u64)) as fiat_p521_u128));
  let x42: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((arg2[6]) * (0x2 as u64)) as fiat_p521_u128));
  let x43: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x44: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((arg2[4]) * (0x2 as u64)) as fiat_p521_u128));
  let x45: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((arg2[3]) * (0x2 as u64)) as fiat_p521_u128));
  let x46: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * (((((arg2[16]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x47: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * ((arg2[15]) as fiat_p521_u128));
  let x48: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x49: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * (((arg2[13]) * (0x2 as u64)) as fiat_p521_u128));
  let x50: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x51: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x52: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * (((arg2[10]) * (0x2 as u64)) as fiat_p521_u128));
  let x53: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x54: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x55: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * (((arg2[7]) * (0x2 as u64)) as fiat_p521_u128));
  let x56: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x57: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x58: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * (((arg2[4]) * (0x2 as u64)) as fiat_p521_u128));
  let x59: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * (((arg2[16]) as u32) as fiat_p521_u128));
  let x60: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * ((arg2[15]) as fiat_p521_u128));
  let x61: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x62: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * ((arg2[13]) as fiat_p521_u128));
  let x63: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x64: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x65: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * ((arg2[10]) as fiat_p521_u128));
  let x66: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x67: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x68: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * ((arg2[7]) as fiat_p521_u128));
  let x69: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x70: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x71: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((((arg2[16]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x72: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((arg2[15]) * (0x2 as u64)) as fiat_p521_u128));
  let x73: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x74: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((arg2[13]) * (0x2 as u64)) as fiat_p521_u128));
  let x75: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((arg2[12]) * (0x2 as u64)) as fiat_p521_u128));
  let x76: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x77: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((arg2[10]) * (0x2 as u64)) as fiat_p521_u128));
  let x78: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((arg2[9]) * (0x2 as u64)) as fiat_p521_u128));
  let x79: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x80: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((arg2[7]) * (0x2 as u64)) as fiat_p521_u128));
  let x81: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((arg2[6]) * (0x2 as u64)) as fiat_p521_u128));
  let x82: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * (((((arg2[16]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x83: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((arg2[15]) as fiat_p521_u128));
  let x84: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x85: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * (((arg2[13]) * (0x2 as u64)) as fiat_p521_u128));
  let x86: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x87: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x88: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * (((arg2[10]) * (0x2 as u64)) as fiat_p521_u128));
  let x89: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x90: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x91: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * (((arg2[7]) * (0x2 as u64)) as fiat_p521_u128));
  let x92: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * (((arg2[16]) as u32) as fiat_p521_u128));
  let x93: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((arg2[15]) as fiat_p521_u128));
  let x94: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x95: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((arg2[13]) as fiat_p521_u128));
  let x96: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x97: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x98: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((arg2[10]) as fiat_p521_u128));
  let x99: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x100: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x101: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((((arg2[16]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x102: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((arg2[15]) * (0x2 as u64)) as fiat_p521_u128));
  let x103: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x104: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((arg2[13]) * (0x2 as u64)) as fiat_p521_u128));
  let x105: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((arg2[12]) * (0x2 as u64)) as fiat_p521_u128));
  let x106: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x107: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((arg2[10]) * (0x2 as u64)) as fiat_p521_u128));
  let x108: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((arg2[9]) * (0x2 as u64)) as fiat_p521_u128));
  let x109: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * (((((arg2[16]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x110: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((arg2[15]) as fiat_p521_u128));
  let x111: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x112: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * (((arg2[13]) * (0x2 as u64)) as fiat_p521_u128));
  let x113: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x114: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x115: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * (((arg2[10]) * (0x2 as u64)) as fiat_p521_u128));
  let x116: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (((arg2[16]) as u32) as fiat_p521_u128));
  let x117: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((arg2[15]) as fiat_p521_u128));
  let x118: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x119: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((arg2[13]) as fiat_p521_u128));
  let x120: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x121: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x122: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((((arg2[16]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x123: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((arg2[15]) * (0x2 as u64)) as fiat_p521_u128));
  let x124: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x125: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((arg2[13]) * (0x2 as u64)) as fiat_p521_u128));
  let x126: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((arg2[12]) * (0x2 as u64)) as fiat_p521_u128));
  let x127: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (((((arg2[16]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x128: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((arg2[15]) as fiat_p521_u128));
  let x129: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x130: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (((arg2[13]) * (0x2 as u64)) as fiat_p521_u128));
  let x131: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (((arg2[16]) as u32) as fiat_p521_u128));
  let x132: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((arg2[15]) as fiat_p521_u128));
  let x133: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x134: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((((arg2[16]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x135: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((arg2[15]) * (0x2 as u64)) as fiat_p521_u128));
  let x136: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (((((arg2[16]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x137: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x138: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * ((arg2[1]) as fiat_p521_u128));
  let x139: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x140: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((((arg2[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x141: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((arg2[1]) * (0x2 as u64)) as fiat_p521_u128));
  let x142: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x143: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x144: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * (((((arg2[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x145: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * ((arg2[1]) as fiat_p521_u128));
  let x146: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x147: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * ((arg2[4]) as fiat_p521_u128));
  let x148: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x149: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * (((arg2[2]) as u32) as fiat_p521_u128));
  let x150: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * ((arg2[1]) as fiat_p521_u128));
  let x151: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x152: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x153: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((arg2[4]) * (0x2 as u64)) as fiat_p521_u128));
  let x154: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x155: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((((arg2[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x156: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((arg2[1]) * (0x2 as u64)) as fiat_p521_u128));
  let x157: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x158: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x159: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x160: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((arg2[4]) as fiat_p521_u128));
  let x161: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x162: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * (((((arg2[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x163: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((arg2[1]) as fiat_p521_u128));
  let x164: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x165: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((arg2[7]) as fiat_p521_u128));
  let x166: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x167: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * (((arg2[5]) as u32) as fiat_p521_u128));
  let x168: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((arg2[4]) as fiat_p521_u128));
  let x169: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x170: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * (((arg2[2]) as u32) as fiat_p521_u128));
  let x171: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((arg2[1]) as fiat_p521_u128));
  let x172: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x173: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x174: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((arg2[7]) * (0x2 as u64)) as fiat_p521_u128));
  let x175: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x176: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x177: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((arg2[4]) * (0x2 as u64)) as fiat_p521_u128));
  let x178: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x179: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((((arg2[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x180: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((arg2[1]) * (0x2 as u64)) as fiat_p521_u128));
  let x181: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x182: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x183: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x184: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((arg2[7]) as fiat_p521_u128));
  let x185: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x186: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x187: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((arg2[4]) as fiat_p521_u128));
  let x188: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x189: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * (((((arg2[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x190: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((arg2[1]) as fiat_p521_u128));
  let x191: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x192: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((arg2[10]) as fiat_p521_u128));
  let x193: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x194: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (((arg2[8]) as u32) as fiat_p521_u128));
  let x195: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((arg2[7]) as fiat_p521_u128));
  let x196: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x197: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (((arg2[5]) as u32) as fiat_p521_u128));
  let x198: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((arg2[4]) as fiat_p521_u128));
  let x199: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x200: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (((arg2[2]) as u32) as fiat_p521_u128));
  let x201: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((arg2[1]) as fiat_p521_u128));
  let x202: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x203: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x204: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((arg2[10]) * (0x2 as u64)) as fiat_p521_u128));
  let x205: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x206: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x207: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((arg2[7]) * (0x2 as u64)) as fiat_p521_u128));
  let x208: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x209: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x210: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((arg2[4]) * (0x2 as u64)) as fiat_p521_u128));
  let x211: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x212: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((((arg2[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x213: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((arg2[1]) * (0x2 as u64)) as fiat_p521_u128));
  let x214: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x215: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x216: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x217: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((arg2[10]) as fiat_p521_u128));
  let x218: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x219: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x220: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((arg2[7]) as fiat_p521_u128));
  let x221: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x222: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x223: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((arg2[4]) as fiat_p521_u128));
  let x224: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x225: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (((((arg2[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x226: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((arg2[1]) as fiat_p521_u128));
  let x227: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x228: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((arg2[13]) as fiat_p521_u128));
  let x229: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x230: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (((arg2[11]) as u32) as fiat_p521_u128));
  let x231: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((arg2[10]) as fiat_p521_u128));
  let x232: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x233: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (((arg2[8]) as u32) as fiat_p521_u128));
  let x234: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((arg2[7]) as fiat_p521_u128));
  let x235: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x236: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (((arg2[5]) as u32) as fiat_p521_u128));
  let x237: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((arg2[4]) as fiat_p521_u128));
  let x238: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x239: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (((arg2[2]) as u32) as fiat_p521_u128));
  let x240: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((arg2[1]) as fiat_p521_u128));
  let x241: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x242: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x243: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((arg2[13]) * (0x2 as u64)) as fiat_p521_u128));
  let x244: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x245: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x246: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((arg2[10]) * (0x2 as u64)) as fiat_p521_u128));
  let x247: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x248: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x249: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((arg2[7]) * (0x2 as u64)) as fiat_p521_u128));
  let x250: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x251: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x252: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((arg2[4]) * (0x2 as u64)) as fiat_p521_u128));
  let x253: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x254: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((((arg2[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x255: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((arg2[1]) * (0x2 as u64)) as fiat_p521_u128));
  let x256: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x257: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((arg2[15]) as fiat_p521_u128));
  let x258: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (((((arg2[14]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x259: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((arg2[13]) as fiat_p521_u128));
  let x260: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x261: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (((((arg2[11]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x262: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((arg2[10]) as fiat_p521_u128));
  let x263: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x264: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (((((arg2[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x265: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((arg2[7]) as fiat_p521_u128));
  let x266: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x267: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (((((arg2[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x268: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((arg2[4]) as fiat_p521_u128));
  let x269: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x270: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (((((arg2[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x271: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((arg2[1]) as fiat_p521_u128));
  let x272: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x273: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (((arg2[16]) as u32) as fiat_p521_u128));
  let x274: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * ((arg2[15]) as fiat_p521_u128));
  let x275: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (((arg2[14]) as u32) as fiat_p521_u128));
  let x276: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * ((arg2[13]) as fiat_p521_u128));
  let x277: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * ((arg2[12]) as fiat_p521_u128));
  let x278: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (((arg2[11]) as u32) as fiat_p521_u128));
  let x279: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * ((arg2[10]) as fiat_p521_u128));
  let x280: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * ((arg2[9]) as fiat_p521_u128));
  let x281: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (((arg2[8]) as u32) as fiat_p521_u128));
  let x282: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * ((arg2[7]) as fiat_p521_u128));
  let x283: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * ((arg2[6]) as fiat_p521_u128));
  let x284: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (((arg2[5]) as u32) as fiat_p521_u128));
  let x285: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * ((arg2[4]) as fiat_p521_u128));
  let x286: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * ((arg2[3]) as fiat_p521_u128));
  let x287: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (((arg2[2]) as u32) as fiat_p521_u128));
  let x288: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * ((arg2[1]) as fiat_p521_u128));
  let x289: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * ((arg2[0]) as fiat_p521_u128));
  let x290: fiat_p521_u128 = (x289 + (x136 + (x135 + (x133 + (x130 + (x126 + (x121 + (x115 + (x108 + (x100 + (x91 + (x81 + (x70 + (x58 + (x45 + (x31 + x16))))))))))))))));
  let x291: u64 = ((x290 >> 31) as u64);
  let x292: u32 = ((x290 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x293: fiat_p521_u128 = (x273 + (x257 + (x242 + (x228 + (x215 + (x203 + (x192 + (x182 + (x173 + (x165 + (x158 + (x152 + (x147 + (x143 + (x140 + (x138 + x137))))))))))))))));
  let x294: fiat_p521_u128 = (x274 + (x258 + (x243 + (x229 + (x216 + (x204 + (x193 + (x183 + (x174 + (x166 + (x159 + (x153 + (x148 + (x144 + (x141 + (x139 + x1))))))))))))))));
  let x295: fiat_p521_u128 = (x275 + (x259 + (x244 + (x230 + (x217 + (x205 + (x194 + (x184 + (x175 + (x167 + (x160 + (x154 + (x149 + (x145 + (x142 + (x17 + x2))))))))))))))));
  let x296: fiat_p521_u128 = (x276 + (x260 + (x245 + (x231 + (x218 + (x206 + (x195 + (x185 + (x176 + (x168 + (x161 + (x155 + (x150 + (x146 + (x32 + (x18 + x3))))))))))))))));
  let x297: fiat_p521_u128 = (x277 + (x261 + (x246 + (x232 + (x219 + (x207 + (x196 + (x186 + (x177 + (x169 + (x162 + (x156 + (x151 + (x46 + (x33 + (x19 + x4))))))))))))))));
  let x298: fiat_p521_u128 = (x278 + (x262 + (x247 + (x233 + (x220 + (x208 + (x197 + (x187 + (x178 + (x170 + (x163 + (x157 + (x59 + (x47 + (x34 + (x20 + x5))))))))))))))));
  let x299: fiat_p521_u128 = (x279 + (x263 + (x248 + (x234 + (x221 + (x209 + (x198 + (x188 + (x179 + (x171 + (x164 + (x71 + (x60 + (x48 + (x35 + (x21 + x6))))))))))))))));
  let x300: fiat_p521_u128 = (x280 + (x264 + (x249 + (x235 + (x222 + (x210 + (x199 + (x189 + (x180 + (x172 + (x82 + (x72 + (x61 + (x49 + (x36 + (x22 + x7))))))))))))))));
  let x301: fiat_p521_u128 = (x281 + (x265 + (x250 + (x236 + (x223 + (x211 + (x200 + (x190 + (x181 + (x92 + (x83 + (x73 + (x62 + (x50 + (x37 + (x23 + x8))))))))))))))));
  let x302: fiat_p521_u128 = (x282 + (x266 + (x251 + (x237 + (x224 + (x212 + (x201 + (x191 + (x101 + (x93 + (x84 + (x74 + (x63 + (x51 + (x38 + (x24 + x9))))))))))))))));
  let x303: fiat_p521_u128 = (x283 + (x267 + (x252 + (x238 + (x225 + (x213 + (x202 + (x109 + (x102 + (x94 + (x85 + (x75 + (x64 + (x52 + (x39 + (x25 + x10))))))))))))))));
  let x304: fiat_p521_u128 = (x284 + (x268 + (x253 + (x239 + (x226 + (x214 + (x116 + (x110 + (x103 + (x95 + (x86 + (x76 + (x65 + (x53 + (x40 + (x26 + x11))))))))))))))));
  let x305: fiat_p521_u128 = (x285 + (x269 + (x254 + (x240 + (x227 + (x122 + (x117 + (x111 + (x104 + (x96 + (x87 + (x77 + (x66 + (x54 + (x41 + (x27 + x12))))))))))))))));
  let x306: fiat_p521_u128 = (x286 + (x270 + (x255 + (x241 + (x127 + (x123 + (x118 + (x112 + (x105 + (x97 + (x88 + (x78 + (x67 + (x55 + (x42 + (x28 + x13))))))))))))))));
  let x307: fiat_p521_u128 = (x287 + (x271 + (x256 + (x131 + (x128 + (x124 + (x119 + (x113 + (x106 + (x98 + (x89 + (x79 + (x68 + (x56 + (x43 + (x29 + x14))))))))))))))));
  let x308: fiat_p521_u128 = (x288 + (x272 + (x134 + (x132 + (x129 + (x125 + (x120 + (x114 + (x107 + (x99 + (x90 + (x80 + (x69 + (x57 + (x44 + (x30 + x15))))))))))))))));
  let x309: fiat_p521_u128 = ((x291 as fiat_p521_u128) + x308);
  let x310: u64 = ((x309 >> 31) as u64);
  let x311: u32 = ((x309 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x312: fiat_p521_u128 = ((x310 as fiat_p521_u128) + x307);
  let x313: u64 = ((x312 >> 30) as u64);
  let x314: u32 = ((x312 & (0x3fffffff as fiat_p521_u128)) as u32);
  let x315: fiat_p521_u128 = ((x313 as fiat_p521_u128) + x306);
  let x316: u64 = ((x315 >> 31) as u64);
  let x317: u32 = ((x315 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x318: fiat_p521_u128 = ((x316 as fiat_p521_u128) + x305);
  let x319: u64 = ((x318 >> 31) as u64);
  let x320: u32 = ((x318 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x321: fiat_p521_u128 = ((x319 as fiat_p521_u128) + x304);
  let x322: u64 = ((x321 >> 30) as u64);
  let x323: u32 = ((x321 & (0x3fffffff as fiat_p521_u128)) as u32);
  let x324: fiat_p521_u128 = ((x322 as fiat_p521_u128) + x303);
  let x325: u64 = ((x324 >> 31) as u64);
  let x326: u32 = ((x324 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x327: fiat_p521_u128 = ((x325 as fiat_p521_u128) + x302);
  let x328: u64 = ((x327 >> 31) as u64);
  let x329: u32 = ((x327 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x330: fiat_p521_u128 = ((x328 as fiat_p521_u128) + x301);
  let x331: u64 = ((x330 >> 30) as u64);
  let x332: u32 = ((x330 & (0x3fffffff as fiat_p521_u128)) as u32);
  let x333: fiat_p521_u128 = ((x331 as fiat_p521_u128) + x300);
  let x334: u64 = ((x333 >> 31) as u64);
  let x335: u32 = ((x333 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x336: fiat_p521_u128 = ((x334 as fiat_p521_u128) + x299);
  let x337: u64 = ((x336 >> 31) as u64);
  let x338: u32 = ((x336 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x339: fiat_p521_u128 = ((x337 as fiat_p521_u128) + x298);
  let x340: u64 = ((x339 >> 30) as u64);
  let x341: u32 = ((x339 & (0x3fffffff as fiat_p521_u128)) as u32);
  let x342: fiat_p521_u128 = ((x340 as fiat_p521_u128) + x297);
  let x343: u64 = ((x342 >> 31) as u64);
  let x344: u32 = ((x342 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x345: fiat_p521_u128 = ((x343 as fiat_p521_u128) + x296);
  let x346: u64 = ((x345 >> 31) as u64);
  let x347: u32 = ((x345 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x348: fiat_p521_u128 = ((x346 as fiat_p521_u128) + x295);
  let x349: u64 = ((x348 >> 30) as u64);
  let x350: u32 = ((x348 & (0x3fffffff as fiat_p521_u128)) as u32);
  let x351: fiat_p521_u128 = ((x349 as fiat_p521_u128) + x294);
  let x352: u64 = ((x351 >> 31) as u64);
  let x353: u32 = ((x351 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x354: fiat_p521_u128 = ((x352 as fiat_p521_u128) + x293);
  let x355: u64 = ((x354 >> 30) as u64);
  let x356: u32 = ((x354 & (0x3fffffff as fiat_p521_u128)) as u32);
  let x357: u64 = ((x292 as u64) + x355);
  let x358: u32 = ((x357 >> 31) as u32);
  let x359: u32 = ((x357 & (0x7fffffff as u64)) as u32);
  let x360: u32 = (x358 + x311);
  let x361: fiat_p521_u1 = ((x360 >> 31) as fiat_p521_u1);
  let x362: u32 = (x360 & 0x7fffffff);
  let x363: u32 = ((x361 as u32) + x314);
  out1[0] = x359;
  out1[1] = x362;
  out1[2] = x363;
  out1[3] = x317;
  out1[4] = x320;
  out1[5] = x323;
  out1[6] = x326;
  out1[7] = x329;
  out1[8] = x332;
  out1[9] = x335;
  out1[10] = x338;
  out1[11] = x341;
  out1[12] = x344;
  out1[13] = x347;
  out1[14] = x350;
  out1[15] = x353;
  out1[16] = x356;
}

/*
 * The function fiat_p521_carry_square squares a field element and reduces the result.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 * eval arg1) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666]]
 */
#[inline]
pub fn fiat_p521_carry_square(out1: &mut [u32; 17], arg1: &[u64; 17]) -> () {
  let x1: u32 = ((arg1[16]) as u32);
  let x2: u64 = ((x1 as u64) * (0x2 as u64));
  let x3: u64 = ((((arg1[16]) as u32) as u64) * (0x2 as u64));
  let x4: u64 = (arg1[15]);
  let x5: u64 = (x4 * (0x2 as u64));
  let x6: u64 = ((arg1[15]) * (0x2 as u64));
  let x7: u32 = ((arg1[14]) as u32);
  let x8: u64 = ((x7 as u64) * (0x2 as u64));
  let x9: u64 = ((((arg1[14]) as u32) as u64) * (0x2 as u64));
  let x10: u64 = (arg1[13]);
  let x11: u64 = (x10 * (0x2 as u64));
  let x12: u64 = ((arg1[13]) * (0x2 as u64));
  let x13: u64 = (arg1[12]);
  let x14: u64 = (x13 * (0x2 as u64));
  let x15: u64 = ((arg1[12]) * (0x2 as u64));
  let x16: u32 = ((arg1[11]) as u32);
  let x17: u64 = ((x16 as u64) * (0x2 as u64));
  let x18: u64 = ((((arg1[11]) as u32) as u64) * (0x2 as u64));
  let x19: u64 = (arg1[10]);
  let x20: u64 = (x19 * (0x2 as u64));
  let x21: u64 = ((arg1[10]) * (0x2 as u64));
  let x22: u64 = (arg1[9]);
  let x23: u64 = (x22 * (0x2 as u64));
  let x24: u64 = ((arg1[9]) * (0x2 as u64));
  let x25: u64 = ((((arg1[8]) as u32) as u64) * (0x2 as u64));
  let x26: u64 = ((arg1[7]) * (0x2 as u64));
  let x27: u64 = ((arg1[6]) * (0x2 as u64));
  let x28: u64 = ((((arg1[5]) as u32) as u64) * (0x2 as u64));
  let x29: u64 = ((arg1[4]) * (0x2 as u64));
  let x30: u64 = ((arg1[3]) * (0x2 as u64));
  let x31: u64 = ((((arg1[2]) as u32) as u64) * (0x2 as u64));
  let x32: u64 = ((arg1[1]) * (0x2 as u64));
  let x33: fiat_p521_u128 = ((((arg1[16]) as u32) as fiat_p521_u128) * (((x1 as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x34: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * (x2 as fiat_p521_u128));
  let x35: fiat_p521_u128 = (((arg1[15]) as fiat_p521_u128) * (x4 as fiat_p521_u128));
  let x36: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * ((x2 * (0x2 as u64)) as fiat_p521_u128));
  let x37: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * ((x5 * (0x2 as u64)) as fiat_p521_u128));
  let x38: fiat_p521_u128 = ((((arg1[14]) as u32) as fiat_p521_u128) * (((x7 as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x39: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * ((x2 * (0x2 as u64)) as fiat_p521_u128));
  let x40: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * (x5 as fiat_p521_u128));
  let x41: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * ((x8 * (0x2 as u64)) as fiat_p521_u128));
  let x42: fiat_p521_u128 = (((arg1[13]) as fiat_p521_u128) * ((x10 * (0x2 as u64)) as fiat_p521_u128));
  let x43: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * (x2 as fiat_p521_u128));
  let x44: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * (x5 as fiat_p521_u128));
  let x45: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * ((x8 * (0x2 as u64)) as fiat_p521_u128));
  let x46: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * (x11 as fiat_p521_u128));
  let x47: fiat_p521_u128 = (((arg1[12]) as fiat_p521_u128) * (x13 as fiat_p521_u128));
  let x48: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * ((x2 * (0x2 as u64)) as fiat_p521_u128));
  let x49: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * ((x5 * (0x2 as u64)) as fiat_p521_u128));
  let x50: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * ((x8 * (0x2 as u64)) as fiat_p521_u128));
  let x51: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * ((x11 * (0x2 as u64)) as fiat_p521_u128));
  let x52: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * ((x14 * (0x2 as u64)) as fiat_p521_u128));
  let x53: fiat_p521_u128 = ((((arg1[11]) as u32) as fiat_p521_u128) * (((x16 as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x54: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((x2 * (0x2 as u64)) as fiat_p521_u128));
  let x55: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * (x5 as fiat_p521_u128));
  let x56: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((x8 * (0x2 as u64)) as fiat_p521_u128));
  let x57: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((x11 * (0x2 as u64)) as fiat_p521_u128));
  let x58: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * (x14 as fiat_p521_u128));
  let x59: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((x17 * (0x2 as u64)) as fiat_p521_u128));
  let x60: fiat_p521_u128 = (((arg1[10]) as fiat_p521_u128) * ((x19 * (0x2 as u64)) as fiat_p521_u128));
  let x61: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * (x2 as fiat_p521_u128));
  let x62: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * (x5 as fiat_p521_u128));
  let x63: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((x8 * (0x2 as u64)) as fiat_p521_u128));
  let x64: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * (x11 as fiat_p521_u128));
  let x65: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * (x14 as fiat_p521_u128));
  let x66: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * ((x17 * (0x2 as u64)) as fiat_p521_u128));
  let x67: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * (x20 as fiat_p521_u128));
  let x68: fiat_p521_u128 = (((arg1[9]) as fiat_p521_u128) * (x22 as fiat_p521_u128));
  let x69: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * ((x2 * (0x2 as u64)) as fiat_p521_u128));
  let x70: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * ((x5 * (0x2 as u64)) as fiat_p521_u128));
  let x71: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * ((x8 * (0x2 as u64)) as fiat_p521_u128));
  let x72: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * ((x11 * (0x2 as u64)) as fiat_p521_u128));
  let x73: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * ((x14 * (0x2 as u64)) as fiat_p521_u128));
  let x74: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * ((x17 * (0x2 as u64)) as fiat_p521_u128));
  let x75: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * ((x20 * (0x2 as u64)) as fiat_p521_u128));
  let x76: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * ((x23 * (0x2 as u64)) as fiat_p521_u128));
  let x77: fiat_p521_u128 = ((((arg1[8]) as u32) as fiat_p521_u128) * (((((arg1[8]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x78: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((x2 * (0x2 as u64)) as fiat_p521_u128));
  let x79: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * (x5 as fiat_p521_u128));
  let x80: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((x8 * (0x2 as u64)) as fiat_p521_u128));
  let x81: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((x11 * (0x2 as u64)) as fiat_p521_u128));
  let x82: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * (x14 as fiat_p521_u128));
  let x83: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((x17 * (0x2 as u64)) as fiat_p521_u128));
  let x84: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((x20 * (0x2 as u64)) as fiat_p521_u128));
  let x85: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * (x24 as fiat_p521_u128));
  let x86: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((x25 * (0x2 as u64)) as fiat_p521_u128));
  let x87: fiat_p521_u128 = (((arg1[7]) as fiat_p521_u128) * ((arg1[7]) as fiat_p521_u128));
  let x88: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (x2 as fiat_p521_u128));
  let x89: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (x5 as fiat_p521_u128));
  let x90: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((x8 * (0x2 as u64)) as fiat_p521_u128));
  let x91: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (x11 as fiat_p521_u128));
  let x92: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (x14 as fiat_p521_u128));
  let x93: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((x17 * (0x2 as u64)) as fiat_p521_u128));
  let x94: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (x21 as fiat_p521_u128));
  let x95: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (x24 as fiat_p521_u128));
  let x96: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (x25 as fiat_p521_u128));
  let x97: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * (x26 as fiat_p521_u128));
  let x98: fiat_p521_u128 = (((arg1[6]) as fiat_p521_u128) * ((arg1[6]) as fiat_p521_u128));
  let x99: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((x2 * (0x2 as u64)) as fiat_p521_u128));
  let x100: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((x5 * (0x2 as u64)) as fiat_p521_u128));
  let x101: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((x8 * (0x2 as u64)) as fiat_p521_u128));
  let x102: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((x11 * (0x2 as u64)) as fiat_p521_u128));
  let x103: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((x14 * (0x2 as u64)) as fiat_p521_u128));
  let x104: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((x18 * (0x2 as u64)) as fiat_p521_u128));
  let x105: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((x21 * (0x2 as u64)) as fiat_p521_u128));
  let x106: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (x24 as fiat_p521_u128));
  let x107: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((x25 * (0x2 as u64)) as fiat_p521_u128));
  let x108: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * ((x26 * (0x2 as u64)) as fiat_p521_u128));
  let x109: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (x27 as fiat_p521_u128));
  let x110: fiat_p521_u128 = ((((arg1[5]) as u32) as fiat_p521_u128) * (((((arg1[5]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x111: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((x2 * (0x2 as u64)) as fiat_p521_u128));
  let x112: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (x5 as fiat_p521_u128));
  let x113: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((x8 * (0x2 as u64)) as fiat_p521_u128));
  let x114: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((x11 * (0x2 as u64)) as fiat_p521_u128));
  let x115: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (x15 as fiat_p521_u128));
  let x116: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((x18 * (0x2 as u64)) as fiat_p521_u128));
  let x117: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (x21 as fiat_p521_u128));
  let x118: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (x24 as fiat_p521_u128));
  let x119: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((x25 * (0x2 as u64)) as fiat_p521_u128));
  let x120: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (x26 as fiat_p521_u128));
  let x121: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * (x27 as fiat_p521_u128));
  let x122: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((x28 * (0x2 as u64)) as fiat_p521_u128));
  let x123: fiat_p521_u128 = (((arg1[4]) as fiat_p521_u128) * ((arg1[4]) as fiat_p521_u128));
  let x124: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (x2 as fiat_p521_u128));
  let x125: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (x5 as fiat_p521_u128));
  let x126: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((x8 * (0x2 as u64)) as fiat_p521_u128));
  let x127: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (x12 as fiat_p521_u128));
  let x128: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (x15 as fiat_p521_u128));
  let x129: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (x18 as fiat_p521_u128));
  let x130: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (x21 as fiat_p521_u128));
  let x131: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (x24 as fiat_p521_u128));
  let x132: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (x25 as fiat_p521_u128));
  let x133: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (x26 as fiat_p521_u128));
  let x134: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (x27 as fiat_p521_u128));
  let x135: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (x28 as fiat_p521_u128));
  let x136: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * (x29 as fiat_p521_u128));
  let x137: fiat_p521_u128 = (((arg1[3]) as fiat_p521_u128) * ((arg1[3]) as fiat_p521_u128));
  let x138: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((x2 * (0x2 as u64)) as fiat_p521_u128));
  let x139: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((x5 * (0x2 as u64)) as fiat_p521_u128));
  let x140: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((x9 * (0x2 as u64)) as fiat_p521_u128));
  let x141: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((x12 * (0x2 as u64)) as fiat_p521_u128));
  let x142: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (x15 as fiat_p521_u128));
  let x143: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((x18 * (0x2 as u64)) as fiat_p521_u128));
  let x144: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((x21 * (0x2 as u64)) as fiat_p521_u128));
  let x145: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (x24 as fiat_p521_u128));
  let x146: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((x25 * (0x2 as u64)) as fiat_p521_u128));
  let x147: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((x26 * (0x2 as u64)) as fiat_p521_u128));
  let x148: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (x27 as fiat_p521_u128));
  let x149: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((x28 * (0x2 as u64)) as fiat_p521_u128));
  let x150: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * ((x29 * (0x2 as u64)) as fiat_p521_u128));
  let x151: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (x30 as fiat_p521_u128));
  let x152: fiat_p521_u128 = ((((arg1[2]) as u32) as fiat_p521_u128) * (((((arg1[2]) as u32) as u64) * (0x2 as u64)) as fiat_p521_u128));
  let x153: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((x2 * (0x2 as u64)) as fiat_p521_u128));
  let x154: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (x6 as fiat_p521_u128));
  let x155: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((x9 * (0x2 as u64)) as fiat_p521_u128));
  let x156: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (x12 as fiat_p521_u128));
  let x157: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (x15 as fiat_p521_u128));
  let x158: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((x18 * (0x2 as u64)) as fiat_p521_u128));
  let x159: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (x21 as fiat_p521_u128));
  let x160: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (x24 as fiat_p521_u128));
  let x161: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((x25 * (0x2 as u64)) as fiat_p521_u128));
  let x162: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (x26 as fiat_p521_u128));
  let x163: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (x27 as fiat_p521_u128));
  let x164: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((x28 * (0x2 as u64)) as fiat_p521_u128));
  let x165: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (x29 as fiat_p521_u128));
  let x166: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * (x30 as fiat_p521_u128));
  let x167: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((x31 * (0x2 as u64)) as fiat_p521_u128));
  let x168: fiat_p521_u128 = (((arg1[1]) as fiat_p521_u128) * ((arg1[1]) as fiat_p521_u128));
  let x169: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x3 as fiat_p521_u128));
  let x170: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x6 as fiat_p521_u128));
  let x171: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x9 as fiat_p521_u128));
  let x172: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x12 as fiat_p521_u128));
  let x173: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x15 as fiat_p521_u128));
  let x174: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x18 as fiat_p521_u128));
  let x175: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x21 as fiat_p521_u128));
  let x176: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x24 as fiat_p521_u128));
  let x177: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x25 as fiat_p521_u128));
  let x178: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x26 as fiat_p521_u128));
  let x179: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x27 as fiat_p521_u128));
  let x180: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x28 as fiat_p521_u128));
  let x181: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x29 as fiat_p521_u128));
  let x182: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x30 as fiat_p521_u128));
  let x183: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x31 as fiat_p521_u128));
  let x184: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * (x32 as fiat_p521_u128));
  let x185: fiat_p521_u128 = (((arg1[0]) as fiat_p521_u128) * ((arg1[0]) as fiat_p521_u128));
  let x186: fiat_p521_u128 = (x185 + (x153 + (x139 + (x126 + (x114 + (x103 + (x93 + (x84 + x76))))))));
  let x187: u64 = ((x186 >> 31) as u64);
  let x188: u32 = ((x186 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x189: fiat_p521_u128 = (x169 + (x154 + (x140 + (x127 + (x115 + (x104 + (x94 + (x85 + x77))))))));
  let x190: fiat_p521_u128 = (x170 + (x155 + (x141 + (x128 + (x116 + (x105 + (x95 + (x86 + x33))))))));
  let x191: fiat_p521_u128 = (x171 + (x156 + (x142 + (x129 + (x117 + (x106 + (x96 + (x87 + x34))))))));
  let x192: fiat_p521_u128 = (x172 + (x157 + (x143 + (x130 + (x118 + (x107 + (x97 + (x36 + x35))))))));
  let x193: fiat_p521_u128 = (x173 + (x158 + (x144 + (x131 + (x119 + (x108 + (x98 + (x39 + x37))))))));
  let x194: fiat_p521_u128 = (x174 + (x159 + (x145 + (x132 + (x120 + (x109 + (x43 + (x40 + x38))))))));
  let x195: fiat_p521_u128 = (x175 + (x160 + (x146 + (x133 + (x121 + (x110 + (x48 + (x44 + x41))))))));
  let x196: fiat_p521_u128 = (x176 + (x161 + (x147 + (x134 + (x122 + (x54 + (x49 + (x45 + x42))))))));
  let x197: fiat_p521_u128 = (x177 + (x162 + (x148 + (x135 + (x123 + (x61 + (x55 + (x50 + x46))))))));
  let x198: fiat_p521_u128 = (x178 + (x163 + (x149 + (x136 + (x69 + (x62 + (x56 + (x51 + x47))))))));
  let x199: fiat_p521_u128 = (x179 + (x164 + (x150 + (x137 + (x78 + (x70 + (x63 + (x57 + x52))))))));
  let x200: fiat_p521_u128 = (x180 + (x165 + (x151 + (x88 + (x79 + (x71 + (x64 + (x58 + x53))))))));
  let x201: fiat_p521_u128 = (x181 + (x166 + (x152 + (x99 + (x89 + (x80 + (x72 + (x65 + x59))))))));
  let x202: fiat_p521_u128 = (x182 + (x167 + (x111 + (x100 + (x90 + (x81 + (x73 + (x66 + x60))))))));
  let x203: fiat_p521_u128 = (x183 + (x168 + (x124 + (x112 + (x101 + (x91 + (x82 + (x74 + x67))))))));
  let x204: fiat_p521_u128 = (x184 + (x138 + (x125 + (x113 + (x102 + (x92 + (x83 + (x75 + x68))))))));
  let x205: fiat_p521_u128 = ((x187 as fiat_p521_u128) + x204);
  let x206: u64 = ((x205 >> 31) as u64);
  let x207: u32 = ((x205 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x208: fiat_p521_u128 = ((x206 as fiat_p521_u128) + x203);
  let x209: u64 = ((x208 >> 30) as u64);
  let x210: u32 = ((x208 & (0x3fffffff as fiat_p521_u128)) as u32);
  let x211: fiat_p521_u128 = ((x209 as fiat_p521_u128) + x202);
  let x212: u64 = ((x211 >> 31) as u64);
  let x213: u32 = ((x211 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x214: fiat_p521_u128 = ((x212 as fiat_p521_u128) + x201);
  let x215: u64 = ((x214 >> 31) as u64);
  let x216: u32 = ((x214 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x217: fiat_p521_u128 = ((x215 as fiat_p521_u128) + x200);
  let x218: u64 = ((x217 >> 30) as u64);
  let x219: u32 = ((x217 & (0x3fffffff as fiat_p521_u128)) as u32);
  let x220: fiat_p521_u128 = ((x218 as fiat_p521_u128) + x199);
  let x221: u64 = ((x220 >> 31) as u64);
  let x222: u32 = ((x220 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x223: fiat_p521_u128 = ((x221 as fiat_p521_u128) + x198);
  let x224: u64 = ((x223 >> 31) as u64);
  let x225: u32 = ((x223 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x226: fiat_p521_u128 = ((x224 as fiat_p521_u128) + x197);
  let x227: u64 = ((x226 >> 30) as u64);
  let x228: u32 = ((x226 & (0x3fffffff as fiat_p521_u128)) as u32);
  let x229: fiat_p521_u128 = ((x227 as fiat_p521_u128) + x196);
  let x230: u64 = ((x229 >> 31) as u64);
  let x231: u32 = ((x229 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x232: fiat_p521_u128 = ((x230 as fiat_p521_u128) + x195);
  let x233: u64 = ((x232 >> 31) as u64);
  let x234: u32 = ((x232 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x235: fiat_p521_u128 = ((x233 as fiat_p521_u128) + x194);
  let x236: u64 = ((x235 >> 30) as u64);
  let x237: u32 = ((x235 & (0x3fffffff as fiat_p521_u128)) as u32);
  let x238: fiat_p521_u128 = ((x236 as fiat_p521_u128) + x193);
  let x239: u64 = ((x238 >> 31) as u64);
  let x240: u32 = ((x238 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x241: fiat_p521_u128 = ((x239 as fiat_p521_u128) + x192);
  let x242: u64 = ((x241 >> 31) as u64);
  let x243: u32 = ((x241 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x244: fiat_p521_u128 = ((x242 as fiat_p521_u128) + x191);
  let x245: u64 = ((x244 >> 30) as u64);
  let x246: u32 = ((x244 & (0x3fffffff as fiat_p521_u128)) as u32);
  let x247: fiat_p521_u128 = ((x245 as fiat_p521_u128) + x190);
  let x248: u64 = ((x247 >> 31) as u64);
  let x249: u32 = ((x247 & (0x7fffffff as fiat_p521_u128)) as u32);
  let x250: fiat_p521_u128 = ((x248 as fiat_p521_u128) + x189);
  let x251: u64 = ((x250 >> 30) as u64);
  let x252: u32 = ((x250 & (0x3fffffff as fiat_p521_u128)) as u32);
  let x253: u64 = ((x188 as u64) + x251);
  let x254: u32 = ((x253 >> 31) as u32);
  let x255: u32 = ((x253 & (0x7fffffff as u64)) as u32);
  let x256: u32 = (x254 + x207);
  let x257: fiat_p521_u1 = ((x256 >> 31) as fiat_p521_u1);
  let x258: u32 = (x256 & 0x7fffffff);
  let x259: u32 = ((x257 as u32) + x210);
  out1[0] = x255;
  out1[1] = x258;
  out1[2] = x259;
  out1[3] = x213;
  out1[4] = x216;
  out1[5] = x219;
  out1[6] = x222;
  out1[7] = x225;
  out1[8] = x228;
  out1[9] = x231;
  out1[10] = x234;
  out1[11] = x237;
  out1[12] = x240;
  out1[13] = x243;
  out1[14] = x246;
  out1[15] = x249;
  out1[16] = x252;
}

/*
 * The function fiat_p521_carry reduces a field element.
 * Postconditions:
 *   eval out1 mod m = eval arg1 mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666]]
 */
#[inline]
pub fn fiat_p521_carry(out1: &mut [u32; 17], arg1: &[u64; 17]) -> () {
  let x1: u64 = (arg1[0]);
  let x2: u64 = ((((x1 >> 31) as u32) as u64) + (arg1[1]));
  let x3: u32 = (((x2 >> 31) as u32) + ((arg1[2]) as u32));
  let x4: u64 = (((x3 >> 30) as u64) + (arg1[3]));
  let x5: u64 = ((((x4 >> 31) as u32) as u64) + (arg1[4]));
  let x6: u32 = (((x5 >> 31) as u32) + ((arg1[5]) as u32));
  let x7: u64 = (((x6 >> 30) as u64) + (arg1[6]));
  let x8: u64 = ((((x7 >> 31) as u32) as u64) + (arg1[7]));
  let x9: u32 = (((x8 >> 31) as u32) + ((arg1[8]) as u32));
  let x10: u64 = (((x9 >> 30) as u64) + (arg1[9]));
  let x11: u64 = ((((x10 >> 31) as u32) as u64) + (arg1[10]));
  let x12: u32 = (((x11 >> 31) as u32) + ((arg1[11]) as u32));
  let x13: u64 = (((x12 >> 30) as u64) + (arg1[12]));
  let x14: u64 = ((((x13 >> 31) as u32) as u64) + (arg1[13]));
  let x15: u32 = (((x14 >> 31) as u32) + ((arg1[14]) as u32));
  let x16: u64 = (((x15 >> 30) as u64) + (arg1[15]));
  let x17: u32 = (((x16 >> 31) as u32) + ((arg1[16]) as u32));
  let x18: u32 = (((x1 & (0x7fffffff as u64)) as u32) + (x17 >> 30));
  let x19: u32 = ((((x18 >> 31) as fiat_p521_u1) as u32) + ((x2 & (0x7fffffff as u64)) as u32));
  let x20: u32 = (x18 & 0x7fffffff);
  let x21: u32 = (x19 & 0x7fffffff);
  let x22: u32 = ((((x19 >> 31) as fiat_p521_u1) as u32) + (x3 & 0x3fffffff));
  let x23: u32 = ((x4 & (0x7fffffff as u64)) as u32);
  let x24: u32 = ((x5 & (0x7fffffff as u64)) as u32);
  let x25: u32 = (x6 & 0x3fffffff);
  let x26: u32 = ((x7 & (0x7fffffff as u64)) as u32);
  let x27: u32 = ((x8 & (0x7fffffff as u64)) as u32);
  let x28: u32 = (x9 & 0x3fffffff);
  let x29: u32 = ((x10 & (0x7fffffff as u64)) as u32);
  let x30: u32 = ((x11 & (0x7fffffff as u64)) as u32);
  let x31: u32 = (x12 & 0x3fffffff);
  let x32: u32 = ((x13 & (0x7fffffff as u64)) as u32);
  let x33: u32 = ((x14 & (0x7fffffff as u64)) as u32);
  let x34: u32 = (x15 & 0x3fffffff);
  let x35: u32 = ((x16 & (0x7fffffff as u64)) as u32);
  let x36: u32 = (x17 & 0x3fffffff);
  out1[0] = x20;
  out1[1] = x21;
  out1[2] = x22;
  out1[3] = x23;
  out1[4] = x24;
  out1[5] = x25;
  out1[6] = x26;
  out1[7] = x27;
  out1[8] = x28;
  out1[9] = x29;
  out1[10] = x30;
  out1[11] = x31;
  out1[12] = x32;
  out1[13] = x33;
  out1[14] = x34;
  out1[15] = x35;
  out1[16] = x36;
}

/*
 * The function fiat_p521_add adds two field elements.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 + eval arg2) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666]]
 *   arg2: [[0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332]]
 */
#[inline]
pub fn fiat_p521_add(out1: &mut [u64; 17], arg1: &[u32; 17], arg2: &[u32; 17]) -> () {
  let x1: u64 = (((arg1[0]) as u64) + ((arg2[0]) as u64));
  let x2: u64 = (((arg1[1]) as u64) + ((arg2[1]) as u64));
  let x3: u32 = ((arg1[2]) + (arg2[2]));
  let x4: u64 = (((arg1[3]) as u64) + ((arg2[3]) as u64));
  let x5: u64 = (((arg1[4]) as u64) + ((arg2[4]) as u64));
  let x6: u32 = ((arg1[5]) + (arg2[5]));
  let x7: u64 = (((arg1[6]) as u64) + ((arg2[6]) as u64));
  let x8: u64 = (((arg1[7]) as u64) + ((arg2[7]) as u64));
  let x9: u32 = ((arg1[8]) + (arg2[8]));
  let x10: u64 = (((arg1[9]) as u64) + ((arg2[9]) as u64));
  let x11: u64 = (((arg1[10]) as u64) + ((arg2[10]) as u64));
  let x12: u32 = ((arg1[11]) + (arg2[11]));
  let x13: u64 = (((arg1[12]) as u64) + ((arg2[12]) as u64));
  let x14: u64 = (((arg1[13]) as u64) + ((arg2[13]) as u64));
  let x15: u32 = ((arg1[14]) + (arg2[14]));
  let x16: u64 = (((arg1[15]) as u64) + ((arg2[15]) as u64));
  let x17: u32 = ((arg1[16]) + (arg2[16]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = (x3 as u64);
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = (x6 as u64);
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = (x9 as u64);
  out1[9] = x10;
  out1[10] = x11;
  out1[11] = (x12 as u64);
  out1[12] = x13;
  out1[13] = x14;
  out1[14] = (x15 as u64);
  out1[15] = x16;
  out1[16] = (x17 as u64);
}

/*
 * The function fiat_p521_sub subtracts two field elements.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 - eval arg2) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666]]
 *   arg2: [[0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332]]
 */
#[inline]
pub fn fiat_p521_sub(out1: &mut [u64; 17], arg1: &[u32; 17], arg2: &[u32; 17]) -> () {
  let x1: u64 = (((0xfffffffe as u64) + ((arg1[0]) as u64)) - ((arg2[0]) as u64));
  let x2: u64 = (((0xfffffffe as u64) + ((arg1[1]) as u64)) - ((arg2[1]) as u64));
  let x3: u32 = ((0x7ffffffe + (arg1[2])) - (arg2[2]));
  let x4: u64 = (((0xfffffffe as u64) + ((arg1[3]) as u64)) - ((arg2[3]) as u64));
  let x5: u64 = (((0xfffffffe as u64) + ((arg1[4]) as u64)) - ((arg2[4]) as u64));
  let x6: u32 = ((0x7ffffffe + (arg1[5])) - (arg2[5]));
  let x7: u64 = (((0xfffffffe as u64) + ((arg1[6]) as u64)) - ((arg2[6]) as u64));
  let x8: u64 = (((0xfffffffe as u64) + ((arg1[7]) as u64)) - ((arg2[7]) as u64));
  let x9: u32 = ((0x7ffffffe + (arg1[8])) - (arg2[8]));
  let x10: u64 = (((0xfffffffe as u64) + ((arg1[9]) as u64)) - ((arg2[9]) as u64));
  let x11: u64 = (((0xfffffffe as u64) + ((arg1[10]) as u64)) - ((arg2[10]) as u64));
  let x12: u32 = ((0x7ffffffe + (arg1[11])) - (arg2[11]));
  let x13: u64 = (((0xfffffffe as u64) + ((arg1[12]) as u64)) - ((arg2[12]) as u64));
  let x14: u64 = (((0xfffffffe as u64) + ((arg1[13]) as u64)) - ((arg2[13]) as u64));
  let x15: u32 = ((0x7ffffffe + (arg1[14])) - (arg2[14]));
  let x16: u64 = (((0xfffffffe as u64) + ((arg1[15]) as u64)) - ((arg2[15]) as u64));
  let x17: u32 = ((0x7ffffffe + (arg1[16])) - (arg2[16]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = (x3 as u64);
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = (x6 as u64);
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = (x9 as u64);
  out1[9] = x10;
  out1[10] = x11;
  out1[11] = (x12 as u64);
  out1[12] = x13;
  out1[13] = x14;
  out1[14] = (x15 as u64);
  out1[15] = x16;
  out1[16] = (x17 as u64);
}

/*
 * The function fiat_p521_opp negates a field element.
 * Postconditions:
 *   eval out1 mod m = -eval arg1 mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332], [0x0 ~> 0x1a6666664], [0x0 ~> 0xd3333332]]
 */
#[inline]
pub fn fiat_p521_opp(out1: &mut [u32; 17], arg1: &[u32; 17]) -> () {
  let x1: u32 = (0xfffffffe - (arg1[0]));
  let x2: u32 = (0xfffffffe - (arg1[1]));
  let x3: u32 = (0x7ffffffe - (arg1[2]));
  let x4: u32 = (0xfffffffe - (arg1[3]));
  let x5: u32 = (0xfffffffe - (arg1[4]));
  let x6: u32 = (0x7ffffffe - (arg1[5]));
  let x7: u32 = (0xfffffffe - (arg1[6]));
  let x8: u32 = (0xfffffffe - (arg1[7]));
  let x9: u32 = (0x7ffffffe - (arg1[8]));
  let x10: u32 = (0xfffffffe - (arg1[9]));
  let x11: u32 = (0xfffffffe - (arg1[10]));
  let x12: u32 = (0x7ffffffe - (arg1[11]));
  let x13: u32 = (0xfffffffe - (arg1[12]));
  let x14: u32 = (0xfffffffe - (arg1[13]));
  let x15: u32 = (0x7ffffffe - (arg1[14]));
  let x16: u32 = (0xfffffffe - (arg1[15]));
  let x17: u32 = (0x7ffffffe - (arg1[16]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = x9;
  out1[9] = x10;
  out1[10] = x11;
  out1[11] = x12;
  out1[12] = x13;
  out1[13] = x14;
  out1[14] = x15;
  out1[15] = x16;
  out1[16] = x17;
}

/*
 * The function fiat_p521_selectznz is a multi-limb conditional select.
 * Postconditions:
 *   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p521_selectznz(out1: &mut [u32; 17], arg1: fiat_p521_u1, arg2: &[u32; 17], arg3: &[u32; 17]) -> () {
  let mut x1: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x1, arg1, (arg2[0]), (arg3[0]));
  let mut x2: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x2, arg1, (arg2[1]), (arg3[1]));
  let mut x3: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x3, arg1, (arg2[2]), (arg3[2]));
  let mut x4: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x4, arg1, (arg2[3]), (arg3[3]));
  let mut x5: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x5, arg1, (arg2[4]), (arg3[4]));
  let mut x6: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x6, arg1, (arg2[5]), (arg3[5]));
  let mut x7: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x7, arg1, (arg2[6]), (arg3[6]));
  let mut x8: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x8, arg1, (arg2[7]), (arg3[7]));
  let mut x9: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x9, arg1, (arg2[8]), (arg3[8]));
  let mut x10: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x10, arg1, (arg2[9]), (arg3[9]));
  let mut x11: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x11, arg1, (arg2[10]), (arg3[10]));
  let mut x12: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x12, arg1, (arg2[11]), (arg3[11]));
  let mut x13: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x13, arg1, (arg2[12]), (arg3[12]));
  let mut x14: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x14, arg1, (arg2[13]), (arg3[13]));
  let mut x15: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x15, arg1, (arg2[14]), (arg3[14]));
  let mut x16: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x16, arg1, (arg2[15]), (arg3[15]));
  let mut x17: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x17, arg1, (arg2[16]), (arg3[16]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = x9;
  out1[9] = x10;
  out1[10] = x11;
  out1[11] = x12;
  out1[12] = x13;
  out1[13] = x14;
  out1[14] = x15;
  out1[15] = x16;
  out1[16] = x17;
}

/*
 * The function fiat_p521_to_bytes serializes a field element to bytes in little-endian order.
 * Postconditions:
 *   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..65]
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x1]]
 */
#[inline]
pub fn fiat_p521_to_bytes(out1: &mut [u8; 66], arg1: &[u32; 17]) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u31(&mut x1, &mut x2, 0x0, (arg1[0]), 0x7fffffff);
  let mut x3: u32 = 0;
  let mut x4: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u31(&mut x3, &mut x4, x2, (arg1[1]), 0x7fffffff);
  let mut x5: u32 = 0;
  let mut x6: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u30(&mut x5, &mut x6, x4, (arg1[2]), 0x3fffffff);
  let mut x7: u32 = 0;
  let mut x8: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u31(&mut x7, &mut x8, x6, (arg1[3]), 0x7fffffff);
  let mut x9: u32 = 0;
  let mut x10: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u31(&mut x9, &mut x10, x8, (arg1[4]), 0x7fffffff);
  let mut x11: u32 = 0;
  let mut x12: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u30(&mut x11, &mut x12, x10, (arg1[5]), 0x3fffffff);
  let mut x13: u32 = 0;
  let mut x14: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u31(&mut x13, &mut x14, x12, (arg1[6]), 0x7fffffff);
  let mut x15: u32 = 0;
  let mut x16: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u31(&mut x15, &mut x16, x14, (arg1[7]), 0x7fffffff);
  let mut x17: u32 = 0;
  let mut x18: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u30(&mut x17, &mut x18, x16, (arg1[8]), 0x3fffffff);
  let mut x19: u32 = 0;
  let mut x20: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u31(&mut x19, &mut x20, x18, (arg1[9]), 0x7fffffff);
  let mut x21: u32 = 0;
  let mut x22: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u31(&mut x21, &mut x22, x20, (arg1[10]), 0x7fffffff);
  let mut x23: u32 = 0;
  let mut x24: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u30(&mut x23, &mut x24, x22, (arg1[11]), 0x3fffffff);
  let mut x25: u32 = 0;
  let mut x26: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u31(&mut x25, &mut x26, x24, (arg1[12]), 0x7fffffff);
  let mut x27: u32 = 0;
  let mut x28: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u31(&mut x27, &mut x28, x26, (arg1[13]), 0x7fffffff);
  let mut x29: u32 = 0;
  let mut x30: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u30(&mut x29, &mut x30, x28, (arg1[14]), 0x3fffffff);
  let mut x31: u32 = 0;
  let mut x32: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u31(&mut x31, &mut x32, x30, (arg1[15]), 0x7fffffff);
  let mut x33: u32 = 0;
  let mut x34: fiat_p521_u1 = 0;
  fiat_p521_subborrowx_u30(&mut x33, &mut x34, x32, (arg1[16]), 0x3fffffff);
  let mut x35: u32 = 0;
  fiat_p521_cmovznz_u32(&mut x35, x34, (0x0 as u32), 0xffffffff);
  let mut x36: u32 = 0;
  let mut x37: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u31(&mut x36, &mut x37, 0x0, x1, (x35 & 0x7fffffff));
  let mut x38: u32 = 0;
  let mut x39: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u31(&mut x38, &mut x39, x37, x3, (x35 & 0x7fffffff));
  let mut x40: u32 = 0;
  let mut x41: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u30(&mut x40, &mut x41, x39, x5, (x35 & 0x3fffffff));
  let mut x42: u32 = 0;
  let mut x43: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u31(&mut x42, &mut x43, x41, x7, (x35 & 0x7fffffff));
  let mut x44: u32 = 0;
  let mut x45: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u31(&mut x44, &mut x45, x43, x9, (x35 & 0x7fffffff));
  let mut x46: u32 = 0;
  let mut x47: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u30(&mut x46, &mut x47, x45, x11, (x35 & 0x3fffffff));
  let mut x48: u32 = 0;
  let mut x49: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u31(&mut x48, &mut x49, x47, x13, (x35 & 0x7fffffff));
  let mut x50: u32 = 0;
  let mut x51: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u31(&mut x50, &mut x51, x49, x15, (x35 & 0x7fffffff));
  let mut x52: u32 = 0;
  let mut x53: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u30(&mut x52, &mut x53, x51, x17, (x35 & 0x3fffffff));
  let mut x54: u32 = 0;
  let mut x55: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u31(&mut x54, &mut x55, x53, x19, (x35 & 0x7fffffff));
  let mut x56: u32 = 0;
  let mut x57: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u31(&mut x56, &mut x57, x55, x21, (x35 & 0x7fffffff));
  let mut x58: u32 = 0;
  let mut x59: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u30(&mut x58, &mut x59, x57, x23, (x35 & 0x3fffffff));
  let mut x60: u32 = 0;
  let mut x61: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u31(&mut x60, &mut x61, x59, x25, (x35 & 0x7fffffff));
  let mut x62: u32 = 0;
  let mut x63: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u31(&mut x62, &mut x63, x61, x27, (x35 & 0x7fffffff));
  let mut x64: u32 = 0;
  let mut x65: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u30(&mut x64, &mut x65, x63, x29, (x35 & 0x3fffffff));
  let mut x66: u32 = 0;
  let mut x67: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u31(&mut x66, &mut x67, x65, x31, (x35 & 0x7fffffff));
  let mut x68: u32 = 0;
  let mut x69: fiat_p521_u1 = 0;
  fiat_p521_addcarryx_u30(&mut x68, &mut x69, x67, x33, (x35 & 0x3fffffff));
  let x70: u64 = ((x68 as u64) << 3);
  let x71: u64 = ((x66 as u64) << 4);
  let x72: u64 = ((x64 as u64) << 6);
  let x73: u64 = ((x62 as u64) << 7);
  let x74: u32 = (x58 << 2);
  let x75: u64 = ((x56 as u64) << 3);
  let x76: u64 = ((x54 as u64) << 4);
  let x77: u64 = ((x52 as u64) << 6);
  let x78: u64 = ((x50 as u64) << 7);
  let x79: u32 = (x46 << 2);
  let x80: u64 = ((x44 as u64) << 3);
  let x81: u64 = ((x42 as u64) << 4);
  let x82: u64 = ((x40 as u64) << 6);
  let x83: u64 = ((x38 as u64) << 7);
  let x84: u32 = (x36 >> 8);
  let x85: u8 = ((x36 & (0xff as u32)) as u8);
  let x86: u32 = (x84 >> 8);
  let x87: u8 = ((x84 & (0xff as u32)) as u8);
  let x88: u8 = ((x86 >> 8) as u8);
  let x89: u8 = ((x86 & (0xff as u32)) as u8);
  let x90: u64 = ((x88 as u64) + x83);
  let x91: u32 = ((x90 >> 8) as u32);
  let x92: u8 = ((x90 & (0xff as u64)) as u8);
  let x93: u32 = (x91 >> 8);
  let x94: u8 = ((x91 & (0xff as u32)) as u8);
  let x95: u32 = (x93 >> 8);
  let x96: u8 = ((x93 & (0xff as u32)) as u8);
  let x97: u8 = ((x95 >> 8) as u8);
  let x98: u8 = ((x95 & (0xff as u32)) as u8);
  let x99: u64 = ((x97 as u64) + x82);
  let x100: u32 = ((x99 >> 8) as u32);
  let x101: u8 = ((x99 & (0xff as u64)) as u8);
  let x102: u32 = (x100 >> 8);
  let x103: u8 = ((x100 & (0xff as u32)) as u8);
  let x104: u32 = (x102 >> 8);
  let x105: u8 = ((x102 & (0xff as u32)) as u8);
  let x106: u8 = ((x104 >> 8) as u8);
  let x107: u8 = ((x104 & (0xff as u32)) as u8);
  let x108: u64 = ((x106 as u64) + x81);
  let x109: u32 = ((x108 >> 8) as u32);
  let x110: u8 = ((x108 & (0xff as u64)) as u8);
  let x111: u32 = (x109 >> 8);
  let x112: u8 = ((x109 & (0xff as u32)) as u8);
  let x113: u32 = (x111 >> 8);
  let x114: u8 = ((x111 & (0xff as u32)) as u8);
  let x115: u8 = ((x113 >> 8) as u8);
  let x116: u8 = ((x113 & (0xff as u32)) as u8);
  let x117: u64 = ((x115 as u64) + x80);
  let x118: u32 = ((x117 >> 8) as u32);
  let x119: u8 = ((x117 & (0xff as u64)) as u8);
  let x120: u32 = (x118 >> 8);
  let x121: u8 = ((x118 & (0xff as u32)) as u8);
  let x122: u32 = (x120 >> 8);
  let x123: u8 = ((x120 & (0xff as u32)) as u8);
  let x124: u8 = ((x122 >> 8) as u8);
  let x125: u8 = ((x122 & (0xff as u32)) as u8);
  let x126: u32 = ((x124 as u32) + x79);
  let x127: u32 = (x126 >> 8);
  let x128: u8 = ((x126 & (0xff as u32)) as u8);
  let x129: u32 = (x127 >> 8);
  let x130: u8 = ((x127 & (0xff as u32)) as u8);
  let x131: u8 = ((x129 >> 8) as u8);
  let x132: u8 = ((x129 & (0xff as u32)) as u8);
  let x133: u8 = (x131 & 0xff);
  let x134: u32 = (x48 >> 8);
  let x135: u8 = ((x48 & (0xff as u32)) as u8);
  let x136: u32 = (x134 >> 8);
  let x137: u8 = ((x134 & (0xff as u32)) as u8);
  let x138: u8 = ((x136 >> 8) as u8);
  let x139: u8 = ((x136 & (0xff as u32)) as u8);
  let x140: u64 = ((x138 as u64) + x78);
  let x141: u32 = ((x140 >> 8) as u32);
  let x142: u8 = ((x140 & (0xff as u64)) as u8);
  let x143: u32 = (x141 >> 8);
  let x144: u8 = ((x141 & (0xff as u32)) as u8);
  let x145: u32 = (x143 >> 8);
  let x146: u8 = ((x143 & (0xff as u32)) as u8);
  let x147: u8 = ((x145 >> 8) as u8);
  let x148: u8 = ((x145 & (0xff as u32)) as u8);
  let x149: u64 = ((x147 as u64) + x77);
  let x150: u32 = ((x149 >> 8) as u32);
  let x151: u8 = ((x149 & (0xff as u64)) as u8);
  let x152: u32 = (x150 >> 8);
  let x153: u8 = ((x150 & (0xff as u32)) as u8);
  let x154: u32 = (x152 >> 8);
  let x155: u8 = ((x152 & (0xff as u32)) as u8);
  let x156: u8 = ((x154 >> 8) as u8);
  let x157: u8 = ((x154 & (0xff as u32)) as u8);
  let x158: u64 = ((x156 as u64) + x76);
  let x159: u32 = ((x158 >> 8) as u32);
  let x160: u8 = ((x158 & (0xff as u64)) as u8);
  let x161: u32 = (x159 >> 8);
  let x162: u8 = ((x159 & (0xff as u32)) as u8);
  let x163: u32 = (x161 >> 8);
  let x164: u8 = ((x161 & (0xff as u32)) as u8);
  let x165: u8 = ((x163 >> 8) as u8);
  let x166: u8 = ((x163 & (0xff as u32)) as u8);
  let x167: u64 = ((x165 as u64) + x75);
  let x168: u32 = ((x167 >> 8) as u32);
  let x169: u8 = ((x167 & (0xff as u64)) as u8);
  let x170: u32 = (x168 >> 8);
  let x171: u8 = ((x168 & (0xff as u32)) as u8);
  let x172: u32 = (x170 >> 8);
  let x173: u8 = ((x170 & (0xff as u32)) as u8);
  let x174: u8 = ((x172 >> 8) as u8);
  let x175: u8 = ((x172 & (0xff as u32)) as u8);
  let x176: u32 = ((x174 as u32) + x74);
  let x177: u32 = (x176 >> 8);
  let x178: u8 = ((x176 & (0xff as u32)) as u8);
  let x179: u32 = (x177 >> 8);
  let x180: u8 = ((x177 & (0xff as u32)) as u8);
  let x181: u8 = ((x179 >> 8) as u8);
  let x182: u8 = ((x179 & (0xff as u32)) as u8);
  let x183: u8 = (x181 & 0xff);
  let x184: u32 = (x60 >> 8);
  let x185: u8 = ((x60 & (0xff as u32)) as u8);
  let x186: u32 = (x184 >> 8);
  let x187: u8 = ((x184 & (0xff as u32)) as u8);
  let x188: u8 = ((x186 >> 8) as u8);
  let x189: u8 = ((x186 & (0xff as u32)) as u8);
  let x190: u64 = ((x188 as u64) + x73);
  let x191: u32 = ((x190 >> 8) as u32);
  let x192: u8 = ((x190 & (0xff as u64)) as u8);
  let x193: u32 = (x191 >> 8);
  let x194: u8 = ((x191 & (0xff as u32)) as u8);
  let x195: u32 = (x193 >> 8);
  let x196: u8 = ((x193 & (0xff as u32)) as u8);
  let x197: u8 = ((x195 >> 8) as u8);
  let x198: u8 = ((x195 & (0xff as u32)) as u8);
  let x199: u64 = ((x197 as u64) + x72);
  let x200: u32 = ((x199 >> 8) as u32);
  let x201: u8 = ((x199 & (0xff as u64)) as u8);
  let x202: u32 = (x200 >> 8);
  let x203: u8 = ((x200 & (0xff as u32)) as u8);
  let x204: u32 = (x202 >> 8);
  let x205: u8 = ((x202 & (0xff as u32)) as u8);
  let x206: u8 = ((x204 >> 8) as u8);
  let x207: u8 = ((x204 & (0xff as u32)) as u8);
  let x208: u64 = ((x206 as u64) + x71);
  let x209: u32 = ((x208 >> 8) as u32);
  let x210: u8 = ((x208 & (0xff as u64)) as u8);
  let x211: u32 = (x209 >> 8);
  let x212: u8 = ((x209 & (0xff as u32)) as u8);
  let x213: u32 = (x211 >> 8);
  let x214: u8 = ((x211 & (0xff as u32)) as u8);
  let x215: u8 = ((x213 >> 8) as u8);
  let x216: u8 = ((x213 & (0xff as u32)) as u8);
  let x217: u64 = ((x215 as u64) + x70);
  let x218: u32 = ((x217 >> 8) as u32);
  let x219: u8 = ((x217 & (0xff as u64)) as u8);
  let x220: u32 = (x218 >> 8);
  let x221: u8 = ((x218 & (0xff as u32)) as u8);
  let x222: u32 = (x220 >> 8);
  let x223: u8 = ((x220 & (0xff as u32)) as u8);
  let x224: fiat_p521_u1 = ((x222 >> 8) as fiat_p521_u1);
  let x225: u8 = ((x222 & (0xff as u32)) as u8);
  out1[0] = x85;
  out1[1] = x87;
  out1[2] = x89;
  out1[3] = x92;
  out1[4] = x94;
  out1[5] = x96;
  out1[6] = x98;
  out1[7] = x101;
  out1[8] = x103;
  out1[9] = x105;
  out1[10] = x107;
  out1[11] = x110;
  out1[12] = x112;
  out1[13] = x114;
  out1[14] = x116;
  out1[15] = x119;
  out1[16] = x121;
  out1[17] = x123;
  out1[18] = x125;
  out1[19] = x128;
  out1[20] = x130;
  out1[21] = x132;
  out1[22] = x133;
  out1[23] = x135;
  out1[24] = x137;
  out1[25] = x139;
  out1[26] = x142;
  out1[27] = x144;
  out1[28] = x146;
  out1[29] = x148;
  out1[30] = x151;
  out1[31] = x153;
  out1[32] = x155;
  out1[33] = x157;
  out1[34] = x160;
  out1[35] = x162;
  out1[36] = x164;
  out1[37] = x166;
  out1[38] = x169;
  out1[39] = x171;
  out1[40] = x173;
  out1[41] = x175;
  out1[42] = x178;
  out1[43] = x180;
  out1[44] = x182;
  out1[45] = x183;
  out1[46] = x185;
  out1[47] = x187;
  out1[48] = x189;
  out1[49] = x192;
  out1[50] = x194;
  out1[51] = x196;
  out1[52] = x198;
  out1[53] = x201;
  out1[54] = x203;
  out1[55] = x205;
  out1[56] = x207;
  out1[57] = x210;
  out1[58] = x212;
  out1[59] = x214;
  out1[60] = x216;
  out1[61] = x219;
  out1[62] = x221;
  out1[63] = x223;
  out1[64] = x225;
  out1[65] = (x224 as u8);
}

/*
 * The function fiat_p521_from_bytes deserializes a field element from bytes in little-endian order.
 * Postconditions:
 *   eval out1 mod m = bytes_eval arg1 mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0x1]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666], [0x0 ~> 0x8ccccccc], [0x0 ~> 0x46666666]]
 */
#[inline]
pub fn fiat_p521_from_bytes(out1: &mut [u32; 17], arg1: &[u8; 66]) -> () {
  let x1: u32 = ((((arg1[65]) as fiat_p521_u1) as u32) << 29);
  let x2: u32 = (((arg1[64]) as u32) << 21);
  let x3: u32 = (((arg1[63]) as u32) << 13);
  let x4: u32 = (((arg1[62]) as u32) << 5);
  let x5: u64 = (((arg1[61]) as u64) << 28);
  let x6: u32 = (((arg1[60]) as u32) << 20);
  let x7: u32 = (((arg1[59]) as u32) << 12);
  let x8: u32 = (((arg1[58]) as u32) << 4);
  let x9: u64 = (((arg1[57]) as u64) << 26);
  let x10: u32 = (((arg1[56]) as u32) << 18);
  let x11: u32 = (((arg1[55]) as u32) << 10);
  let x12: u32 = (((arg1[54]) as u32) << 2);
  let x13: u64 = (((arg1[53]) as u64) << 25);
  let x14: u32 = (((arg1[52]) as u32) << 17);
  let x15: u32 = (((arg1[51]) as u32) << 9);
  let x16: u32 = (((arg1[50]) as u32) * (0x2 as u32));
  let x17: u32 = (((arg1[49]) as u32) << 24);
  let x18: u32 = (((arg1[48]) as u32) << 16);
  let x19: u32 = (((arg1[47]) as u32) << 8);
  let x20: u8 = (arg1[46]);
  let x21: u32 = (((arg1[45]) as u32) << 22);
  let x22: u32 = (((arg1[44]) as u32) << 14);
  let x23: u32 = (((arg1[43]) as u32) << 6);
  let x24: u64 = (((arg1[42]) as u64) << 29);
  let x25: u32 = (((arg1[41]) as u32) << 21);
  let x26: u32 = (((arg1[40]) as u32) << 13);
  let x27: u32 = (((arg1[39]) as u32) << 5);
  let x28: u64 = (((arg1[38]) as u64) << 28);
  let x29: u32 = (((arg1[37]) as u32) << 20);
  let x30: u32 = (((arg1[36]) as u32) << 12);
  let x31: u32 = (((arg1[35]) as u32) << 4);
  let x32: u64 = (((arg1[34]) as u64) << 26);
  let x33: u32 = (((arg1[33]) as u32) << 18);
  let x34: u32 = (((arg1[32]) as u32) << 10);
  let x35: u32 = (((arg1[31]) as u32) << 2);
  let x36: u64 = (((arg1[30]) as u64) << 25);
  let x37: u32 = (((arg1[29]) as u32) << 17);
  let x38: u32 = (((arg1[28]) as u32) << 9);
  let x39: u32 = (((arg1[27]) as u32) * (0x2 as u32));
  let x40: u32 = (((arg1[26]) as u32) << 24);
  let x41: u32 = (((arg1[25]) as u32) << 16);
  let x42: u32 = (((arg1[24]) as u32) << 8);
  let x43: u8 = (arg1[23]);
  let x44: u32 = (((arg1[22]) as u32) << 22);
  let x45: u32 = (((arg1[21]) as u32) << 14);
  let x46: u32 = (((arg1[20]) as u32) << 6);
  let x47: u64 = (((arg1[19]) as u64) << 29);
  let x48: u32 = (((arg1[18]) as u32) << 21);
  let x49: u32 = (((arg1[17]) as u32) << 13);
  let x50: u32 = (((arg1[16]) as u32) << 5);
  let x51: u64 = (((arg1[15]) as u64) << 28);
  let x52: u32 = (((arg1[14]) as u32) << 20);
  let x53: u32 = (((arg1[13]) as u32) << 12);
  let x54: u32 = (((arg1[12]) as u32) << 4);
  let x55: u64 = (((arg1[11]) as u64) << 26);
  let x56: u32 = (((arg1[10]) as u32) << 18);
  let x57: u32 = (((arg1[9]) as u32) << 10);
  let x58: u32 = (((arg1[8]) as u32) << 2);
  let x59: u64 = (((arg1[7]) as u64) << 25);
  let x60: u32 = (((arg1[6]) as u32) << 17);
  let x61: u32 = (((arg1[5]) as u32) << 9);
  let x62: u32 = (((arg1[4]) as u32) * (0x2 as u32));
  let x63: u32 = (((arg1[3]) as u32) << 24);
  let x64: u32 = (((arg1[2]) as u32) << 16);
  let x65: u32 = (((arg1[1]) as u32) << 8);
  let x66: u8 = (arg1[0]);
  let x67: u32 = ((x66 as u32) + (x65 + (x64 + x63)));
  let x68: fiat_p521_u1 = ((x67 >> 31) as fiat_p521_u1);
  let x69: u32 = (x67 & 0x7fffffff);
  let x70: u32 = (x4 + (x3 + (x2 + x1)));
  let x71: u64 = ((x8 as u64) + ((x7 as u64) + ((x6 as u64) + x5)));
  let x72: u64 = ((x12 as u64) + ((x11 as u64) + ((x10 as u64) + x9)));
  let x73: u64 = ((x16 as u64) + ((x15 as u64) + ((x14 as u64) + x13)));
  let x74: u32 = ((x20 as u32) + (x19 + (x18 + x17)));
  let x75: u32 = (x23 + (x22 + x21));
  let x76: u64 = ((x27 as u64) + ((x26 as u64) + ((x25 as u64) + x24)));
  let x77: u64 = ((x31 as u64) + ((x30 as u64) + ((x29 as u64) + x28)));
  let x78: u64 = ((x35 as u64) + ((x34 as u64) + ((x33 as u64) + x32)));
  let x79: u64 = ((x39 as u64) + ((x38 as u64) + ((x37 as u64) + x36)));
  let x80: u32 = ((x43 as u32) + (x42 + (x41 + x40)));
  let x81: u32 = (x46 + (x45 + x44));
  let x82: u64 = ((x50 as u64) + ((x49 as u64) + ((x48 as u64) + x47)));
  let x83: u64 = ((x54 as u64) + ((x53 as u64) + ((x52 as u64) + x51)));
  let x84: u64 = ((x58 as u64) + ((x57 as u64) + ((x56 as u64) + x55)));
  let x85: u64 = ((x62 as u64) + ((x61 as u64) + ((x60 as u64) + x59)));
  let x86: u64 = ((x68 as u64) + x85);
  let x87: u8 = ((x86 >> 31) as u8);
  let x88: u32 = ((x86 & (0x7fffffff as u64)) as u32);
  let x89: u64 = ((x87 as u64) + x84);
  let x90: u8 = ((x89 >> 30) as u8);
  let x91: u32 = ((x89 & (0x3fffffff as u64)) as u32);
  let x92: u64 = ((x90 as u64) + x83);
  let x93: u8 = ((x92 >> 31) as u8);
  let x94: u32 = ((x92 & (0x7fffffff as u64)) as u32);
  let x95: u64 = ((x93 as u64) + x82);
  let x96: u8 = ((x95 >> 31) as u8);
  let x97: u32 = ((x95 & (0x7fffffff as u64)) as u32);
  let x98: u32 = ((x96 as u32) + x81);
  let x99: u32 = (x98 & 0x3fffffff);
  let x100: fiat_p521_u1 = ((x80 >> 31) as fiat_p521_u1);
  let x101: u32 = (x80 & 0x7fffffff);
  let x102: u64 = ((x100 as u64) + x79);
  let x103: u8 = ((x102 >> 31) as u8);
  let x104: u32 = ((x102 & (0x7fffffff as u64)) as u32);
  let x105: u64 = ((x103 as u64) + x78);
  let x106: u8 = ((x105 >> 30) as u8);
  let x107: u32 = ((x105 & (0x3fffffff as u64)) as u32);
  let x108: u64 = ((x106 as u64) + x77);
  let x109: u8 = ((x108 >> 31) as u8);
  let x110: u32 = ((x108 & (0x7fffffff as u64)) as u32);
  let x111: u64 = ((x109 as u64) + x76);
  let x112: u8 = ((x111 >> 31) as u8);
  let x113: u32 = ((x111 & (0x7fffffff as u64)) as u32);
  let x114: u32 = ((x112 as u32) + x75);
  let x115: u32 = (x114 & 0x3fffffff);
  let x116: fiat_p521_u1 = ((x74 >> 31) as fiat_p521_u1);
  let x117: u32 = (x74 & 0x7fffffff);
  let x118: u64 = ((x116 as u64) + x73);
  let x119: u8 = ((x118 >> 31) as u8);
  let x120: u32 = ((x118 & (0x7fffffff as u64)) as u32);
  let x121: u64 = ((x119 as u64) + x72);
  let x122: u8 = ((x121 >> 30) as u8);
  let x123: u32 = ((x121 & (0x3fffffff as u64)) as u32);
  let x124: u64 = ((x122 as u64) + x71);
  let x125: u8 = ((x124 >> 31) as u8);
  let x126: u32 = ((x124 & (0x7fffffff as u64)) as u32);
  let x127: u32 = ((x125 as u32) + x70);
  out1[0] = x69;
  out1[1] = x88;
  out1[2] = x91;
  out1[3] = x94;
  out1[4] = x97;
  out1[5] = x99;
  out1[6] = x101;
  out1[7] = x104;
  out1[8] = x107;
  out1[9] = x110;
  out1[10] = x113;
  out1[11] = x115;
  out1[12] = x117;
  out1[13] = x120;
  out1[14] = x123;
  out1[15] = x126;
  out1[16] = x127;
}

