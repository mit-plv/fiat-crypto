/* Autogenerated: src/ExtractionOCaml/word_by_word_montgomery --lang=Rust p384 '2^384 - 2^128 - 2^96 + 2^32 - 1' 32 */
/* curve description: p384 */
/* requested operations: (all) */
/* m = 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff (from "2^384 - 2^128 - 2^96 + 2^32 - 1") */
/* machine_wordsize = 32 (from "32") */
/*                                                                    */
/* NOTE: In addition to the bounds specified above each function, all */
/*   functions synthesized for this Montgomery arithmetic require the */
/*   input to be strictly less than the prime modulus (m), and also   */
/*   require the input to be in the unique saturated representation.  */
/*   All functions also ensure that these two properties are true of  */
/*   return values.                                                   */

#![allow(unused_parens)]
#[allow(non_camel_case_types)]

pub type fiat_p384_u1 = u8;
pub type fiat_p384_i1 = i8;
pub type fiat_p384_u2 = u8;
pub type fiat_p384_i2 = i8;


/*
 * The function fiat_p384_addcarryx_u32 is an addition with carry.
 * Postconditions:
 *   out1 = (arg1 + arg2 + arg3) mod 2^32
 *   out2 = ⌊(arg1 + arg2 + arg3) / 2^32⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffff]
 *   arg3: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 *   out2: [0x0 ~> 0x1]
 */
#[inline]
pub fn fiat_p384_addcarryx_u32(out1: &mut u32, out2: &mut fiat_p384_u1, arg1: fiat_p384_u1, arg2: u32, arg3: u32) -> () {
  let x1: u64 = (((arg1 as u64) + (arg2 as u64)) + (arg3 as u64));
  let x2: u32 = ((x1 & (0xffffffff as u64)) as u32);
  let x3: fiat_p384_u1 = ((x1 >> 32) as fiat_p384_u1);
  *out1 = x2;
  *out2 = x3;
}

/*
 * The function fiat_p384_subborrowx_u32 is a subtraction with borrow.
 * Postconditions:
 *   out1 = (-arg1 + arg2 + -arg3) mod 2^32
 *   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^32⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffff]
 *   arg3: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 *   out2: [0x0 ~> 0x1]
 */
#[inline]
pub fn fiat_p384_subborrowx_u32(out1: &mut u32, out2: &mut fiat_p384_u1, arg1: fiat_p384_u1, arg2: u32, arg3: u32) -> () {
  let x1: i64 = (((arg2 as i64) - (arg1 as i64)) - (arg3 as i64));
  let x2: fiat_p384_i1 = ((x1 >> 32) as fiat_p384_i1);
  let x3: u32 = ((x1 & (0xffffffff as i64)) as u32);
  *out1 = x3;
  *out2 = (((0x0 as fiat_p384_i2) - (x2 as fiat_p384_i2)) as fiat_p384_u1);
}

/*
 * The function fiat_p384_mulx_u32 is a multiplication, returning the full double-width result.
 * Postconditions:
 *   out1 = (arg1 * arg2) mod 2^32
 *   out2 = ⌊arg1 * arg2 / 2^32⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0xffffffff]
 *   arg2: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 *   out2: [0x0 ~> 0xffffffff]
 */
#[inline]
pub fn fiat_p384_mulx_u32(out1: &mut u32, out2: &mut u32, arg1: u32, arg2: u32) -> () {
  let x1: u64 = ((arg1 as u64) * (arg2 as u64));
  let x2: u32 = ((x1 & (0xffffffff as u64)) as u32);
  let x3: u32 = ((x1 >> 32) as u32);
  *out1 = x2;
  *out2 = x3;
}

/*
 * The function fiat_p384_cmovznz_u32 is a single-word conditional move.
 * Postconditions:
 *   out1 = (if arg1 = 0 then arg2 else arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffff]
 *   arg3: [0x0 ~> 0xffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 */
#[inline]
pub fn fiat_p384_cmovznz_u32(out1: &mut u32, arg1: fiat_p384_u1, arg2: u32, arg3: u32) -> () {
  let x1: fiat_p384_u1 = (!(!arg1));
  let x2: u32 = ((((((0x0 as fiat_p384_i2) - (x1 as fiat_p384_i2)) as fiat_p384_i1) as i64) & (0xffffffff as i64)) as u32);
  let x3: u32 = ((x2 & arg3) | ((!x2) & arg2));
  *out1 = x3;
}

/*
 * The function fiat_p384_mul multiplies two field elements in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 *   0 ≤ eval arg2 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg2)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p384_mul(out1: &mut [u32; 12], arg1: &[u32; 12], arg2: &[u32; 12]) -> () {
  let x1: u32 = (arg1[1]);
  let x2: u32 = (arg1[2]);
  let x3: u32 = (arg1[3]);
  let x4: u32 = (arg1[4]);
  let x5: u32 = (arg1[5]);
  let x6: u32 = (arg1[6]);
  let x7: u32 = (arg1[7]);
  let x8: u32 = (arg1[8]);
  let x9: u32 = (arg1[9]);
  let x10: u32 = (arg1[10]);
  let x11: u32 = (arg1[11]);
  let x12: u32 = (arg1[0]);
  let mut x13: u32 = 0;
  let mut x14: u32 = 0;
  fiat_p384_mulx_u32(&mut x13, &mut x14, x12, (arg2[11]));
  let mut x15: u32 = 0;
  let mut x16: u32 = 0;
  fiat_p384_mulx_u32(&mut x15, &mut x16, x12, (arg2[10]));
  let mut x17: u32 = 0;
  let mut x18: u32 = 0;
  fiat_p384_mulx_u32(&mut x17, &mut x18, x12, (arg2[9]));
  let mut x19: u32 = 0;
  let mut x20: u32 = 0;
  fiat_p384_mulx_u32(&mut x19, &mut x20, x12, (arg2[8]));
  let mut x21: u32 = 0;
  let mut x22: u32 = 0;
  fiat_p384_mulx_u32(&mut x21, &mut x22, x12, (arg2[7]));
  let mut x23: u32 = 0;
  let mut x24: u32 = 0;
  fiat_p384_mulx_u32(&mut x23, &mut x24, x12, (arg2[6]));
  let mut x25: u32 = 0;
  let mut x26: u32 = 0;
  fiat_p384_mulx_u32(&mut x25, &mut x26, x12, (arg2[5]));
  let mut x27: u32 = 0;
  let mut x28: u32 = 0;
  fiat_p384_mulx_u32(&mut x27, &mut x28, x12, (arg2[4]));
  let mut x29: u32 = 0;
  let mut x30: u32 = 0;
  fiat_p384_mulx_u32(&mut x29, &mut x30, x12, (arg2[3]));
  let mut x31: u32 = 0;
  let mut x32: u32 = 0;
  fiat_p384_mulx_u32(&mut x31, &mut x32, x12, (arg2[2]));
  let mut x33: u32 = 0;
  let mut x34: u32 = 0;
  fiat_p384_mulx_u32(&mut x33, &mut x34, x12, (arg2[1]));
  let mut x35: u32 = 0;
  let mut x36: u32 = 0;
  fiat_p384_mulx_u32(&mut x35, &mut x36, x12, (arg2[0]));
  let mut x37: u32 = 0;
  let mut x38: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x37, &mut x38, 0x0, x36, x33);
  let mut x39: u32 = 0;
  let mut x40: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x39, &mut x40, x38, x34, x31);
  let mut x41: u32 = 0;
  let mut x42: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x41, &mut x42, x40, x32, x29);
  let mut x43: u32 = 0;
  let mut x44: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x43, &mut x44, x42, x30, x27);
  let mut x45: u32 = 0;
  let mut x46: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x45, &mut x46, x44, x28, x25);
  let mut x47: u32 = 0;
  let mut x48: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x47, &mut x48, x46, x26, x23);
  let mut x49: u32 = 0;
  let mut x50: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x49, &mut x50, x48, x24, x21);
  let mut x51: u32 = 0;
  let mut x52: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x51, &mut x52, x50, x22, x19);
  let mut x53: u32 = 0;
  let mut x54: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x53, &mut x54, x52, x20, x17);
  let mut x55: u32 = 0;
  let mut x56: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x55, &mut x56, x54, x18, x15);
  let mut x57: u32 = 0;
  let mut x58: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x57, &mut x58, x56, x16, x13);
  let mut x59: u32 = 0;
  let mut x60: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x59, &mut x60, x58, x14, (0x0 as u32));
  let mut x61: u32 = 0;
  let mut x62: u32 = 0;
  fiat_p384_mulx_u32(&mut x61, &mut x62, x35, 0xffffffff);
  let mut x63: u32 = 0;
  let mut x64: u32 = 0;
  fiat_p384_mulx_u32(&mut x63, &mut x64, x35, 0xffffffff);
  let mut x65: u32 = 0;
  let mut x66: u32 = 0;
  fiat_p384_mulx_u32(&mut x65, &mut x66, x35, 0xffffffff);
  let mut x67: u32 = 0;
  let mut x68: u32 = 0;
  fiat_p384_mulx_u32(&mut x67, &mut x68, x35, 0xffffffff);
  let mut x69: u32 = 0;
  let mut x70: u32 = 0;
  fiat_p384_mulx_u32(&mut x69, &mut x70, x35, 0xffffffff);
  let mut x71: u32 = 0;
  let mut x72: u32 = 0;
  fiat_p384_mulx_u32(&mut x71, &mut x72, x35, 0xffffffff);
  let mut x73: u32 = 0;
  let mut x74: u32 = 0;
  fiat_p384_mulx_u32(&mut x73, &mut x74, x35, 0xffffffff);
  let mut x75: u32 = 0;
  let mut x76: u32 = 0;
  fiat_p384_mulx_u32(&mut x75, &mut x76, x35, 0xfffffffe);
  let mut x77: u32 = 0;
  let mut x78: u32 = 0;
  fiat_p384_mulx_u32(&mut x77, &mut x78, x35, 0xffffffff);
  let mut x79: u32 = 0;
  let mut x80: u32 = 0;
  fiat_p384_mulx_u32(&mut x79, &mut x80, x35, 0xffffffff);
  let mut x81: u32 = 0;
  let mut x82: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x81, &mut x82, 0x0, x78, x75);
  let mut x83: u32 = 0;
  let mut x84: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x83, &mut x84, x82, x76, x73);
  let mut x85: u32 = 0;
  let mut x86: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x85, &mut x86, x84, x74, x71);
  let mut x87: u32 = 0;
  let mut x88: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x87, &mut x88, x86, x72, x69);
  let mut x89: u32 = 0;
  let mut x90: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x89, &mut x90, x88, x70, x67);
  let mut x91: u32 = 0;
  let mut x92: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x91, &mut x92, x90, x68, x65);
  let mut x93: u32 = 0;
  let mut x94: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x93, &mut x94, x92, x66, x63);
  let mut x95: u32 = 0;
  let mut x96: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x95, &mut x96, x94, x64, x61);
  let mut x97: u32 = 0;
  let mut x98: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x97, &mut x98, x96, x62, (0x0 as u32));
  let mut x99: u32 = 0;
  let mut x100: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x99, &mut x100, 0x0, x35, x79);
  let mut x101: u32 = 0;
  let mut x102: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x101, &mut x102, x100, x37, x80);
  let mut x103: u32 = 0;
  let mut x104: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x103, &mut x104, x102, x39, (0x0 as u32));
  let mut x105: u32 = 0;
  let mut x106: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x105, &mut x106, x104, x41, x77);
  let mut x107: u32 = 0;
  let mut x108: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x107, &mut x108, x106, x43, x81);
  let mut x109: u32 = 0;
  let mut x110: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x109, &mut x110, x108, x45, x83);
  let mut x111: u32 = 0;
  let mut x112: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x111, &mut x112, x110, x47, x85);
  let mut x113: u32 = 0;
  let mut x114: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x113, &mut x114, x112, x49, x87);
  let mut x115: u32 = 0;
  let mut x116: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x115, &mut x116, x114, x51, x89);
  let mut x117: u32 = 0;
  let mut x118: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x117, &mut x118, x116, x53, x91);
  let mut x119: u32 = 0;
  let mut x120: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x119, &mut x120, x118, x55, x93);
  let mut x121: u32 = 0;
  let mut x122: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x121, &mut x122, x120, x57, x95);
  let mut x123: u32 = 0;
  let mut x124: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x123, &mut x124, x122, x59, x97);
  let mut x125: u32 = 0;
  let mut x126: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x125, &mut x126, x124, (0x0 as u32), (0x0 as u32));
  let mut x127: u32 = 0;
  let mut x128: u32 = 0;
  fiat_p384_mulx_u32(&mut x127, &mut x128, x1, (arg2[11]));
  let mut x129: u32 = 0;
  let mut x130: u32 = 0;
  fiat_p384_mulx_u32(&mut x129, &mut x130, x1, (arg2[10]));
  let mut x131: u32 = 0;
  let mut x132: u32 = 0;
  fiat_p384_mulx_u32(&mut x131, &mut x132, x1, (arg2[9]));
  let mut x133: u32 = 0;
  let mut x134: u32 = 0;
  fiat_p384_mulx_u32(&mut x133, &mut x134, x1, (arg2[8]));
  let mut x135: u32 = 0;
  let mut x136: u32 = 0;
  fiat_p384_mulx_u32(&mut x135, &mut x136, x1, (arg2[7]));
  let mut x137: u32 = 0;
  let mut x138: u32 = 0;
  fiat_p384_mulx_u32(&mut x137, &mut x138, x1, (arg2[6]));
  let mut x139: u32 = 0;
  let mut x140: u32 = 0;
  fiat_p384_mulx_u32(&mut x139, &mut x140, x1, (arg2[5]));
  let mut x141: u32 = 0;
  let mut x142: u32 = 0;
  fiat_p384_mulx_u32(&mut x141, &mut x142, x1, (arg2[4]));
  let mut x143: u32 = 0;
  let mut x144: u32 = 0;
  fiat_p384_mulx_u32(&mut x143, &mut x144, x1, (arg2[3]));
  let mut x145: u32 = 0;
  let mut x146: u32 = 0;
  fiat_p384_mulx_u32(&mut x145, &mut x146, x1, (arg2[2]));
  let mut x147: u32 = 0;
  let mut x148: u32 = 0;
  fiat_p384_mulx_u32(&mut x147, &mut x148, x1, (arg2[1]));
  let mut x149: u32 = 0;
  let mut x150: u32 = 0;
  fiat_p384_mulx_u32(&mut x149, &mut x150, x1, (arg2[0]));
  let mut x151: u32 = 0;
  let mut x152: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x151, &mut x152, 0x0, x150, x147);
  let mut x153: u32 = 0;
  let mut x154: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x153, &mut x154, x152, x148, x145);
  let mut x155: u32 = 0;
  let mut x156: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x155, &mut x156, x154, x146, x143);
  let mut x157: u32 = 0;
  let mut x158: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x157, &mut x158, x156, x144, x141);
  let mut x159: u32 = 0;
  let mut x160: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x159, &mut x160, x158, x142, x139);
  let mut x161: u32 = 0;
  let mut x162: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x161, &mut x162, x160, x140, x137);
  let mut x163: u32 = 0;
  let mut x164: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x163, &mut x164, x162, x138, x135);
  let mut x165: u32 = 0;
  let mut x166: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x165, &mut x166, x164, x136, x133);
  let mut x167: u32 = 0;
  let mut x168: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x167, &mut x168, x166, x134, x131);
  let mut x169: u32 = 0;
  let mut x170: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x169, &mut x170, x168, x132, x129);
  let mut x171: u32 = 0;
  let mut x172: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x171, &mut x172, x170, x130, x127);
  let mut x173: u32 = 0;
  let mut x174: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x173, &mut x174, x172, x128, (0x0 as u32));
  let mut x175: u32 = 0;
  let mut x176: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x175, &mut x176, 0x0, x101, x149);
  let mut x177: u32 = 0;
  let mut x178: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x177, &mut x178, x176, x103, x151);
  let mut x179: u32 = 0;
  let mut x180: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x179, &mut x180, x178, x105, x153);
  let mut x181: u32 = 0;
  let mut x182: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x181, &mut x182, x180, x107, x155);
  let mut x183: u32 = 0;
  let mut x184: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x183, &mut x184, x182, x109, x157);
  let mut x185: u32 = 0;
  let mut x186: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x185, &mut x186, x184, x111, x159);
  let mut x187: u32 = 0;
  let mut x188: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x187, &mut x188, x186, x113, x161);
  let mut x189: u32 = 0;
  let mut x190: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x189, &mut x190, x188, x115, x163);
  let mut x191: u32 = 0;
  let mut x192: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x191, &mut x192, x190, x117, x165);
  let mut x193: u32 = 0;
  let mut x194: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x193, &mut x194, x192, x119, x167);
  let mut x195: u32 = 0;
  let mut x196: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x195, &mut x196, x194, x121, x169);
  let mut x197: u32 = 0;
  let mut x198: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x197, &mut x198, x196, x123, x171);
  let mut x199: u32 = 0;
  let mut x200: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x199, &mut x200, x198, ((x125 as fiat_p384_u1) as u32), x173);
  let mut x201: u32 = 0;
  let mut x202: u32 = 0;
  fiat_p384_mulx_u32(&mut x201, &mut x202, x175, 0xffffffff);
  let mut x203: u32 = 0;
  let mut x204: u32 = 0;
  fiat_p384_mulx_u32(&mut x203, &mut x204, x175, 0xffffffff);
  let mut x205: u32 = 0;
  let mut x206: u32 = 0;
  fiat_p384_mulx_u32(&mut x205, &mut x206, x175, 0xffffffff);
  let mut x207: u32 = 0;
  let mut x208: u32 = 0;
  fiat_p384_mulx_u32(&mut x207, &mut x208, x175, 0xffffffff);
  let mut x209: u32 = 0;
  let mut x210: u32 = 0;
  fiat_p384_mulx_u32(&mut x209, &mut x210, x175, 0xffffffff);
  let mut x211: u32 = 0;
  let mut x212: u32 = 0;
  fiat_p384_mulx_u32(&mut x211, &mut x212, x175, 0xffffffff);
  let mut x213: u32 = 0;
  let mut x214: u32 = 0;
  fiat_p384_mulx_u32(&mut x213, &mut x214, x175, 0xffffffff);
  let mut x215: u32 = 0;
  let mut x216: u32 = 0;
  fiat_p384_mulx_u32(&mut x215, &mut x216, x175, 0xfffffffe);
  let mut x217: u32 = 0;
  let mut x218: u32 = 0;
  fiat_p384_mulx_u32(&mut x217, &mut x218, x175, 0xffffffff);
  let mut x219: u32 = 0;
  let mut x220: u32 = 0;
  fiat_p384_mulx_u32(&mut x219, &mut x220, x175, 0xffffffff);
  let mut x221: u32 = 0;
  let mut x222: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x221, &mut x222, 0x0, x218, x215);
  let mut x223: u32 = 0;
  let mut x224: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x223, &mut x224, x222, x216, x213);
  let mut x225: u32 = 0;
  let mut x226: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x225, &mut x226, x224, x214, x211);
  let mut x227: u32 = 0;
  let mut x228: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x227, &mut x228, x226, x212, x209);
  let mut x229: u32 = 0;
  let mut x230: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x229, &mut x230, x228, x210, x207);
  let mut x231: u32 = 0;
  let mut x232: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x231, &mut x232, x230, x208, x205);
  let mut x233: u32 = 0;
  let mut x234: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x233, &mut x234, x232, x206, x203);
  let mut x235: u32 = 0;
  let mut x236: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x235, &mut x236, x234, x204, x201);
  let mut x237: u32 = 0;
  let mut x238: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x237, &mut x238, x236, x202, (0x0 as u32));
  let mut x239: u32 = 0;
  let mut x240: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x239, &mut x240, 0x0, x175, x219);
  let mut x241: u32 = 0;
  let mut x242: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x241, &mut x242, x240, x177, x220);
  let mut x243: u32 = 0;
  let mut x244: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x243, &mut x244, x242, x179, (0x0 as u32));
  let mut x245: u32 = 0;
  let mut x246: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x245, &mut x246, x244, x181, x217);
  let mut x247: u32 = 0;
  let mut x248: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x247, &mut x248, x246, x183, x221);
  let mut x249: u32 = 0;
  let mut x250: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x249, &mut x250, x248, x185, x223);
  let mut x251: u32 = 0;
  let mut x252: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x251, &mut x252, x250, x187, x225);
  let mut x253: u32 = 0;
  let mut x254: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x253, &mut x254, x252, x189, x227);
  let mut x255: u32 = 0;
  let mut x256: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x255, &mut x256, x254, x191, x229);
  let mut x257: u32 = 0;
  let mut x258: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x257, &mut x258, x256, x193, x231);
  let mut x259: u32 = 0;
  let mut x260: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x259, &mut x260, x258, x195, x233);
  let mut x261: u32 = 0;
  let mut x262: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x261, &mut x262, x260, x197, x235);
  let mut x263: u32 = 0;
  let mut x264: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x263, &mut x264, x262, x199, x237);
  let mut x265: u32 = 0;
  let mut x266: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x265, &mut x266, x264, (x200 as u32), (0x0 as u32));
  let mut x267: u32 = 0;
  let mut x268: u32 = 0;
  fiat_p384_mulx_u32(&mut x267, &mut x268, x2, (arg2[11]));
  let mut x269: u32 = 0;
  let mut x270: u32 = 0;
  fiat_p384_mulx_u32(&mut x269, &mut x270, x2, (arg2[10]));
  let mut x271: u32 = 0;
  let mut x272: u32 = 0;
  fiat_p384_mulx_u32(&mut x271, &mut x272, x2, (arg2[9]));
  let mut x273: u32 = 0;
  let mut x274: u32 = 0;
  fiat_p384_mulx_u32(&mut x273, &mut x274, x2, (arg2[8]));
  let mut x275: u32 = 0;
  let mut x276: u32 = 0;
  fiat_p384_mulx_u32(&mut x275, &mut x276, x2, (arg2[7]));
  let mut x277: u32 = 0;
  let mut x278: u32 = 0;
  fiat_p384_mulx_u32(&mut x277, &mut x278, x2, (arg2[6]));
  let mut x279: u32 = 0;
  let mut x280: u32 = 0;
  fiat_p384_mulx_u32(&mut x279, &mut x280, x2, (arg2[5]));
  let mut x281: u32 = 0;
  let mut x282: u32 = 0;
  fiat_p384_mulx_u32(&mut x281, &mut x282, x2, (arg2[4]));
  let mut x283: u32 = 0;
  let mut x284: u32 = 0;
  fiat_p384_mulx_u32(&mut x283, &mut x284, x2, (arg2[3]));
  let mut x285: u32 = 0;
  let mut x286: u32 = 0;
  fiat_p384_mulx_u32(&mut x285, &mut x286, x2, (arg2[2]));
  let mut x287: u32 = 0;
  let mut x288: u32 = 0;
  fiat_p384_mulx_u32(&mut x287, &mut x288, x2, (arg2[1]));
  let mut x289: u32 = 0;
  let mut x290: u32 = 0;
  fiat_p384_mulx_u32(&mut x289, &mut x290, x2, (arg2[0]));
  let mut x291: u32 = 0;
  let mut x292: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x291, &mut x292, 0x0, x290, x287);
  let mut x293: u32 = 0;
  let mut x294: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x293, &mut x294, x292, x288, x285);
  let mut x295: u32 = 0;
  let mut x296: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x295, &mut x296, x294, x286, x283);
  let mut x297: u32 = 0;
  let mut x298: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x297, &mut x298, x296, x284, x281);
  let mut x299: u32 = 0;
  let mut x300: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x299, &mut x300, x298, x282, x279);
  let mut x301: u32 = 0;
  let mut x302: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x301, &mut x302, x300, x280, x277);
  let mut x303: u32 = 0;
  let mut x304: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x303, &mut x304, x302, x278, x275);
  let mut x305: u32 = 0;
  let mut x306: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x305, &mut x306, x304, x276, x273);
  let mut x307: u32 = 0;
  let mut x308: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x307, &mut x308, x306, x274, x271);
  let mut x309: u32 = 0;
  let mut x310: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x309, &mut x310, x308, x272, x269);
  let mut x311: u32 = 0;
  let mut x312: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x311, &mut x312, x310, x270, x267);
  let mut x313: u32 = 0;
  let mut x314: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x313, &mut x314, x312, x268, (0x0 as u32));
  let mut x315: u32 = 0;
  let mut x316: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x315, &mut x316, 0x0, x241, x289);
  let mut x317: u32 = 0;
  let mut x318: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x317, &mut x318, x316, x243, x291);
  let mut x319: u32 = 0;
  let mut x320: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x319, &mut x320, x318, x245, x293);
  let mut x321: u32 = 0;
  let mut x322: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x321, &mut x322, x320, x247, x295);
  let mut x323: u32 = 0;
  let mut x324: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x323, &mut x324, x322, x249, x297);
  let mut x325: u32 = 0;
  let mut x326: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x325, &mut x326, x324, x251, x299);
  let mut x327: u32 = 0;
  let mut x328: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x327, &mut x328, x326, x253, x301);
  let mut x329: u32 = 0;
  let mut x330: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x329, &mut x330, x328, x255, x303);
  let mut x331: u32 = 0;
  let mut x332: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x331, &mut x332, x330, x257, x305);
  let mut x333: u32 = 0;
  let mut x334: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x333, &mut x334, x332, x259, x307);
  let mut x335: u32 = 0;
  let mut x336: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x335, &mut x336, x334, x261, x309);
  let mut x337: u32 = 0;
  let mut x338: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x337, &mut x338, x336, x263, x311);
  let mut x339: u32 = 0;
  let mut x340: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x339, &mut x340, x338, x265, x313);
  let mut x341: u32 = 0;
  let mut x342: u32 = 0;
  fiat_p384_mulx_u32(&mut x341, &mut x342, x315, 0xffffffff);
  let mut x343: u32 = 0;
  let mut x344: u32 = 0;
  fiat_p384_mulx_u32(&mut x343, &mut x344, x315, 0xffffffff);
  let mut x345: u32 = 0;
  let mut x346: u32 = 0;
  fiat_p384_mulx_u32(&mut x345, &mut x346, x315, 0xffffffff);
  let mut x347: u32 = 0;
  let mut x348: u32 = 0;
  fiat_p384_mulx_u32(&mut x347, &mut x348, x315, 0xffffffff);
  let mut x349: u32 = 0;
  let mut x350: u32 = 0;
  fiat_p384_mulx_u32(&mut x349, &mut x350, x315, 0xffffffff);
  let mut x351: u32 = 0;
  let mut x352: u32 = 0;
  fiat_p384_mulx_u32(&mut x351, &mut x352, x315, 0xffffffff);
  let mut x353: u32 = 0;
  let mut x354: u32 = 0;
  fiat_p384_mulx_u32(&mut x353, &mut x354, x315, 0xffffffff);
  let mut x355: u32 = 0;
  let mut x356: u32 = 0;
  fiat_p384_mulx_u32(&mut x355, &mut x356, x315, 0xfffffffe);
  let mut x357: u32 = 0;
  let mut x358: u32 = 0;
  fiat_p384_mulx_u32(&mut x357, &mut x358, x315, 0xffffffff);
  let mut x359: u32 = 0;
  let mut x360: u32 = 0;
  fiat_p384_mulx_u32(&mut x359, &mut x360, x315, 0xffffffff);
  let mut x361: u32 = 0;
  let mut x362: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x361, &mut x362, 0x0, x358, x355);
  let mut x363: u32 = 0;
  let mut x364: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x363, &mut x364, x362, x356, x353);
  let mut x365: u32 = 0;
  let mut x366: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x365, &mut x366, x364, x354, x351);
  let mut x367: u32 = 0;
  let mut x368: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x367, &mut x368, x366, x352, x349);
  let mut x369: u32 = 0;
  let mut x370: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x369, &mut x370, x368, x350, x347);
  let mut x371: u32 = 0;
  let mut x372: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x371, &mut x372, x370, x348, x345);
  let mut x373: u32 = 0;
  let mut x374: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x373, &mut x374, x372, x346, x343);
  let mut x375: u32 = 0;
  let mut x376: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x375, &mut x376, x374, x344, x341);
  let mut x377: u32 = 0;
  let mut x378: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x377, &mut x378, x376, x342, (0x0 as u32));
  let mut x379: u32 = 0;
  let mut x380: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x379, &mut x380, 0x0, x315, x359);
  let mut x381: u32 = 0;
  let mut x382: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x381, &mut x382, x380, x317, x360);
  let mut x383: u32 = 0;
  let mut x384: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x383, &mut x384, x382, x319, (0x0 as u32));
  let mut x385: u32 = 0;
  let mut x386: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x385, &mut x386, x384, x321, x357);
  let mut x387: u32 = 0;
  let mut x388: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x387, &mut x388, x386, x323, x361);
  let mut x389: u32 = 0;
  let mut x390: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x389, &mut x390, x388, x325, x363);
  let mut x391: u32 = 0;
  let mut x392: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x391, &mut x392, x390, x327, x365);
  let mut x393: u32 = 0;
  let mut x394: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x393, &mut x394, x392, x329, x367);
  let mut x395: u32 = 0;
  let mut x396: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x395, &mut x396, x394, x331, x369);
  let mut x397: u32 = 0;
  let mut x398: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x397, &mut x398, x396, x333, x371);
  let mut x399: u32 = 0;
  let mut x400: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x399, &mut x400, x398, x335, x373);
  let mut x401: u32 = 0;
  let mut x402: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x401, &mut x402, x400, x337, x375);
  let mut x403: u32 = 0;
  let mut x404: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x403, &mut x404, x402, x339, x377);
  let mut x405: u32 = 0;
  let mut x406: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x405, &mut x406, x404, (x340 as u32), (0x0 as u32));
  let mut x407: u32 = 0;
  let mut x408: u32 = 0;
  fiat_p384_mulx_u32(&mut x407, &mut x408, x3, (arg2[11]));
  let mut x409: u32 = 0;
  let mut x410: u32 = 0;
  fiat_p384_mulx_u32(&mut x409, &mut x410, x3, (arg2[10]));
  let mut x411: u32 = 0;
  let mut x412: u32 = 0;
  fiat_p384_mulx_u32(&mut x411, &mut x412, x3, (arg2[9]));
  let mut x413: u32 = 0;
  let mut x414: u32 = 0;
  fiat_p384_mulx_u32(&mut x413, &mut x414, x3, (arg2[8]));
  let mut x415: u32 = 0;
  let mut x416: u32 = 0;
  fiat_p384_mulx_u32(&mut x415, &mut x416, x3, (arg2[7]));
  let mut x417: u32 = 0;
  let mut x418: u32 = 0;
  fiat_p384_mulx_u32(&mut x417, &mut x418, x3, (arg2[6]));
  let mut x419: u32 = 0;
  let mut x420: u32 = 0;
  fiat_p384_mulx_u32(&mut x419, &mut x420, x3, (arg2[5]));
  let mut x421: u32 = 0;
  let mut x422: u32 = 0;
  fiat_p384_mulx_u32(&mut x421, &mut x422, x3, (arg2[4]));
  let mut x423: u32 = 0;
  let mut x424: u32 = 0;
  fiat_p384_mulx_u32(&mut x423, &mut x424, x3, (arg2[3]));
  let mut x425: u32 = 0;
  let mut x426: u32 = 0;
  fiat_p384_mulx_u32(&mut x425, &mut x426, x3, (arg2[2]));
  let mut x427: u32 = 0;
  let mut x428: u32 = 0;
  fiat_p384_mulx_u32(&mut x427, &mut x428, x3, (arg2[1]));
  let mut x429: u32 = 0;
  let mut x430: u32 = 0;
  fiat_p384_mulx_u32(&mut x429, &mut x430, x3, (arg2[0]));
  let mut x431: u32 = 0;
  let mut x432: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x431, &mut x432, 0x0, x430, x427);
  let mut x433: u32 = 0;
  let mut x434: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x433, &mut x434, x432, x428, x425);
  let mut x435: u32 = 0;
  let mut x436: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x435, &mut x436, x434, x426, x423);
  let mut x437: u32 = 0;
  let mut x438: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x437, &mut x438, x436, x424, x421);
  let mut x439: u32 = 0;
  let mut x440: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x439, &mut x440, x438, x422, x419);
  let mut x441: u32 = 0;
  let mut x442: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x441, &mut x442, x440, x420, x417);
  let mut x443: u32 = 0;
  let mut x444: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x443, &mut x444, x442, x418, x415);
  let mut x445: u32 = 0;
  let mut x446: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x445, &mut x446, x444, x416, x413);
  let mut x447: u32 = 0;
  let mut x448: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x447, &mut x448, x446, x414, x411);
  let mut x449: u32 = 0;
  let mut x450: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x449, &mut x450, x448, x412, x409);
  let mut x451: u32 = 0;
  let mut x452: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x451, &mut x452, x450, x410, x407);
  let mut x453: u32 = 0;
  let mut x454: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x453, &mut x454, x452, x408, (0x0 as u32));
  let mut x455: u32 = 0;
  let mut x456: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x455, &mut x456, 0x0, x381, x429);
  let mut x457: u32 = 0;
  let mut x458: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x457, &mut x458, x456, x383, x431);
  let mut x459: u32 = 0;
  let mut x460: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x459, &mut x460, x458, x385, x433);
  let mut x461: u32 = 0;
  let mut x462: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x461, &mut x462, x460, x387, x435);
  let mut x463: u32 = 0;
  let mut x464: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x463, &mut x464, x462, x389, x437);
  let mut x465: u32 = 0;
  let mut x466: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x465, &mut x466, x464, x391, x439);
  let mut x467: u32 = 0;
  let mut x468: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x467, &mut x468, x466, x393, x441);
  let mut x469: u32 = 0;
  let mut x470: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x469, &mut x470, x468, x395, x443);
  let mut x471: u32 = 0;
  let mut x472: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x471, &mut x472, x470, x397, x445);
  let mut x473: u32 = 0;
  let mut x474: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x473, &mut x474, x472, x399, x447);
  let mut x475: u32 = 0;
  let mut x476: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x475, &mut x476, x474, x401, x449);
  let mut x477: u32 = 0;
  let mut x478: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x477, &mut x478, x476, x403, x451);
  let mut x479: u32 = 0;
  let mut x480: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x479, &mut x480, x478, x405, x453);
  let mut x481: u32 = 0;
  let mut x482: u32 = 0;
  fiat_p384_mulx_u32(&mut x481, &mut x482, x455, 0xffffffff);
  let mut x483: u32 = 0;
  let mut x484: u32 = 0;
  fiat_p384_mulx_u32(&mut x483, &mut x484, x455, 0xffffffff);
  let mut x485: u32 = 0;
  let mut x486: u32 = 0;
  fiat_p384_mulx_u32(&mut x485, &mut x486, x455, 0xffffffff);
  let mut x487: u32 = 0;
  let mut x488: u32 = 0;
  fiat_p384_mulx_u32(&mut x487, &mut x488, x455, 0xffffffff);
  let mut x489: u32 = 0;
  let mut x490: u32 = 0;
  fiat_p384_mulx_u32(&mut x489, &mut x490, x455, 0xffffffff);
  let mut x491: u32 = 0;
  let mut x492: u32 = 0;
  fiat_p384_mulx_u32(&mut x491, &mut x492, x455, 0xffffffff);
  let mut x493: u32 = 0;
  let mut x494: u32 = 0;
  fiat_p384_mulx_u32(&mut x493, &mut x494, x455, 0xffffffff);
  let mut x495: u32 = 0;
  let mut x496: u32 = 0;
  fiat_p384_mulx_u32(&mut x495, &mut x496, x455, 0xfffffffe);
  let mut x497: u32 = 0;
  let mut x498: u32 = 0;
  fiat_p384_mulx_u32(&mut x497, &mut x498, x455, 0xffffffff);
  let mut x499: u32 = 0;
  let mut x500: u32 = 0;
  fiat_p384_mulx_u32(&mut x499, &mut x500, x455, 0xffffffff);
  let mut x501: u32 = 0;
  let mut x502: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x501, &mut x502, 0x0, x498, x495);
  let mut x503: u32 = 0;
  let mut x504: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x503, &mut x504, x502, x496, x493);
  let mut x505: u32 = 0;
  let mut x506: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x505, &mut x506, x504, x494, x491);
  let mut x507: u32 = 0;
  let mut x508: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x507, &mut x508, x506, x492, x489);
  let mut x509: u32 = 0;
  let mut x510: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x509, &mut x510, x508, x490, x487);
  let mut x511: u32 = 0;
  let mut x512: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x511, &mut x512, x510, x488, x485);
  let mut x513: u32 = 0;
  let mut x514: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x513, &mut x514, x512, x486, x483);
  let mut x515: u32 = 0;
  let mut x516: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x515, &mut x516, x514, x484, x481);
  let mut x517: u32 = 0;
  let mut x518: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x517, &mut x518, x516, x482, (0x0 as u32));
  let mut x519: u32 = 0;
  let mut x520: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x519, &mut x520, 0x0, x455, x499);
  let mut x521: u32 = 0;
  let mut x522: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x521, &mut x522, x520, x457, x500);
  let mut x523: u32 = 0;
  let mut x524: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x523, &mut x524, x522, x459, (0x0 as u32));
  let mut x525: u32 = 0;
  let mut x526: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x525, &mut x526, x524, x461, x497);
  let mut x527: u32 = 0;
  let mut x528: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x527, &mut x528, x526, x463, x501);
  let mut x529: u32 = 0;
  let mut x530: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x529, &mut x530, x528, x465, x503);
  let mut x531: u32 = 0;
  let mut x532: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x531, &mut x532, x530, x467, x505);
  let mut x533: u32 = 0;
  let mut x534: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x533, &mut x534, x532, x469, x507);
  let mut x535: u32 = 0;
  let mut x536: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x535, &mut x536, x534, x471, x509);
  let mut x537: u32 = 0;
  let mut x538: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x537, &mut x538, x536, x473, x511);
  let mut x539: u32 = 0;
  let mut x540: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x539, &mut x540, x538, x475, x513);
  let mut x541: u32 = 0;
  let mut x542: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x541, &mut x542, x540, x477, x515);
  let mut x543: u32 = 0;
  let mut x544: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x543, &mut x544, x542, x479, x517);
  let mut x545: u32 = 0;
  let mut x546: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x545, &mut x546, x544, (x480 as u32), (0x0 as u32));
  let mut x547: u32 = 0;
  let mut x548: u32 = 0;
  fiat_p384_mulx_u32(&mut x547, &mut x548, x4, (arg2[11]));
  let mut x549: u32 = 0;
  let mut x550: u32 = 0;
  fiat_p384_mulx_u32(&mut x549, &mut x550, x4, (arg2[10]));
  let mut x551: u32 = 0;
  let mut x552: u32 = 0;
  fiat_p384_mulx_u32(&mut x551, &mut x552, x4, (arg2[9]));
  let mut x553: u32 = 0;
  let mut x554: u32 = 0;
  fiat_p384_mulx_u32(&mut x553, &mut x554, x4, (arg2[8]));
  let mut x555: u32 = 0;
  let mut x556: u32 = 0;
  fiat_p384_mulx_u32(&mut x555, &mut x556, x4, (arg2[7]));
  let mut x557: u32 = 0;
  let mut x558: u32 = 0;
  fiat_p384_mulx_u32(&mut x557, &mut x558, x4, (arg2[6]));
  let mut x559: u32 = 0;
  let mut x560: u32 = 0;
  fiat_p384_mulx_u32(&mut x559, &mut x560, x4, (arg2[5]));
  let mut x561: u32 = 0;
  let mut x562: u32 = 0;
  fiat_p384_mulx_u32(&mut x561, &mut x562, x4, (arg2[4]));
  let mut x563: u32 = 0;
  let mut x564: u32 = 0;
  fiat_p384_mulx_u32(&mut x563, &mut x564, x4, (arg2[3]));
  let mut x565: u32 = 0;
  let mut x566: u32 = 0;
  fiat_p384_mulx_u32(&mut x565, &mut x566, x4, (arg2[2]));
  let mut x567: u32 = 0;
  let mut x568: u32 = 0;
  fiat_p384_mulx_u32(&mut x567, &mut x568, x4, (arg2[1]));
  let mut x569: u32 = 0;
  let mut x570: u32 = 0;
  fiat_p384_mulx_u32(&mut x569, &mut x570, x4, (arg2[0]));
  let mut x571: u32 = 0;
  let mut x572: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x571, &mut x572, 0x0, x570, x567);
  let mut x573: u32 = 0;
  let mut x574: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x573, &mut x574, x572, x568, x565);
  let mut x575: u32 = 0;
  let mut x576: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x575, &mut x576, x574, x566, x563);
  let mut x577: u32 = 0;
  let mut x578: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x577, &mut x578, x576, x564, x561);
  let mut x579: u32 = 0;
  let mut x580: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x579, &mut x580, x578, x562, x559);
  let mut x581: u32 = 0;
  let mut x582: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x581, &mut x582, x580, x560, x557);
  let mut x583: u32 = 0;
  let mut x584: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x583, &mut x584, x582, x558, x555);
  let mut x585: u32 = 0;
  let mut x586: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x585, &mut x586, x584, x556, x553);
  let mut x587: u32 = 0;
  let mut x588: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x587, &mut x588, x586, x554, x551);
  let mut x589: u32 = 0;
  let mut x590: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x589, &mut x590, x588, x552, x549);
  let mut x591: u32 = 0;
  let mut x592: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x591, &mut x592, x590, x550, x547);
  let mut x593: u32 = 0;
  let mut x594: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x593, &mut x594, x592, x548, (0x0 as u32));
  let mut x595: u32 = 0;
  let mut x596: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x595, &mut x596, 0x0, x521, x569);
  let mut x597: u32 = 0;
  let mut x598: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x597, &mut x598, x596, x523, x571);
  let mut x599: u32 = 0;
  let mut x600: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x599, &mut x600, x598, x525, x573);
  let mut x601: u32 = 0;
  let mut x602: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x601, &mut x602, x600, x527, x575);
  let mut x603: u32 = 0;
  let mut x604: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x603, &mut x604, x602, x529, x577);
  let mut x605: u32 = 0;
  let mut x606: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x605, &mut x606, x604, x531, x579);
  let mut x607: u32 = 0;
  let mut x608: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x607, &mut x608, x606, x533, x581);
  let mut x609: u32 = 0;
  let mut x610: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x609, &mut x610, x608, x535, x583);
  let mut x611: u32 = 0;
  let mut x612: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x611, &mut x612, x610, x537, x585);
  let mut x613: u32 = 0;
  let mut x614: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x613, &mut x614, x612, x539, x587);
  let mut x615: u32 = 0;
  let mut x616: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x615, &mut x616, x614, x541, x589);
  let mut x617: u32 = 0;
  let mut x618: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x617, &mut x618, x616, x543, x591);
  let mut x619: u32 = 0;
  let mut x620: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x619, &mut x620, x618, x545, x593);
  let mut x621: u32 = 0;
  let mut x622: u32 = 0;
  fiat_p384_mulx_u32(&mut x621, &mut x622, x595, 0xffffffff);
  let mut x623: u32 = 0;
  let mut x624: u32 = 0;
  fiat_p384_mulx_u32(&mut x623, &mut x624, x595, 0xffffffff);
  let mut x625: u32 = 0;
  let mut x626: u32 = 0;
  fiat_p384_mulx_u32(&mut x625, &mut x626, x595, 0xffffffff);
  let mut x627: u32 = 0;
  let mut x628: u32 = 0;
  fiat_p384_mulx_u32(&mut x627, &mut x628, x595, 0xffffffff);
  let mut x629: u32 = 0;
  let mut x630: u32 = 0;
  fiat_p384_mulx_u32(&mut x629, &mut x630, x595, 0xffffffff);
  let mut x631: u32 = 0;
  let mut x632: u32 = 0;
  fiat_p384_mulx_u32(&mut x631, &mut x632, x595, 0xffffffff);
  let mut x633: u32 = 0;
  let mut x634: u32 = 0;
  fiat_p384_mulx_u32(&mut x633, &mut x634, x595, 0xffffffff);
  let mut x635: u32 = 0;
  let mut x636: u32 = 0;
  fiat_p384_mulx_u32(&mut x635, &mut x636, x595, 0xfffffffe);
  let mut x637: u32 = 0;
  let mut x638: u32 = 0;
  fiat_p384_mulx_u32(&mut x637, &mut x638, x595, 0xffffffff);
  let mut x639: u32 = 0;
  let mut x640: u32 = 0;
  fiat_p384_mulx_u32(&mut x639, &mut x640, x595, 0xffffffff);
  let mut x641: u32 = 0;
  let mut x642: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x641, &mut x642, 0x0, x638, x635);
  let mut x643: u32 = 0;
  let mut x644: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x643, &mut x644, x642, x636, x633);
  let mut x645: u32 = 0;
  let mut x646: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x645, &mut x646, x644, x634, x631);
  let mut x647: u32 = 0;
  let mut x648: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x647, &mut x648, x646, x632, x629);
  let mut x649: u32 = 0;
  let mut x650: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x649, &mut x650, x648, x630, x627);
  let mut x651: u32 = 0;
  let mut x652: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x651, &mut x652, x650, x628, x625);
  let mut x653: u32 = 0;
  let mut x654: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x653, &mut x654, x652, x626, x623);
  let mut x655: u32 = 0;
  let mut x656: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x655, &mut x656, x654, x624, x621);
  let mut x657: u32 = 0;
  let mut x658: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x657, &mut x658, x656, x622, (0x0 as u32));
  let mut x659: u32 = 0;
  let mut x660: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x659, &mut x660, 0x0, x595, x639);
  let mut x661: u32 = 0;
  let mut x662: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x661, &mut x662, x660, x597, x640);
  let mut x663: u32 = 0;
  let mut x664: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x663, &mut x664, x662, x599, (0x0 as u32));
  let mut x665: u32 = 0;
  let mut x666: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x665, &mut x666, x664, x601, x637);
  let mut x667: u32 = 0;
  let mut x668: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x667, &mut x668, x666, x603, x641);
  let mut x669: u32 = 0;
  let mut x670: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x669, &mut x670, x668, x605, x643);
  let mut x671: u32 = 0;
  let mut x672: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x671, &mut x672, x670, x607, x645);
  let mut x673: u32 = 0;
  let mut x674: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x673, &mut x674, x672, x609, x647);
  let mut x675: u32 = 0;
  let mut x676: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x675, &mut x676, x674, x611, x649);
  let mut x677: u32 = 0;
  let mut x678: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x677, &mut x678, x676, x613, x651);
  let mut x679: u32 = 0;
  let mut x680: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x679, &mut x680, x678, x615, x653);
  let mut x681: u32 = 0;
  let mut x682: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x681, &mut x682, x680, x617, x655);
  let mut x683: u32 = 0;
  let mut x684: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x683, &mut x684, x682, x619, x657);
  let mut x685: u32 = 0;
  let mut x686: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x685, &mut x686, x684, (x620 as u32), (0x0 as u32));
  let mut x687: u32 = 0;
  let mut x688: u32 = 0;
  fiat_p384_mulx_u32(&mut x687, &mut x688, x5, (arg2[11]));
  let mut x689: u32 = 0;
  let mut x690: u32 = 0;
  fiat_p384_mulx_u32(&mut x689, &mut x690, x5, (arg2[10]));
  let mut x691: u32 = 0;
  let mut x692: u32 = 0;
  fiat_p384_mulx_u32(&mut x691, &mut x692, x5, (arg2[9]));
  let mut x693: u32 = 0;
  let mut x694: u32 = 0;
  fiat_p384_mulx_u32(&mut x693, &mut x694, x5, (arg2[8]));
  let mut x695: u32 = 0;
  let mut x696: u32 = 0;
  fiat_p384_mulx_u32(&mut x695, &mut x696, x5, (arg2[7]));
  let mut x697: u32 = 0;
  let mut x698: u32 = 0;
  fiat_p384_mulx_u32(&mut x697, &mut x698, x5, (arg2[6]));
  let mut x699: u32 = 0;
  let mut x700: u32 = 0;
  fiat_p384_mulx_u32(&mut x699, &mut x700, x5, (arg2[5]));
  let mut x701: u32 = 0;
  let mut x702: u32 = 0;
  fiat_p384_mulx_u32(&mut x701, &mut x702, x5, (arg2[4]));
  let mut x703: u32 = 0;
  let mut x704: u32 = 0;
  fiat_p384_mulx_u32(&mut x703, &mut x704, x5, (arg2[3]));
  let mut x705: u32 = 0;
  let mut x706: u32 = 0;
  fiat_p384_mulx_u32(&mut x705, &mut x706, x5, (arg2[2]));
  let mut x707: u32 = 0;
  let mut x708: u32 = 0;
  fiat_p384_mulx_u32(&mut x707, &mut x708, x5, (arg2[1]));
  let mut x709: u32 = 0;
  let mut x710: u32 = 0;
  fiat_p384_mulx_u32(&mut x709, &mut x710, x5, (arg2[0]));
  let mut x711: u32 = 0;
  let mut x712: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x711, &mut x712, 0x0, x710, x707);
  let mut x713: u32 = 0;
  let mut x714: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x713, &mut x714, x712, x708, x705);
  let mut x715: u32 = 0;
  let mut x716: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x715, &mut x716, x714, x706, x703);
  let mut x717: u32 = 0;
  let mut x718: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x717, &mut x718, x716, x704, x701);
  let mut x719: u32 = 0;
  let mut x720: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x719, &mut x720, x718, x702, x699);
  let mut x721: u32 = 0;
  let mut x722: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x721, &mut x722, x720, x700, x697);
  let mut x723: u32 = 0;
  let mut x724: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x723, &mut x724, x722, x698, x695);
  let mut x725: u32 = 0;
  let mut x726: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x725, &mut x726, x724, x696, x693);
  let mut x727: u32 = 0;
  let mut x728: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x727, &mut x728, x726, x694, x691);
  let mut x729: u32 = 0;
  let mut x730: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x729, &mut x730, x728, x692, x689);
  let mut x731: u32 = 0;
  let mut x732: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x731, &mut x732, x730, x690, x687);
  let mut x733: u32 = 0;
  let mut x734: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x733, &mut x734, x732, x688, (0x0 as u32));
  let mut x735: u32 = 0;
  let mut x736: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x735, &mut x736, 0x0, x661, x709);
  let mut x737: u32 = 0;
  let mut x738: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x737, &mut x738, x736, x663, x711);
  let mut x739: u32 = 0;
  let mut x740: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x739, &mut x740, x738, x665, x713);
  let mut x741: u32 = 0;
  let mut x742: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x741, &mut x742, x740, x667, x715);
  let mut x743: u32 = 0;
  let mut x744: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x743, &mut x744, x742, x669, x717);
  let mut x745: u32 = 0;
  let mut x746: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x745, &mut x746, x744, x671, x719);
  let mut x747: u32 = 0;
  let mut x748: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x747, &mut x748, x746, x673, x721);
  let mut x749: u32 = 0;
  let mut x750: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x749, &mut x750, x748, x675, x723);
  let mut x751: u32 = 0;
  let mut x752: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x751, &mut x752, x750, x677, x725);
  let mut x753: u32 = 0;
  let mut x754: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x753, &mut x754, x752, x679, x727);
  let mut x755: u32 = 0;
  let mut x756: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x755, &mut x756, x754, x681, x729);
  let mut x757: u32 = 0;
  let mut x758: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x757, &mut x758, x756, x683, x731);
  let mut x759: u32 = 0;
  let mut x760: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x759, &mut x760, x758, x685, x733);
  let mut x761: u32 = 0;
  let mut x762: u32 = 0;
  fiat_p384_mulx_u32(&mut x761, &mut x762, x735, 0xffffffff);
  let mut x763: u32 = 0;
  let mut x764: u32 = 0;
  fiat_p384_mulx_u32(&mut x763, &mut x764, x735, 0xffffffff);
  let mut x765: u32 = 0;
  let mut x766: u32 = 0;
  fiat_p384_mulx_u32(&mut x765, &mut x766, x735, 0xffffffff);
  let mut x767: u32 = 0;
  let mut x768: u32 = 0;
  fiat_p384_mulx_u32(&mut x767, &mut x768, x735, 0xffffffff);
  let mut x769: u32 = 0;
  let mut x770: u32 = 0;
  fiat_p384_mulx_u32(&mut x769, &mut x770, x735, 0xffffffff);
  let mut x771: u32 = 0;
  let mut x772: u32 = 0;
  fiat_p384_mulx_u32(&mut x771, &mut x772, x735, 0xffffffff);
  let mut x773: u32 = 0;
  let mut x774: u32 = 0;
  fiat_p384_mulx_u32(&mut x773, &mut x774, x735, 0xffffffff);
  let mut x775: u32 = 0;
  let mut x776: u32 = 0;
  fiat_p384_mulx_u32(&mut x775, &mut x776, x735, 0xfffffffe);
  let mut x777: u32 = 0;
  let mut x778: u32 = 0;
  fiat_p384_mulx_u32(&mut x777, &mut x778, x735, 0xffffffff);
  let mut x779: u32 = 0;
  let mut x780: u32 = 0;
  fiat_p384_mulx_u32(&mut x779, &mut x780, x735, 0xffffffff);
  let mut x781: u32 = 0;
  let mut x782: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x781, &mut x782, 0x0, x778, x775);
  let mut x783: u32 = 0;
  let mut x784: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x783, &mut x784, x782, x776, x773);
  let mut x785: u32 = 0;
  let mut x786: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x785, &mut x786, x784, x774, x771);
  let mut x787: u32 = 0;
  let mut x788: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x787, &mut x788, x786, x772, x769);
  let mut x789: u32 = 0;
  let mut x790: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x789, &mut x790, x788, x770, x767);
  let mut x791: u32 = 0;
  let mut x792: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x791, &mut x792, x790, x768, x765);
  let mut x793: u32 = 0;
  let mut x794: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x793, &mut x794, x792, x766, x763);
  let mut x795: u32 = 0;
  let mut x796: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x795, &mut x796, x794, x764, x761);
  let mut x797: u32 = 0;
  let mut x798: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x797, &mut x798, x796, x762, (0x0 as u32));
  let mut x799: u32 = 0;
  let mut x800: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x799, &mut x800, 0x0, x735, x779);
  let mut x801: u32 = 0;
  let mut x802: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x801, &mut x802, x800, x737, x780);
  let mut x803: u32 = 0;
  let mut x804: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x803, &mut x804, x802, x739, (0x0 as u32));
  let mut x805: u32 = 0;
  let mut x806: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x805, &mut x806, x804, x741, x777);
  let mut x807: u32 = 0;
  let mut x808: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x807, &mut x808, x806, x743, x781);
  let mut x809: u32 = 0;
  let mut x810: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x809, &mut x810, x808, x745, x783);
  let mut x811: u32 = 0;
  let mut x812: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x811, &mut x812, x810, x747, x785);
  let mut x813: u32 = 0;
  let mut x814: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x813, &mut x814, x812, x749, x787);
  let mut x815: u32 = 0;
  let mut x816: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x815, &mut x816, x814, x751, x789);
  let mut x817: u32 = 0;
  let mut x818: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x817, &mut x818, x816, x753, x791);
  let mut x819: u32 = 0;
  let mut x820: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x819, &mut x820, x818, x755, x793);
  let mut x821: u32 = 0;
  let mut x822: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x821, &mut x822, x820, x757, x795);
  let mut x823: u32 = 0;
  let mut x824: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x823, &mut x824, x822, x759, x797);
  let mut x825: u32 = 0;
  let mut x826: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x825, &mut x826, x824, (x760 as u32), (0x0 as u32));
  let mut x827: u32 = 0;
  let mut x828: u32 = 0;
  fiat_p384_mulx_u32(&mut x827, &mut x828, x6, (arg2[11]));
  let mut x829: u32 = 0;
  let mut x830: u32 = 0;
  fiat_p384_mulx_u32(&mut x829, &mut x830, x6, (arg2[10]));
  let mut x831: u32 = 0;
  let mut x832: u32 = 0;
  fiat_p384_mulx_u32(&mut x831, &mut x832, x6, (arg2[9]));
  let mut x833: u32 = 0;
  let mut x834: u32 = 0;
  fiat_p384_mulx_u32(&mut x833, &mut x834, x6, (arg2[8]));
  let mut x835: u32 = 0;
  let mut x836: u32 = 0;
  fiat_p384_mulx_u32(&mut x835, &mut x836, x6, (arg2[7]));
  let mut x837: u32 = 0;
  let mut x838: u32 = 0;
  fiat_p384_mulx_u32(&mut x837, &mut x838, x6, (arg2[6]));
  let mut x839: u32 = 0;
  let mut x840: u32 = 0;
  fiat_p384_mulx_u32(&mut x839, &mut x840, x6, (arg2[5]));
  let mut x841: u32 = 0;
  let mut x842: u32 = 0;
  fiat_p384_mulx_u32(&mut x841, &mut x842, x6, (arg2[4]));
  let mut x843: u32 = 0;
  let mut x844: u32 = 0;
  fiat_p384_mulx_u32(&mut x843, &mut x844, x6, (arg2[3]));
  let mut x845: u32 = 0;
  let mut x846: u32 = 0;
  fiat_p384_mulx_u32(&mut x845, &mut x846, x6, (arg2[2]));
  let mut x847: u32 = 0;
  let mut x848: u32 = 0;
  fiat_p384_mulx_u32(&mut x847, &mut x848, x6, (arg2[1]));
  let mut x849: u32 = 0;
  let mut x850: u32 = 0;
  fiat_p384_mulx_u32(&mut x849, &mut x850, x6, (arg2[0]));
  let mut x851: u32 = 0;
  let mut x852: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x851, &mut x852, 0x0, x850, x847);
  let mut x853: u32 = 0;
  let mut x854: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x853, &mut x854, x852, x848, x845);
  let mut x855: u32 = 0;
  let mut x856: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x855, &mut x856, x854, x846, x843);
  let mut x857: u32 = 0;
  let mut x858: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x857, &mut x858, x856, x844, x841);
  let mut x859: u32 = 0;
  let mut x860: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x859, &mut x860, x858, x842, x839);
  let mut x861: u32 = 0;
  let mut x862: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x861, &mut x862, x860, x840, x837);
  let mut x863: u32 = 0;
  let mut x864: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x863, &mut x864, x862, x838, x835);
  let mut x865: u32 = 0;
  let mut x866: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x865, &mut x866, x864, x836, x833);
  let mut x867: u32 = 0;
  let mut x868: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x867, &mut x868, x866, x834, x831);
  let mut x869: u32 = 0;
  let mut x870: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x869, &mut x870, x868, x832, x829);
  let mut x871: u32 = 0;
  let mut x872: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x871, &mut x872, x870, x830, x827);
  let mut x873: u32 = 0;
  let mut x874: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x873, &mut x874, x872, x828, (0x0 as u32));
  let mut x875: u32 = 0;
  let mut x876: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x875, &mut x876, 0x0, x801, x849);
  let mut x877: u32 = 0;
  let mut x878: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x877, &mut x878, x876, x803, x851);
  let mut x879: u32 = 0;
  let mut x880: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x879, &mut x880, x878, x805, x853);
  let mut x881: u32 = 0;
  let mut x882: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x881, &mut x882, x880, x807, x855);
  let mut x883: u32 = 0;
  let mut x884: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x883, &mut x884, x882, x809, x857);
  let mut x885: u32 = 0;
  let mut x886: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x885, &mut x886, x884, x811, x859);
  let mut x887: u32 = 0;
  let mut x888: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x887, &mut x888, x886, x813, x861);
  let mut x889: u32 = 0;
  let mut x890: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x889, &mut x890, x888, x815, x863);
  let mut x891: u32 = 0;
  let mut x892: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x891, &mut x892, x890, x817, x865);
  let mut x893: u32 = 0;
  let mut x894: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x893, &mut x894, x892, x819, x867);
  let mut x895: u32 = 0;
  let mut x896: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x895, &mut x896, x894, x821, x869);
  let mut x897: u32 = 0;
  let mut x898: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x897, &mut x898, x896, x823, x871);
  let mut x899: u32 = 0;
  let mut x900: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x899, &mut x900, x898, x825, x873);
  let mut x901: u32 = 0;
  let mut x902: u32 = 0;
  fiat_p384_mulx_u32(&mut x901, &mut x902, x875, 0xffffffff);
  let mut x903: u32 = 0;
  let mut x904: u32 = 0;
  fiat_p384_mulx_u32(&mut x903, &mut x904, x875, 0xffffffff);
  let mut x905: u32 = 0;
  let mut x906: u32 = 0;
  fiat_p384_mulx_u32(&mut x905, &mut x906, x875, 0xffffffff);
  let mut x907: u32 = 0;
  let mut x908: u32 = 0;
  fiat_p384_mulx_u32(&mut x907, &mut x908, x875, 0xffffffff);
  let mut x909: u32 = 0;
  let mut x910: u32 = 0;
  fiat_p384_mulx_u32(&mut x909, &mut x910, x875, 0xffffffff);
  let mut x911: u32 = 0;
  let mut x912: u32 = 0;
  fiat_p384_mulx_u32(&mut x911, &mut x912, x875, 0xffffffff);
  let mut x913: u32 = 0;
  let mut x914: u32 = 0;
  fiat_p384_mulx_u32(&mut x913, &mut x914, x875, 0xffffffff);
  let mut x915: u32 = 0;
  let mut x916: u32 = 0;
  fiat_p384_mulx_u32(&mut x915, &mut x916, x875, 0xfffffffe);
  let mut x917: u32 = 0;
  let mut x918: u32 = 0;
  fiat_p384_mulx_u32(&mut x917, &mut x918, x875, 0xffffffff);
  let mut x919: u32 = 0;
  let mut x920: u32 = 0;
  fiat_p384_mulx_u32(&mut x919, &mut x920, x875, 0xffffffff);
  let mut x921: u32 = 0;
  let mut x922: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x921, &mut x922, 0x0, x918, x915);
  let mut x923: u32 = 0;
  let mut x924: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x923, &mut x924, x922, x916, x913);
  let mut x925: u32 = 0;
  let mut x926: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x925, &mut x926, x924, x914, x911);
  let mut x927: u32 = 0;
  let mut x928: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x927, &mut x928, x926, x912, x909);
  let mut x929: u32 = 0;
  let mut x930: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x929, &mut x930, x928, x910, x907);
  let mut x931: u32 = 0;
  let mut x932: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x931, &mut x932, x930, x908, x905);
  let mut x933: u32 = 0;
  let mut x934: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x933, &mut x934, x932, x906, x903);
  let mut x935: u32 = 0;
  let mut x936: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x935, &mut x936, x934, x904, x901);
  let mut x937: u32 = 0;
  let mut x938: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x937, &mut x938, x936, x902, (0x0 as u32));
  let mut x939: u32 = 0;
  let mut x940: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x939, &mut x940, 0x0, x875, x919);
  let mut x941: u32 = 0;
  let mut x942: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x941, &mut x942, x940, x877, x920);
  let mut x943: u32 = 0;
  let mut x944: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x943, &mut x944, x942, x879, (0x0 as u32));
  let mut x945: u32 = 0;
  let mut x946: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x945, &mut x946, x944, x881, x917);
  let mut x947: u32 = 0;
  let mut x948: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x947, &mut x948, x946, x883, x921);
  let mut x949: u32 = 0;
  let mut x950: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x949, &mut x950, x948, x885, x923);
  let mut x951: u32 = 0;
  let mut x952: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x951, &mut x952, x950, x887, x925);
  let mut x953: u32 = 0;
  let mut x954: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x953, &mut x954, x952, x889, x927);
  let mut x955: u32 = 0;
  let mut x956: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x955, &mut x956, x954, x891, x929);
  let mut x957: u32 = 0;
  let mut x958: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x957, &mut x958, x956, x893, x931);
  let mut x959: u32 = 0;
  let mut x960: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x959, &mut x960, x958, x895, x933);
  let mut x961: u32 = 0;
  let mut x962: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x961, &mut x962, x960, x897, x935);
  let mut x963: u32 = 0;
  let mut x964: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x963, &mut x964, x962, x899, x937);
  let mut x965: u32 = 0;
  let mut x966: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x965, &mut x966, x964, (x900 as u32), (0x0 as u32));
  let mut x967: u32 = 0;
  let mut x968: u32 = 0;
  fiat_p384_mulx_u32(&mut x967, &mut x968, x7, (arg2[11]));
  let mut x969: u32 = 0;
  let mut x970: u32 = 0;
  fiat_p384_mulx_u32(&mut x969, &mut x970, x7, (arg2[10]));
  let mut x971: u32 = 0;
  let mut x972: u32 = 0;
  fiat_p384_mulx_u32(&mut x971, &mut x972, x7, (arg2[9]));
  let mut x973: u32 = 0;
  let mut x974: u32 = 0;
  fiat_p384_mulx_u32(&mut x973, &mut x974, x7, (arg2[8]));
  let mut x975: u32 = 0;
  let mut x976: u32 = 0;
  fiat_p384_mulx_u32(&mut x975, &mut x976, x7, (arg2[7]));
  let mut x977: u32 = 0;
  let mut x978: u32 = 0;
  fiat_p384_mulx_u32(&mut x977, &mut x978, x7, (arg2[6]));
  let mut x979: u32 = 0;
  let mut x980: u32 = 0;
  fiat_p384_mulx_u32(&mut x979, &mut x980, x7, (arg2[5]));
  let mut x981: u32 = 0;
  let mut x982: u32 = 0;
  fiat_p384_mulx_u32(&mut x981, &mut x982, x7, (arg2[4]));
  let mut x983: u32 = 0;
  let mut x984: u32 = 0;
  fiat_p384_mulx_u32(&mut x983, &mut x984, x7, (arg2[3]));
  let mut x985: u32 = 0;
  let mut x986: u32 = 0;
  fiat_p384_mulx_u32(&mut x985, &mut x986, x7, (arg2[2]));
  let mut x987: u32 = 0;
  let mut x988: u32 = 0;
  fiat_p384_mulx_u32(&mut x987, &mut x988, x7, (arg2[1]));
  let mut x989: u32 = 0;
  let mut x990: u32 = 0;
  fiat_p384_mulx_u32(&mut x989, &mut x990, x7, (arg2[0]));
  let mut x991: u32 = 0;
  let mut x992: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x991, &mut x992, 0x0, x990, x987);
  let mut x993: u32 = 0;
  let mut x994: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x993, &mut x994, x992, x988, x985);
  let mut x995: u32 = 0;
  let mut x996: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x995, &mut x996, x994, x986, x983);
  let mut x997: u32 = 0;
  let mut x998: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x997, &mut x998, x996, x984, x981);
  let mut x999: u32 = 0;
  let mut x1000: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x999, &mut x1000, x998, x982, x979);
  let mut x1001: u32 = 0;
  let mut x1002: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1001, &mut x1002, x1000, x980, x977);
  let mut x1003: u32 = 0;
  let mut x1004: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1003, &mut x1004, x1002, x978, x975);
  let mut x1005: u32 = 0;
  let mut x1006: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1005, &mut x1006, x1004, x976, x973);
  let mut x1007: u32 = 0;
  let mut x1008: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1007, &mut x1008, x1006, x974, x971);
  let mut x1009: u32 = 0;
  let mut x1010: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1009, &mut x1010, x1008, x972, x969);
  let mut x1011: u32 = 0;
  let mut x1012: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1011, &mut x1012, x1010, x970, x967);
  let mut x1013: u32 = 0;
  let mut x1014: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1013, &mut x1014, x1012, x968, (0x0 as u32));
  let mut x1015: u32 = 0;
  let mut x1016: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1015, &mut x1016, 0x0, x941, x989);
  let mut x1017: u32 = 0;
  let mut x1018: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1017, &mut x1018, x1016, x943, x991);
  let mut x1019: u32 = 0;
  let mut x1020: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1019, &mut x1020, x1018, x945, x993);
  let mut x1021: u32 = 0;
  let mut x1022: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1021, &mut x1022, x1020, x947, x995);
  let mut x1023: u32 = 0;
  let mut x1024: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1023, &mut x1024, x1022, x949, x997);
  let mut x1025: u32 = 0;
  let mut x1026: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1025, &mut x1026, x1024, x951, x999);
  let mut x1027: u32 = 0;
  let mut x1028: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1027, &mut x1028, x1026, x953, x1001);
  let mut x1029: u32 = 0;
  let mut x1030: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1029, &mut x1030, x1028, x955, x1003);
  let mut x1031: u32 = 0;
  let mut x1032: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1031, &mut x1032, x1030, x957, x1005);
  let mut x1033: u32 = 0;
  let mut x1034: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1033, &mut x1034, x1032, x959, x1007);
  let mut x1035: u32 = 0;
  let mut x1036: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1035, &mut x1036, x1034, x961, x1009);
  let mut x1037: u32 = 0;
  let mut x1038: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1037, &mut x1038, x1036, x963, x1011);
  let mut x1039: u32 = 0;
  let mut x1040: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1039, &mut x1040, x1038, x965, x1013);
  let mut x1041: u32 = 0;
  let mut x1042: u32 = 0;
  fiat_p384_mulx_u32(&mut x1041, &mut x1042, x1015, 0xffffffff);
  let mut x1043: u32 = 0;
  let mut x1044: u32 = 0;
  fiat_p384_mulx_u32(&mut x1043, &mut x1044, x1015, 0xffffffff);
  let mut x1045: u32 = 0;
  let mut x1046: u32 = 0;
  fiat_p384_mulx_u32(&mut x1045, &mut x1046, x1015, 0xffffffff);
  let mut x1047: u32 = 0;
  let mut x1048: u32 = 0;
  fiat_p384_mulx_u32(&mut x1047, &mut x1048, x1015, 0xffffffff);
  let mut x1049: u32 = 0;
  let mut x1050: u32 = 0;
  fiat_p384_mulx_u32(&mut x1049, &mut x1050, x1015, 0xffffffff);
  let mut x1051: u32 = 0;
  let mut x1052: u32 = 0;
  fiat_p384_mulx_u32(&mut x1051, &mut x1052, x1015, 0xffffffff);
  let mut x1053: u32 = 0;
  let mut x1054: u32 = 0;
  fiat_p384_mulx_u32(&mut x1053, &mut x1054, x1015, 0xffffffff);
  let mut x1055: u32 = 0;
  let mut x1056: u32 = 0;
  fiat_p384_mulx_u32(&mut x1055, &mut x1056, x1015, 0xfffffffe);
  let mut x1057: u32 = 0;
  let mut x1058: u32 = 0;
  fiat_p384_mulx_u32(&mut x1057, &mut x1058, x1015, 0xffffffff);
  let mut x1059: u32 = 0;
  let mut x1060: u32 = 0;
  fiat_p384_mulx_u32(&mut x1059, &mut x1060, x1015, 0xffffffff);
  let mut x1061: u32 = 0;
  let mut x1062: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1061, &mut x1062, 0x0, x1058, x1055);
  let mut x1063: u32 = 0;
  let mut x1064: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1063, &mut x1064, x1062, x1056, x1053);
  let mut x1065: u32 = 0;
  let mut x1066: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1065, &mut x1066, x1064, x1054, x1051);
  let mut x1067: u32 = 0;
  let mut x1068: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1067, &mut x1068, x1066, x1052, x1049);
  let mut x1069: u32 = 0;
  let mut x1070: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1069, &mut x1070, x1068, x1050, x1047);
  let mut x1071: u32 = 0;
  let mut x1072: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1071, &mut x1072, x1070, x1048, x1045);
  let mut x1073: u32 = 0;
  let mut x1074: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1073, &mut x1074, x1072, x1046, x1043);
  let mut x1075: u32 = 0;
  let mut x1076: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1075, &mut x1076, x1074, x1044, x1041);
  let mut x1077: u32 = 0;
  let mut x1078: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1077, &mut x1078, x1076, x1042, (0x0 as u32));
  let mut x1079: u32 = 0;
  let mut x1080: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1079, &mut x1080, 0x0, x1015, x1059);
  let mut x1081: u32 = 0;
  let mut x1082: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1081, &mut x1082, x1080, x1017, x1060);
  let mut x1083: u32 = 0;
  let mut x1084: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1083, &mut x1084, x1082, x1019, (0x0 as u32));
  let mut x1085: u32 = 0;
  let mut x1086: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1085, &mut x1086, x1084, x1021, x1057);
  let mut x1087: u32 = 0;
  let mut x1088: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1087, &mut x1088, x1086, x1023, x1061);
  let mut x1089: u32 = 0;
  let mut x1090: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1089, &mut x1090, x1088, x1025, x1063);
  let mut x1091: u32 = 0;
  let mut x1092: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1091, &mut x1092, x1090, x1027, x1065);
  let mut x1093: u32 = 0;
  let mut x1094: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1093, &mut x1094, x1092, x1029, x1067);
  let mut x1095: u32 = 0;
  let mut x1096: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1095, &mut x1096, x1094, x1031, x1069);
  let mut x1097: u32 = 0;
  let mut x1098: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1097, &mut x1098, x1096, x1033, x1071);
  let mut x1099: u32 = 0;
  let mut x1100: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1099, &mut x1100, x1098, x1035, x1073);
  let mut x1101: u32 = 0;
  let mut x1102: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1101, &mut x1102, x1100, x1037, x1075);
  let mut x1103: u32 = 0;
  let mut x1104: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1103, &mut x1104, x1102, x1039, x1077);
  let mut x1105: u32 = 0;
  let mut x1106: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1105, &mut x1106, x1104, (x1040 as u32), (0x0 as u32));
  let mut x1107: u32 = 0;
  let mut x1108: u32 = 0;
  fiat_p384_mulx_u32(&mut x1107, &mut x1108, x8, (arg2[11]));
  let mut x1109: u32 = 0;
  let mut x1110: u32 = 0;
  fiat_p384_mulx_u32(&mut x1109, &mut x1110, x8, (arg2[10]));
  let mut x1111: u32 = 0;
  let mut x1112: u32 = 0;
  fiat_p384_mulx_u32(&mut x1111, &mut x1112, x8, (arg2[9]));
  let mut x1113: u32 = 0;
  let mut x1114: u32 = 0;
  fiat_p384_mulx_u32(&mut x1113, &mut x1114, x8, (arg2[8]));
  let mut x1115: u32 = 0;
  let mut x1116: u32 = 0;
  fiat_p384_mulx_u32(&mut x1115, &mut x1116, x8, (arg2[7]));
  let mut x1117: u32 = 0;
  let mut x1118: u32 = 0;
  fiat_p384_mulx_u32(&mut x1117, &mut x1118, x8, (arg2[6]));
  let mut x1119: u32 = 0;
  let mut x1120: u32 = 0;
  fiat_p384_mulx_u32(&mut x1119, &mut x1120, x8, (arg2[5]));
  let mut x1121: u32 = 0;
  let mut x1122: u32 = 0;
  fiat_p384_mulx_u32(&mut x1121, &mut x1122, x8, (arg2[4]));
  let mut x1123: u32 = 0;
  let mut x1124: u32 = 0;
  fiat_p384_mulx_u32(&mut x1123, &mut x1124, x8, (arg2[3]));
  let mut x1125: u32 = 0;
  let mut x1126: u32 = 0;
  fiat_p384_mulx_u32(&mut x1125, &mut x1126, x8, (arg2[2]));
  let mut x1127: u32 = 0;
  let mut x1128: u32 = 0;
  fiat_p384_mulx_u32(&mut x1127, &mut x1128, x8, (arg2[1]));
  let mut x1129: u32 = 0;
  let mut x1130: u32 = 0;
  fiat_p384_mulx_u32(&mut x1129, &mut x1130, x8, (arg2[0]));
  let mut x1131: u32 = 0;
  let mut x1132: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1131, &mut x1132, 0x0, x1130, x1127);
  let mut x1133: u32 = 0;
  let mut x1134: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1133, &mut x1134, x1132, x1128, x1125);
  let mut x1135: u32 = 0;
  let mut x1136: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1135, &mut x1136, x1134, x1126, x1123);
  let mut x1137: u32 = 0;
  let mut x1138: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1137, &mut x1138, x1136, x1124, x1121);
  let mut x1139: u32 = 0;
  let mut x1140: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1139, &mut x1140, x1138, x1122, x1119);
  let mut x1141: u32 = 0;
  let mut x1142: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1141, &mut x1142, x1140, x1120, x1117);
  let mut x1143: u32 = 0;
  let mut x1144: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1143, &mut x1144, x1142, x1118, x1115);
  let mut x1145: u32 = 0;
  let mut x1146: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1145, &mut x1146, x1144, x1116, x1113);
  let mut x1147: u32 = 0;
  let mut x1148: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1147, &mut x1148, x1146, x1114, x1111);
  let mut x1149: u32 = 0;
  let mut x1150: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1149, &mut x1150, x1148, x1112, x1109);
  let mut x1151: u32 = 0;
  let mut x1152: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1151, &mut x1152, x1150, x1110, x1107);
  let mut x1153: u32 = 0;
  let mut x1154: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1153, &mut x1154, x1152, x1108, (0x0 as u32));
  let mut x1155: u32 = 0;
  let mut x1156: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1155, &mut x1156, 0x0, x1081, x1129);
  let mut x1157: u32 = 0;
  let mut x1158: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1157, &mut x1158, x1156, x1083, x1131);
  let mut x1159: u32 = 0;
  let mut x1160: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1159, &mut x1160, x1158, x1085, x1133);
  let mut x1161: u32 = 0;
  let mut x1162: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1161, &mut x1162, x1160, x1087, x1135);
  let mut x1163: u32 = 0;
  let mut x1164: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1163, &mut x1164, x1162, x1089, x1137);
  let mut x1165: u32 = 0;
  let mut x1166: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1165, &mut x1166, x1164, x1091, x1139);
  let mut x1167: u32 = 0;
  let mut x1168: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1167, &mut x1168, x1166, x1093, x1141);
  let mut x1169: u32 = 0;
  let mut x1170: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1169, &mut x1170, x1168, x1095, x1143);
  let mut x1171: u32 = 0;
  let mut x1172: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1171, &mut x1172, x1170, x1097, x1145);
  let mut x1173: u32 = 0;
  let mut x1174: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1173, &mut x1174, x1172, x1099, x1147);
  let mut x1175: u32 = 0;
  let mut x1176: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1175, &mut x1176, x1174, x1101, x1149);
  let mut x1177: u32 = 0;
  let mut x1178: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1177, &mut x1178, x1176, x1103, x1151);
  let mut x1179: u32 = 0;
  let mut x1180: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1179, &mut x1180, x1178, x1105, x1153);
  let mut x1181: u32 = 0;
  let mut x1182: u32 = 0;
  fiat_p384_mulx_u32(&mut x1181, &mut x1182, x1155, 0xffffffff);
  let mut x1183: u32 = 0;
  let mut x1184: u32 = 0;
  fiat_p384_mulx_u32(&mut x1183, &mut x1184, x1155, 0xffffffff);
  let mut x1185: u32 = 0;
  let mut x1186: u32 = 0;
  fiat_p384_mulx_u32(&mut x1185, &mut x1186, x1155, 0xffffffff);
  let mut x1187: u32 = 0;
  let mut x1188: u32 = 0;
  fiat_p384_mulx_u32(&mut x1187, &mut x1188, x1155, 0xffffffff);
  let mut x1189: u32 = 0;
  let mut x1190: u32 = 0;
  fiat_p384_mulx_u32(&mut x1189, &mut x1190, x1155, 0xffffffff);
  let mut x1191: u32 = 0;
  let mut x1192: u32 = 0;
  fiat_p384_mulx_u32(&mut x1191, &mut x1192, x1155, 0xffffffff);
  let mut x1193: u32 = 0;
  let mut x1194: u32 = 0;
  fiat_p384_mulx_u32(&mut x1193, &mut x1194, x1155, 0xffffffff);
  let mut x1195: u32 = 0;
  let mut x1196: u32 = 0;
  fiat_p384_mulx_u32(&mut x1195, &mut x1196, x1155, 0xfffffffe);
  let mut x1197: u32 = 0;
  let mut x1198: u32 = 0;
  fiat_p384_mulx_u32(&mut x1197, &mut x1198, x1155, 0xffffffff);
  let mut x1199: u32 = 0;
  let mut x1200: u32 = 0;
  fiat_p384_mulx_u32(&mut x1199, &mut x1200, x1155, 0xffffffff);
  let mut x1201: u32 = 0;
  let mut x1202: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1201, &mut x1202, 0x0, x1198, x1195);
  let mut x1203: u32 = 0;
  let mut x1204: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1203, &mut x1204, x1202, x1196, x1193);
  let mut x1205: u32 = 0;
  let mut x1206: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1205, &mut x1206, x1204, x1194, x1191);
  let mut x1207: u32 = 0;
  let mut x1208: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1207, &mut x1208, x1206, x1192, x1189);
  let mut x1209: u32 = 0;
  let mut x1210: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1209, &mut x1210, x1208, x1190, x1187);
  let mut x1211: u32 = 0;
  let mut x1212: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1211, &mut x1212, x1210, x1188, x1185);
  let mut x1213: u32 = 0;
  let mut x1214: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1213, &mut x1214, x1212, x1186, x1183);
  let mut x1215: u32 = 0;
  let mut x1216: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1215, &mut x1216, x1214, x1184, x1181);
  let mut x1217: u32 = 0;
  let mut x1218: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1217, &mut x1218, x1216, x1182, (0x0 as u32));
  let mut x1219: u32 = 0;
  let mut x1220: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1219, &mut x1220, 0x0, x1155, x1199);
  let mut x1221: u32 = 0;
  let mut x1222: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1221, &mut x1222, x1220, x1157, x1200);
  let mut x1223: u32 = 0;
  let mut x1224: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1223, &mut x1224, x1222, x1159, (0x0 as u32));
  let mut x1225: u32 = 0;
  let mut x1226: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1225, &mut x1226, x1224, x1161, x1197);
  let mut x1227: u32 = 0;
  let mut x1228: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1227, &mut x1228, x1226, x1163, x1201);
  let mut x1229: u32 = 0;
  let mut x1230: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1229, &mut x1230, x1228, x1165, x1203);
  let mut x1231: u32 = 0;
  let mut x1232: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1231, &mut x1232, x1230, x1167, x1205);
  let mut x1233: u32 = 0;
  let mut x1234: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1233, &mut x1234, x1232, x1169, x1207);
  let mut x1235: u32 = 0;
  let mut x1236: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1235, &mut x1236, x1234, x1171, x1209);
  let mut x1237: u32 = 0;
  let mut x1238: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1237, &mut x1238, x1236, x1173, x1211);
  let mut x1239: u32 = 0;
  let mut x1240: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1239, &mut x1240, x1238, x1175, x1213);
  let mut x1241: u32 = 0;
  let mut x1242: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1241, &mut x1242, x1240, x1177, x1215);
  let mut x1243: u32 = 0;
  let mut x1244: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1243, &mut x1244, x1242, x1179, x1217);
  let mut x1245: u32 = 0;
  let mut x1246: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1245, &mut x1246, x1244, (x1180 as u32), (0x0 as u32));
  let mut x1247: u32 = 0;
  let mut x1248: u32 = 0;
  fiat_p384_mulx_u32(&mut x1247, &mut x1248, x9, (arg2[11]));
  let mut x1249: u32 = 0;
  let mut x1250: u32 = 0;
  fiat_p384_mulx_u32(&mut x1249, &mut x1250, x9, (arg2[10]));
  let mut x1251: u32 = 0;
  let mut x1252: u32 = 0;
  fiat_p384_mulx_u32(&mut x1251, &mut x1252, x9, (arg2[9]));
  let mut x1253: u32 = 0;
  let mut x1254: u32 = 0;
  fiat_p384_mulx_u32(&mut x1253, &mut x1254, x9, (arg2[8]));
  let mut x1255: u32 = 0;
  let mut x1256: u32 = 0;
  fiat_p384_mulx_u32(&mut x1255, &mut x1256, x9, (arg2[7]));
  let mut x1257: u32 = 0;
  let mut x1258: u32 = 0;
  fiat_p384_mulx_u32(&mut x1257, &mut x1258, x9, (arg2[6]));
  let mut x1259: u32 = 0;
  let mut x1260: u32 = 0;
  fiat_p384_mulx_u32(&mut x1259, &mut x1260, x9, (arg2[5]));
  let mut x1261: u32 = 0;
  let mut x1262: u32 = 0;
  fiat_p384_mulx_u32(&mut x1261, &mut x1262, x9, (arg2[4]));
  let mut x1263: u32 = 0;
  let mut x1264: u32 = 0;
  fiat_p384_mulx_u32(&mut x1263, &mut x1264, x9, (arg2[3]));
  let mut x1265: u32 = 0;
  let mut x1266: u32 = 0;
  fiat_p384_mulx_u32(&mut x1265, &mut x1266, x9, (arg2[2]));
  let mut x1267: u32 = 0;
  let mut x1268: u32 = 0;
  fiat_p384_mulx_u32(&mut x1267, &mut x1268, x9, (arg2[1]));
  let mut x1269: u32 = 0;
  let mut x1270: u32 = 0;
  fiat_p384_mulx_u32(&mut x1269, &mut x1270, x9, (arg2[0]));
  let mut x1271: u32 = 0;
  let mut x1272: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1271, &mut x1272, 0x0, x1270, x1267);
  let mut x1273: u32 = 0;
  let mut x1274: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1273, &mut x1274, x1272, x1268, x1265);
  let mut x1275: u32 = 0;
  let mut x1276: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1275, &mut x1276, x1274, x1266, x1263);
  let mut x1277: u32 = 0;
  let mut x1278: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1277, &mut x1278, x1276, x1264, x1261);
  let mut x1279: u32 = 0;
  let mut x1280: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1279, &mut x1280, x1278, x1262, x1259);
  let mut x1281: u32 = 0;
  let mut x1282: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1281, &mut x1282, x1280, x1260, x1257);
  let mut x1283: u32 = 0;
  let mut x1284: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1283, &mut x1284, x1282, x1258, x1255);
  let mut x1285: u32 = 0;
  let mut x1286: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1285, &mut x1286, x1284, x1256, x1253);
  let mut x1287: u32 = 0;
  let mut x1288: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1287, &mut x1288, x1286, x1254, x1251);
  let mut x1289: u32 = 0;
  let mut x1290: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1289, &mut x1290, x1288, x1252, x1249);
  let mut x1291: u32 = 0;
  let mut x1292: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1291, &mut x1292, x1290, x1250, x1247);
  let mut x1293: u32 = 0;
  let mut x1294: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1293, &mut x1294, x1292, x1248, (0x0 as u32));
  let mut x1295: u32 = 0;
  let mut x1296: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1295, &mut x1296, 0x0, x1221, x1269);
  let mut x1297: u32 = 0;
  let mut x1298: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1297, &mut x1298, x1296, x1223, x1271);
  let mut x1299: u32 = 0;
  let mut x1300: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1299, &mut x1300, x1298, x1225, x1273);
  let mut x1301: u32 = 0;
  let mut x1302: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1301, &mut x1302, x1300, x1227, x1275);
  let mut x1303: u32 = 0;
  let mut x1304: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1303, &mut x1304, x1302, x1229, x1277);
  let mut x1305: u32 = 0;
  let mut x1306: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1305, &mut x1306, x1304, x1231, x1279);
  let mut x1307: u32 = 0;
  let mut x1308: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1307, &mut x1308, x1306, x1233, x1281);
  let mut x1309: u32 = 0;
  let mut x1310: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1309, &mut x1310, x1308, x1235, x1283);
  let mut x1311: u32 = 0;
  let mut x1312: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1311, &mut x1312, x1310, x1237, x1285);
  let mut x1313: u32 = 0;
  let mut x1314: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1313, &mut x1314, x1312, x1239, x1287);
  let mut x1315: u32 = 0;
  let mut x1316: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1315, &mut x1316, x1314, x1241, x1289);
  let mut x1317: u32 = 0;
  let mut x1318: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1317, &mut x1318, x1316, x1243, x1291);
  let mut x1319: u32 = 0;
  let mut x1320: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1319, &mut x1320, x1318, x1245, x1293);
  let mut x1321: u32 = 0;
  let mut x1322: u32 = 0;
  fiat_p384_mulx_u32(&mut x1321, &mut x1322, x1295, 0xffffffff);
  let mut x1323: u32 = 0;
  let mut x1324: u32 = 0;
  fiat_p384_mulx_u32(&mut x1323, &mut x1324, x1295, 0xffffffff);
  let mut x1325: u32 = 0;
  let mut x1326: u32 = 0;
  fiat_p384_mulx_u32(&mut x1325, &mut x1326, x1295, 0xffffffff);
  let mut x1327: u32 = 0;
  let mut x1328: u32 = 0;
  fiat_p384_mulx_u32(&mut x1327, &mut x1328, x1295, 0xffffffff);
  let mut x1329: u32 = 0;
  let mut x1330: u32 = 0;
  fiat_p384_mulx_u32(&mut x1329, &mut x1330, x1295, 0xffffffff);
  let mut x1331: u32 = 0;
  let mut x1332: u32 = 0;
  fiat_p384_mulx_u32(&mut x1331, &mut x1332, x1295, 0xffffffff);
  let mut x1333: u32 = 0;
  let mut x1334: u32 = 0;
  fiat_p384_mulx_u32(&mut x1333, &mut x1334, x1295, 0xffffffff);
  let mut x1335: u32 = 0;
  let mut x1336: u32 = 0;
  fiat_p384_mulx_u32(&mut x1335, &mut x1336, x1295, 0xfffffffe);
  let mut x1337: u32 = 0;
  let mut x1338: u32 = 0;
  fiat_p384_mulx_u32(&mut x1337, &mut x1338, x1295, 0xffffffff);
  let mut x1339: u32 = 0;
  let mut x1340: u32 = 0;
  fiat_p384_mulx_u32(&mut x1339, &mut x1340, x1295, 0xffffffff);
  let mut x1341: u32 = 0;
  let mut x1342: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1341, &mut x1342, 0x0, x1338, x1335);
  let mut x1343: u32 = 0;
  let mut x1344: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1343, &mut x1344, x1342, x1336, x1333);
  let mut x1345: u32 = 0;
  let mut x1346: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1345, &mut x1346, x1344, x1334, x1331);
  let mut x1347: u32 = 0;
  let mut x1348: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1347, &mut x1348, x1346, x1332, x1329);
  let mut x1349: u32 = 0;
  let mut x1350: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1349, &mut x1350, x1348, x1330, x1327);
  let mut x1351: u32 = 0;
  let mut x1352: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1351, &mut x1352, x1350, x1328, x1325);
  let mut x1353: u32 = 0;
  let mut x1354: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1353, &mut x1354, x1352, x1326, x1323);
  let mut x1355: u32 = 0;
  let mut x1356: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1355, &mut x1356, x1354, x1324, x1321);
  let mut x1357: u32 = 0;
  let mut x1358: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1357, &mut x1358, x1356, x1322, (0x0 as u32));
  let mut x1359: u32 = 0;
  let mut x1360: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1359, &mut x1360, 0x0, x1295, x1339);
  let mut x1361: u32 = 0;
  let mut x1362: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1361, &mut x1362, x1360, x1297, x1340);
  let mut x1363: u32 = 0;
  let mut x1364: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1363, &mut x1364, x1362, x1299, (0x0 as u32));
  let mut x1365: u32 = 0;
  let mut x1366: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1365, &mut x1366, x1364, x1301, x1337);
  let mut x1367: u32 = 0;
  let mut x1368: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1367, &mut x1368, x1366, x1303, x1341);
  let mut x1369: u32 = 0;
  let mut x1370: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1369, &mut x1370, x1368, x1305, x1343);
  let mut x1371: u32 = 0;
  let mut x1372: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1371, &mut x1372, x1370, x1307, x1345);
  let mut x1373: u32 = 0;
  let mut x1374: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1373, &mut x1374, x1372, x1309, x1347);
  let mut x1375: u32 = 0;
  let mut x1376: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1375, &mut x1376, x1374, x1311, x1349);
  let mut x1377: u32 = 0;
  let mut x1378: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1377, &mut x1378, x1376, x1313, x1351);
  let mut x1379: u32 = 0;
  let mut x1380: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1379, &mut x1380, x1378, x1315, x1353);
  let mut x1381: u32 = 0;
  let mut x1382: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1381, &mut x1382, x1380, x1317, x1355);
  let mut x1383: u32 = 0;
  let mut x1384: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1383, &mut x1384, x1382, x1319, x1357);
  let mut x1385: u32 = 0;
  let mut x1386: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1385, &mut x1386, x1384, (x1320 as u32), (0x0 as u32));
  let mut x1387: u32 = 0;
  let mut x1388: u32 = 0;
  fiat_p384_mulx_u32(&mut x1387, &mut x1388, x10, (arg2[11]));
  let mut x1389: u32 = 0;
  let mut x1390: u32 = 0;
  fiat_p384_mulx_u32(&mut x1389, &mut x1390, x10, (arg2[10]));
  let mut x1391: u32 = 0;
  let mut x1392: u32 = 0;
  fiat_p384_mulx_u32(&mut x1391, &mut x1392, x10, (arg2[9]));
  let mut x1393: u32 = 0;
  let mut x1394: u32 = 0;
  fiat_p384_mulx_u32(&mut x1393, &mut x1394, x10, (arg2[8]));
  let mut x1395: u32 = 0;
  let mut x1396: u32 = 0;
  fiat_p384_mulx_u32(&mut x1395, &mut x1396, x10, (arg2[7]));
  let mut x1397: u32 = 0;
  let mut x1398: u32 = 0;
  fiat_p384_mulx_u32(&mut x1397, &mut x1398, x10, (arg2[6]));
  let mut x1399: u32 = 0;
  let mut x1400: u32 = 0;
  fiat_p384_mulx_u32(&mut x1399, &mut x1400, x10, (arg2[5]));
  let mut x1401: u32 = 0;
  let mut x1402: u32 = 0;
  fiat_p384_mulx_u32(&mut x1401, &mut x1402, x10, (arg2[4]));
  let mut x1403: u32 = 0;
  let mut x1404: u32 = 0;
  fiat_p384_mulx_u32(&mut x1403, &mut x1404, x10, (arg2[3]));
  let mut x1405: u32 = 0;
  let mut x1406: u32 = 0;
  fiat_p384_mulx_u32(&mut x1405, &mut x1406, x10, (arg2[2]));
  let mut x1407: u32 = 0;
  let mut x1408: u32 = 0;
  fiat_p384_mulx_u32(&mut x1407, &mut x1408, x10, (arg2[1]));
  let mut x1409: u32 = 0;
  let mut x1410: u32 = 0;
  fiat_p384_mulx_u32(&mut x1409, &mut x1410, x10, (arg2[0]));
  let mut x1411: u32 = 0;
  let mut x1412: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1411, &mut x1412, 0x0, x1410, x1407);
  let mut x1413: u32 = 0;
  let mut x1414: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1413, &mut x1414, x1412, x1408, x1405);
  let mut x1415: u32 = 0;
  let mut x1416: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1415, &mut x1416, x1414, x1406, x1403);
  let mut x1417: u32 = 0;
  let mut x1418: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1417, &mut x1418, x1416, x1404, x1401);
  let mut x1419: u32 = 0;
  let mut x1420: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1419, &mut x1420, x1418, x1402, x1399);
  let mut x1421: u32 = 0;
  let mut x1422: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1421, &mut x1422, x1420, x1400, x1397);
  let mut x1423: u32 = 0;
  let mut x1424: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1423, &mut x1424, x1422, x1398, x1395);
  let mut x1425: u32 = 0;
  let mut x1426: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1425, &mut x1426, x1424, x1396, x1393);
  let mut x1427: u32 = 0;
  let mut x1428: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1427, &mut x1428, x1426, x1394, x1391);
  let mut x1429: u32 = 0;
  let mut x1430: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1429, &mut x1430, x1428, x1392, x1389);
  let mut x1431: u32 = 0;
  let mut x1432: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1431, &mut x1432, x1430, x1390, x1387);
  let mut x1433: u32 = 0;
  let mut x1434: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1433, &mut x1434, x1432, x1388, (0x0 as u32));
  let mut x1435: u32 = 0;
  let mut x1436: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1435, &mut x1436, 0x0, x1361, x1409);
  let mut x1437: u32 = 0;
  let mut x1438: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1437, &mut x1438, x1436, x1363, x1411);
  let mut x1439: u32 = 0;
  let mut x1440: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1439, &mut x1440, x1438, x1365, x1413);
  let mut x1441: u32 = 0;
  let mut x1442: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1441, &mut x1442, x1440, x1367, x1415);
  let mut x1443: u32 = 0;
  let mut x1444: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1443, &mut x1444, x1442, x1369, x1417);
  let mut x1445: u32 = 0;
  let mut x1446: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1445, &mut x1446, x1444, x1371, x1419);
  let mut x1447: u32 = 0;
  let mut x1448: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1447, &mut x1448, x1446, x1373, x1421);
  let mut x1449: u32 = 0;
  let mut x1450: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1449, &mut x1450, x1448, x1375, x1423);
  let mut x1451: u32 = 0;
  let mut x1452: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1451, &mut x1452, x1450, x1377, x1425);
  let mut x1453: u32 = 0;
  let mut x1454: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1453, &mut x1454, x1452, x1379, x1427);
  let mut x1455: u32 = 0;
  let mut x1456: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1455, &mut x1456, x1454, x1381, x1429);
  let mut x1457: u32 = 0;
  let mut x1458: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1457, &mut x1458, x1456, x1383, x1431);
  let mut x1459: u32 = 0;
  let mut x1460: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1459, &mut x1460, x1458, x1385, x1433);
  let mut x1461: u32 = 0;
  let mut x1462: u32 = 0;
  fiat_p384_mulx_u32(&mut x1461, &mut x1462, x1435, 0xffffffff);
  let mut x1463: u32 = 0;
  let mut x1464: u32 = 0;
  fiat_p384_mulx_u32(&mut x1463, &mut x1464, x1435, 0xffffffff);
  let mut x1465: u32 = 0;
  let mut x1466: u32 = 0;
  fiat_p384_mulx_u32(&mut x1465, &mut x1466, x1435, 0xffffffff);
  let mut x1467: u32 = 0;
  let mut x1468: u32 = 0;
  fiat_p384_mulx_u32(&mut x1467, &mut x1468, x1435, 0xffffffff);
  let mut x1469: u32 = 0;
  let mut x1470: u32 = 0;
  fiat_p384_mulx_u32(&mut x1469, &mut x1470, x1435, 0xffffffff);
  let mut x1471: u32 = 0;
  let mut x1472: u32 = 0;
  fiat_p384_mulx_u32(&mut x1471, &mut x1472, x1435, 0xffffffff);
  let mut x1473: u32 = 0;
  let mut x1474: u32 = 0;
  fiat_p384_mulx_u32(&mut x1473, &mut x1474, x1435, 0xffffffff);
  let mut x1475: u32 = 0;
  let mut x1476: u32 = 0;
  fiat_p384_mulx_u32(&mut x1475, &mut x1476, x1435, 0xfffffffe);
  let mut x1477: u32 = 0;
  let mut x1478: u32 = 0;
  fiat_p384_mulx_u32(&mut x1477, &mut x1478, x1435, 0xffffffff);
  let mut x1479: u32 = 0;
  let mut x1480: u32 = 0;
  fiat_p384_mulx_u32(&mut x1479, &mut x1480, x1435, 0xffffffff);
  let mut x1481: u32 = 0;
  let mut x1482: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1481, &mut x1482, 0x0, x1478, x1475);
  let mut x1483: u32 = 0;
  let mut x1484: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1483, &mut x1484, x1482, x1476, x1473);
  let mut x1485: u32 = 0;
  let mut x1486: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1485, &mut x1486, x1484, x1474, x1471);
  let mut x1487: u32 = 0;
  let mut x1488: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1487, &mut x1488, x1486, x1472, x1469);
  let mut x1489: u32 = 0;
  let mut x1490: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1489, &mut x1490, x1488, x1470, x1467);
  let mut x1491: u32 = 0;
  let mut x1492: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1491, &mut x1492, x1490, x1468, x1465);
  let mut x1493: u32 = 0;
  let mut x1494: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1493, &mut x1494, x1492, x1466, x1463);
  let mut x1495: u32 = 0;
  let mut x1496: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1495, &mut x1496, x1494, x1464, x1461);
  let mut x1497: u32 = 0;
  let mut x1498: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1497, &mut x1498, x1496, x1462, (0x0 as u32));
  let mut x1499: u32 = 0;
  let mut x1500: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1499, &mut x1500, 0x0, x1435, x1479);
  let mut x1501: u32 = 0;
  let mut x1502: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1501, &mut x1502, x1500, x1437, x1480);
  let mut x1503: u32 = 0;
  let mut x1504: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1503, &mut x1504, x1502, x1439, (0x0 as u32));
  let mut x1505: u32 = 0;
  let mut x1506: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1505, &mut x1506, x1504, x1441, x1477);
  let mut x1507: u32 = 0;
  let mut x1508: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1507, &mut x1508, x1506, x1443, x1481);
  let mut x1509: u32 = 0;
  let mut x1510: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1509, &mut x1510, x1508, x1445, x1483);
  let mut x1511: u32 = 0;
  let mut x1512: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1511, &mut x1512, x1510, x1447, x1485);
  let mut x1513: u32 = 0;
  let mut x1514: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1513, &mut x1514, x1512, x1449, x1487);
  let mut x1515: u32 = 0;
  let mut x1516: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1515, &mut x1516, x1514, x1451, x1489);
  let mut x1517: u32 = 0;
  let mut x1518: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1517, &mut x1518, x1516, x1453, x1491);
  let mut x1519: u32 = 0;
  let mut x1520: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1519, &mut x1520, x1518, x1455, x1493);
  let mut x1521: u32 = 0;
  let mut x1522: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1521, &mut x1522, x1520, x1457, x1495);
  let mut x1523: u32 = 0;
  let mut x1524: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1523, &mut x1524, x1522, x1459, x1497);
  let mut x1525: u32 = 0;
  let mut x1526: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1525, &mut x1526, x1524, (x1460 as u32), (0x0 as u32));
  let mut x1527: u32 = 0;
  let mut x1528: u32 = 0;
  fiat_p384_mulx_u32(&mut x1527, &mut x1528, x11, (arg2[11]));
  let mut x1529: u32 = 0;
  let mut x1530: u32 = 0;
  fiat_p384_mulx_u32(&mut x1529, &mut x1530, x11, (arg2[10]));
  let mut x1531: u32 = 0;
  let mut x1532: u32 = 0;
  fiat_p384_mulx_u32(&mut x1531, &mut x1532, x11, (arg2[9]));
  let mut x1533: u32 = 0;
  let mut x1534: u32 = 0;
  fiat_p384_mulx_u32(&mut x1533, &mut x1534, x11, (arg2[8]));
  let mut x1535: u32 = 0;
  let mut x1536: u32 = 0;
  fiat_p384_mulx_u32(&mut x1535, &mut x1536, x11, (arg2[7]));
  let mut x1537: u32 = 0;
  let mut x1538: u32 = 0;
  fiat_p384_mulx_u32(&mut x1537, &mut x1538, x11, (arg2[6]));
  let mut x1539: u32 = 0;
  let mut x1540: u32 = 0;
  fiat_p384_mulx_u32(&mut x1539, &mut x1540, x11, (arg2[5]));
  let mut x1541: u32 = 0;
  let mut x1542: u32 = 0;
  fiat_p384_mulx_u32(&mut x1541, &mut x1542, x11, (arg2[4]));
  let mut x1543: u32 = 0;
  let mut x1544: u32 = 0;
  fiat_p384_mulx_u32(&mut x1543, &mut x1544, x11, (arg2[3]));
  let mut x1545: u32 = 0;
  let mut x1546: u32 = 0;
  fiat_p384_mulx_u32(&mut x1545, &mut x1546, x11, (arg2[2]));
  let mut x1547: u32 = 0;
  let mut x1548: u32 = 0;
  fiat_p384_mulx_u32(&mut x1547, &mut x1548, x11, (arg2[1]));
  let mut x1549: u32 = 0;
  let mut x1550: u32 = 0;
  fiat_p384_mulx_u32(&mut x1549, &mut x1550, x11, (arg2[0]));
  let mut x1551: u32 = 0;
  let mut x1552: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1551, &mut x1552, 0x0, x1550, x1547);
  let mut x1553: u32 = 0;
  let mut x1554: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1553, &mut x1554, x1552, x1548, x1545);
  let mut x1555: u32 = 0;
  let mut x1556: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1555, &mut x1556, x1554, x1546, x1543);
  let mut x1557: u32 = 0;
  let mut x1558: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1557, &mut x1558, x1556, x1544, x1541);
  let mut x1559: u32 = 0;
  let mut x1560: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1559, &mut x1560, x1558, x1542, x1539);
  let mut x1561: u32 = 0;
  let mut x1562: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1561, &mut x1562, x1560, x1540, x1537);
  let mut x1563: u32 = 0;
  let mut x1564: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1563, &mut x1564, x1562, x1538, x1535);
  let mut x1565: u32 = 0;
  let mut x1566: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1565, &mut x1566, x1564, x1536, x1533);
  let mut x1567: u32 = 0;
  let mut x1568: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1567, &mut x1568, x1566, x1534, x1531);
  let mut x1569: u32 = 0;
  let mut x1570: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1569, &mut x1570, x1568, x1532, x1529);
  let mut x1571: u32 = 0;
  let mut x1572: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1571, &mut x1572, x1570, x1530, x1527);
  let mut x1573: u32 = 0;
  let mut x1574: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1573, &mut x1574, x1572, x1528, (0x0 as u32));
  let mut x1575: u32 = 0;
  let mut x1576: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1575, &mut x1576, 0x0, x1501, x1549);
  let mut x1577: u32 = 0;
  let mut x1578: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1577, &mut x1578, x1576, x1503, x1551);
  let mut x1579: u32 = 0;
  let mut x1580: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1579, &mut x1580, x1578, x1505, x1553);
  let mut x1581: u32 = 0;
  let mut x1582: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1581, &mut x1582, x1580, x1507, x1555);
  let mut x1583: u32 = 0;
  let mut x1584: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1583, &mut x1584, x1582, x1509, x1557);
  let mut x1585: u32 = 0;
  let mut x1586: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1585, &mut x1586, x1584, x1511, x1559);
  let mut x1587: u32 = 0;
  let mut x1588: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1587, &mut x1588, x1586, x1513, x1561);
  let mut x1589: u32 = 0;
  let mut x1590: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1589, &mut x1590, x1588, x1515, x1563);
  let mut x1591: u32 = 0;
  let mut x1592: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1591, &mut x1592, x1590, x1517, x1565);
  let mut x1593: u32 = 0;
  let mut x1594: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1593, &mut x1594, x1592, x1519, x1567);
  let mut x1595: u32 = 0;
  let mut x1596: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1595, &mut x1596, x1594, x1521, x1569);
  let mut x1597: u32 = 0;
  let mut x1598: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1597, &mut x1598, x1596, x1523, x1571);
  let mut x1599: u32 = 0;
  let mut x1600: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1599, &mut x1600, x1598, x1525, x1573);
  let mut x1601: u32 = 0;
  let mut x1602: u32 = 0;
  fiat_p384_mulx_u32(&mut x1601, &mut x1602, x1575, 0xffffffff);
  let mut x1603: u32 = 0;
  let mut x1604: u32 = 0;
  fiat_p384_mulx_u32(&mut x1603, &mut x1604, x1575, 0xffffffff);
  let mut x1605: u32 = 0;
  let mut x1606: u32 = 0;
  fiat_p384_mulx_u32(&mut x1605, &mut x1606, x1575, 0xffffffff);
  let mut x1607: u32 = 0;
  let mut x1608: u32 = 0;
  fiat_p384_mulx_u32(&mut x1607, &mut x1608, x1575, 0xffffffff);
  let mut x1609: u32 = 0;
  let mut x1610: u32 = 0;
  fiat_p384_mulx_u32(&mut x1609, &mut x1610, x1575, 0xffffffff);
  let mut x1611: u32 = 0;
  let mut x1612: u32 = 0;
  fiat_p384_mulx_u32(&mut x1611, &mut x1612, x1575, 0xffffffff);
  let mut x1613: u32 = 0;
  let mut x1614: u32 = 0;
  fiat_p384_mulx_u32(&mut x1613, &mut x1614, x1575, 0xffffffff);
  let mut x1615: u32 = 0;
  let mut x1616: u32 = 0;
  fiat_p384_mulx_u32(&mut x1615, &mut x1616, x1575, 0xfffffffe);
  let mut x1617: u32 = 0;
  let mut x1618: u32 = 0;
  fiat_p384_mulx_u32(&mut x1617, &mut x1618, x1575, 0xffffffff);
  let mut x1619: u32 = 0;
  let mut x1620: u32 = 0;
  fiat_p384_mulx_u32(&mut x1619, &mut x1620, x1575, 0xffffffff);
  let mut x1621: u32 = 0;
  let mut x1622: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1621, &mut x1622, 0x0, x1618, x1615);
  let mut x1623: u32 = 0;
  let mut x1624: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1623, &mut x1624, x1622, x1616, x1613);
  let mut x1625: u32 = 0;
  let mut x1626: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1625, &mut x1626, x1624, x1614, x1611);
  let mut x1627: u32 = 0;
  let mut x1628: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1627, &mut x1628, x1626, x1612, x1609);
  let mut x1629: u32 = 0;
  let mut x1630: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1629, &mut x1630, x1628, x1610, x1607);
  let mut x1631: u32 = 0;
  let mut x1632: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1631, &mut x1632, x1630, x1608, x1605);
  let mut x1633: u32 = 0;
  let mut x1634: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1633, &mut x1634, x1632, x1606, x1603);
  let mut x1635: u32 = 0;
  let mut x1636: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1635, &mut x1636, x1634, x1604, x1601);
  let mut x1637: u32 = 0;
  let mut x1638: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1637, &mut x1638, x1636, x1602, (0x0 as u32));
  let mut x1639: u32 = 0;
  let mut x1640: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1639, &mut x1640, 0x0, x1575, x1619);
  let mut x1641: u32 = 0;
  let mut x1642: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1641, &mut x1642, x1640, x1577, x1620);
  let mut x1643: u32 = 0;
  let mut x1644: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1643, &mut x1644, x1642, x1579, (0x0 as u32));
  let mut x1645: u32 = 0;
  let mut x1646: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1645, &mut x1646, x1644, x1581, x1617);
  let mut x1647: u32 = 0;
  let mut x1648: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1647, &mut x1648, x1646, x1583, x1621);
  let mut x1649: u32 = 0;
  let mut x1650: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1649, &mut x1650, x1648, x1585, x1623);
  let mut x1651: u32 = 0;
  let mut x1652: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1651, &mut x1652, x1650, x1587, x1625);
  let mut x1653: u32 = 0;
  let mut x1654: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1653, &mut x1654, x1652, x1589, x1627);
  let mut x1655: u32 = 0;
  let mut x1656: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1655, &mut x1656, x1654, x1591, x1629);
  let mut x1657: u32 = 0;
  let mut x1658: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1657, &mut x1658, x1656, x1593, x1631);
  let mut x1659: u32 = 0;
  let mut x1660: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1659, &mut x1660, x1658, x1595, x1633);
  let mut x1661: u32 = 0;
  let mut x1662: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1661, &mut x1662, x1660, x1597, x1635);
  let mut x1663: u32 = 0;
  let mut x1664: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1663, &mut x1664, x1662, x1599, x1637);
  let mut x1665: u32 = 0;
  let mut x1666: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1665, &mut x1666, x1664, (x1600 as u32), (0x0 as u32));
  let mut x1667: u32 = 0;
  let mut x1668: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1667, &mut x1668, 0x0, x1641, 0xffffffff);
  let mut x1669: u32 = 0;
  let mut x1670: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1669, &mut x1670, x1668, x1643, (0x0 as u32));
  let mut x1671: u32 = 0;
  let mut x1672: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1671, &mut x1672, x1670, x1645, (0x0 as u32));
  let mut x1673: u32 = 0;
  let mut x1674: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1673, &mut x1674, x1672, x1647, 0xffffffff);
  let mut x1675: u32 = 0;
  let mut x1676: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1675, &mut x1676, x1674, x1649, 0xfffffffe);
  let mut x1677: u32 = 0;
  let mut x1678: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1677, &mut x1678, x1676, x1651, 0xffffffff);
  let mut x1679: u32 = 0;
  let mut x1680: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1679, &mut x1680, x1678, x1653, 0xffffffff);
  let mut x1681: u32 = 0;
  let mut x1682: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1681, &mut x1682, x1680, x1655, 0xffffffff);
  let mut x1683: u32 = 0;
  let mut x1684: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1683, &mut x1684, x1682, x1657, 0xffffffff);
  let mut x1685: u32 = 0;
  let mut x1686: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1685, &mut x1686, x1684, x1659, 0xffffffff);
  let mut x1687: u32 = 0;
  let mut x1688: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1687, &mut x1688, x1686, x1661, 0xffffffff);
  let mut x1689: u32 = 0;
  let mut x1690: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1689, &mut x1690, x1688, x1663, 0xffffffff);
  let mut x1691: u32 = 0;
  let mut x1692: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1691, &mut x1692, x1690, x1665, (0x0 as u32));
  let mut x1693: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1693, x1692, x1667, x1641);
  let mut x1694: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1694, x1692, x1669, x1643);
  let mut x1695: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1695, x1692, x1671, x1645);
  let mut x1696: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1696, x1692, x1673, x1647);
  let mut x1697: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1697, x1692, x1675, x1649);
  let mut x1698: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1698, x1692, x1677, x1651);
  let mut x1699: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1699, x1692, x1679, x1653);
  let mut x1700: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1700, x1692, x1681, x1655);
  let mut x1701: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1701, x1692, x1683, x1657);
  let mut x1702: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1702, x1692, x1685, x1659);
  let mut x1703: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1703, x1692, x1687, x1661);
  let mut x1704: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1704, x1692, x1689, x1663);
  out1[0] = x1693;
  out1[1] = x1694;
  out1[2] = x1695;
  out1[3] = x1696;
  out1[4] = x1697;
  out1[5] = x1698;
  out1[6] = x1699;
  out1[7] = x1700;
  out1[8] = x1701;
  out1[9] = x1702;
  out1[10] = x1703;
  out1[11] = x1704;
}

/*
 * The function fiat_p384_square squares a field element in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg1)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p384_square(out1: &mut [u32; 12], arg1: &[u32; 12]) -> () {
  let x1: u32 = (arg1[1]);
  let x2: u32 = (arg1[2]);
  let x3: u32 = (arg1[3]);
  let x4: u32 = (arg1[4]);
  let x5: u32 = (arg1[5]);
  let x6: u32 = (arg1[6]);
  let x7: u32 = (arg1[7]);
  let x8: u32 = (arg1[8]);
  let x9: u32 = (arg1[9]);
  let x10: u32 = (arg1[10]);
  let x11: u32 = (arg1[11]);
  let x12: u32 = (arg1[0]);
  let mut x13: u32 = 0;
  let mut x14: u32 = 0;
  fiat_p384_mulx_u32(&mut x13, &mut x14, x12, (arg1[11]));
  let mut x15: u32 = 0;
  let mut x16: u32 = 0;
  fiat_p384_mulx_u32(&mut x15, &mut x16, x12, (arg1[10]));
  let mut x17: u32 = 0;
  let mut x18: u32 = 0;
  fiat_p384_mulx_u32(&mut x17, &mut x18, x12, (arg1[9]));
  let mut x19: u32 = 0;
  let mut x20: u32 = 0;
  fiat_p384_mulx_u32(&mut x19, &mut x20, x12, (arg1[8]));
  let mut x21: u32 = 0;
  let mut x22: u32 = 0;
  fiat_p384_mulx_u32(&mut x21, &mut x22, x12, (arg1[7]));
  let mut x23: u32 = 0;
  let mut x24: u32 = 0;
  fiat_p384_mulx_u32(&mut x23, &mut x24, x12, (arg1[6]));
  let mut x25: u32 = 0;
  let mut x26: u32 = 0;
  fiat_p384_mulx_u32(&mut x25, &mut x26, x12, (arg1[5]));
  let mut x27: u32 = 0;
  let mut x28: u32 = 0;
  fiat_p384_mulx_u32(&mut x27, &mut x28, x12, (arg1[4]));
  let mut x29: u32 = 0;
  let mut x30: u32 = 0;
  fiat_p384_mulx_u32(&mut x29, &mut x30, x12, (arg1[3]));
  let mut x31: u32 = 0;
  let mut x32: u32 = 0;
  fiat_p384_mulx_u32(&mut x31, &mut x32, x12, (arg1[2]));
  let mut x33: u32 = 0;
  let mut x34: u32 = 0;
  fiat_p384_mulx_u32(&mut x33, &mut x34, x12, (arg1[1]));
  let mut x35: u32 = 0;
  let mut x36: u32 = 0;
  fiat_p384_mulx_u32(&mut x35, &mut x36, x12, (arg1[0]));
  let mut x37: u32 = 0;
  let mut x38: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x37, &mut x38, 0x0, x36, x33);
  let mut x39: u32 = 0;
  let mut x40: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x39, &mut x40, x38, x34, x31);
  let mut x41: u32 = 0;
  let mut x42: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x41, &mut x42, x40, x32, x29);
  let mut x43: u32 = 0;
  let mut x44: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x43, &mut x44, x42, x30, x27);
  let mut x45: u32 = 0;
  let mut x46: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x45, &mut x46, x44, x28, x25);
  let mut x47: u32 = 0;
  let mut x48: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x47, &mut x48, x46, x26, x23);
  let mut x49: u32 = 0;
  let mut x50: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x49, &mut x50, x48, x24, x21);
  let mut x51: u32 = 0;
  let mut x52: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x51, &mut x52, x50, x22, x19);
  let mut x53: u32 = 0;
  let mut x54: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x53, &mut x54, x52, x20, x17);
  let mut x55: u32 = 0;
  let mut x56: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x55, &mut x56, x54, x18, x15);
  let mut x57: u32 = 0;
  let mut x58: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x57, &mut x58, x56, x16, x13);
  let mut x59: u32 = 0;
  let mut x60: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x59, &mut x60, x58, x14, (0x0 as u32));
  let mut x61: u32 = 0;
  let mut x62: u32 = 0;
  fiat_p384_mulx_u32(&mut x61, &mut x62, x35, 0xffffffff);
  let mut x63: u32 = 0;
  let mut x64: u32 = 0;
  fiat_p384_mulx_u32(&mut x63, &mut x64, x35, 0xffffffff);
  let mut x65: u32 = 0;
  let mut x66: u32 = 0;
  fiat_p384_mulx_u32(&mut x65, &mut x66, x35, 0xffffffff);
  let mut x67: u32 = 0;
  let mut x68: u32 = 0;
  fiat_p384_mulx_u32(&mut x67, &mut x68, x35, 0xffffffff);
  let mut x69: u32 = 0;
  let mut x70: u32 = 0;
  fiat_p384_mulx_u32(&mut x69, &mut x70, x35, 0xffffffff);
  let mut x71: u32 = 0;
  let mut x72: u32 = 0;
  fiat_p384_mulx_u32(&mut x71, &mut x72, x35, 0xffffffff);
  let mut x73: u32 = 0;
  let mut x74: u32 = 0;
  fiat_p384_mulx_u32(&mut x73, &mut x74, x35, 0xffffffff);
  let mut x75: u32 = 0;
  let mut x76: u32 = 0;
  fiat_p384_mulx_u32(&mut x75, &mut x76, x35, 0xfffffffe);
  let mut x77: u32 = 0;
  let mut x78: u32 = 0;
  fiat_p384_mulx_u32(&mut x77, &mut x78, x35, 0xffffffff);
  let mut x79: u32 = 0;
  let mut x80: u32 = 0;
  fiat_p384_mulx_u32(&mut x79, &mut x80, x35, 0xffffffff);
  let mut x81: u32 = 0;
  let mut x82: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x81, &mut x82, 0x0, x78, x75);
  let mut x83: u32 = 0;
  let mut x84: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x83, &mut x84, x82, x76, x73);
  let mut x85: u32 = 0;
  let mut x86: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x85, &mut x86, x84, x74, x71);
  let mut x87: u32 = 0;
  let mut x88: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x87, &mut x88, x86, x72, x69);
  let mut x89: u32 = 0;
  let mut x90: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x89, &mut x90, x88, x70, x67);
  let mut x91: u32 = 0;
  let mut x92: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x91, &mut x92, x90, x68, x65);
  let mut x93: u32 = 0;
  let mut x94: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x93, &mut x94, x92, x66, x63);
  let mut x95: u32 = 0;
  let mut x96: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x95, &mut x96, x94, x64, x61);
  let mut x97: u32 = 0;
  let mut x98: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x97, &mut x98, x96, x62, (0x0 as u32));
  let mut x99: u32 = 0;
  let mut x100: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x99, &mut x100, 0x0, x35, x79);
  let mut x101: u32 = 0;
  let mut x102: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x101, &mut x102, x100, x37, x80);
  let mut x103: u32 = 0;
  let mut x104: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x103, &mut x104, x102, x39, (0x0 as u32));
  let mut x105: u32 = 0;
  let mut x106: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x105, &mut x106, x104, x41, x77);
  let mut x107: u32 = 0;
  let mut x108: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x107, &mut x108, x106, x43, x81);
  let mut x109: u32 = 0;
  let mut x110: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x109, &mut x110, x108, x45, x83);
  let mut x111: u32 = 0;
  let mut x112: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x111, &mut x112, x110, x47, x85);
  let mut x113: u32 = 0;
  let mut x114: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x113, &mut x114, x112, x49, x87);
  let mut x115: u32 = 0;
  let mut x116: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x115, &mut x116, x114, x51, x89);
  let mut x117: u32 = 0;
  let mut x118: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x117, &mut x118, x116, x53, x91);
  let mut x119: u32 = 0;
  let mut x120: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x119, &mut x120, x118, x55, x93);
  let mut x121: u32 = 0;
  let mut x122: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x121, &mut x122, x120, x57, x95);
  let mut x123: u32 = 0;
  let mut x124: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x123, &mut x124, x122, x59, x97);
  let mut x125: u32 = 0;
  let mut x126: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x125, &mut x126, x124, (0x0 as u32), (0x0 as u32));
  let mut x127: u32 = 0;
  let mut x128: u32 = 0;
  fiat_p384_mulx_u32(&mut x127, &mut x128, x1, (arg1[11]));
  let mut x129: u32 = 0;
  let mut x130: u32 = 0;
  fiat_p384_mulx_u32(&mut x129, &mut x130, x1, (arg1[10]));
  let mut x131: u32 = 0;
  let mut x132: u32 = 0;
  fiat_p384_mulx_u32(&mut x131, &mut x132, x1, (arg1[9]));
  let mut x133: u32 = 0;
  let mut x134: u32 = 0;
  fiat_p384_mulx_u32(&mut x133, &mut x134, x1, (arg1[8]));
  let mut x135: u32 = 0;
  let mut x136: u32 = 0;
  fiat_p384_mulx_u32(&mut x135, &mut x136, x1, (arg1[7]));
  let mut x137: u32 = 0;
  let mut x138: u32 = 0;
  fiat_p384_mulx_u32(&mut x137, &mut x138, x1, (arg1[6]));
  let mut x139: u32 = 0;
  let mut x140: u32 = 0;
  fiat_p384_mulx_u32(&mut x139, &mut x140, x1, (arg1[5]));
  let mut x141: u32 = 0;
  let mut x142: u32 = 0;
  fiat_p384_mulx_u32(&mut x141, &mut x142, x1, (arg1[4]));
  let mut x143: u32 = 0;
  let mut x144: u32 = 0;
  fiat_p384_mulx_u32(&mut x143, &mut x144, x1, (arg1[3]));
  let mut x145: u32 = 0;
  let mut x146: u32 = 0;
  fiat_p384_mulx_u32(&mut x145, &mut x146, x1, (arg1[2]));
  let mut x147: u32 = 0;
  let mut x148: u32 = 0;
  fiat_p384_mulx_u32(&mut x147, &mut x148, x1, (arg1[1]));
  let mut x149: u32 = 0;
  let mut x150: u32 = 0;
  fiat_p384_mulx_u32(&mut x149, &mut x150, x1, (arg1[0]));
  let mut x151: u32 = 0;
  let mut x152: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x151, &mut x152, 0x0, x150, x147);
  let mut x153: u32 = 0;
  let mut x154: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x153, &mut x154, x152, x148, x145);
  let mut x155: u32 = 0;
  let mut x156: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x155, &mut x156, x154, x146, x143);
  let mut x157: u32 = 0;
  let mut x158: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x157, &mut x158, x156, x144, x141);
  let mut x159: u32 = 0;
  let mut x160: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x159, &mut x160, x158, x142, x139);
  let mut x161: u32 = 0;
  let mut x162: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x161, &mut x162, x160, x140, x137);
  let mut x163: u32 = 0;
  let mut x164: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x163, &mut x164, x162, x138, x135);
  let mut x165: u32 = 0;
  let mut x166: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x165, &mut x166, x164, x136, x133);
  let mut x167: u32 = 0;
  let mut x168: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x167, &mut x168, x166, x134, x131);
  let mut x169: u32 = 0;
  let mut x170: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x169, &mut x170, x168, x132, x129);
  let mut x171: u32 = 0;
  let mut x172: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x171, &mut x172, x170, x130, x127);
  let mut x173: u32 = 0;
  let mut x174: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x173, &mut x174, x172, x128, (0x0 as u32));
  let mut x175: u32 = 0;
  let mut x176: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x175, &mut x176, 0x0, x101, x149);
  let mut x177: u32 = 0;
  let mut x178: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x177, &mut x178, x176, x103, x151);
  let mut x179: u32 = 0;
  let mut x180: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x179, &mut x180, x178, x105, x153);
  let mut x181: u32 = 0;
  let mut x182: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x181, &mut x182, x180, x107, x155);
  let mut x183: u32 = 0;
  let mut x184: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x183, &mut x184, x182, x109, x157);
  let mut x185: u32 = 0;
  let mut x186: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x185, &mut x186, x184, x111, x159);
  let mut x187: u32 = 0;
  let mut x188: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x187, &mut x188, x186, x113, x161);
  let mut x189: u32 = 0;
  let mut x190: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x189, &mut x190, x188, x115, x163);
  let mut x191: u32 = 0;
  let mut x192: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x191, &mut x192, x190, x117, x165);
  let mut x193: u32 = 0;
  let mut x194: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x193, &mut x194, x192, x119, x167);
  let mut x195: u32 = 0;
  let mut x196: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x195, &mut x196, x194, x121, x169);
  let mut x197: u32 = 0;
  let mut x198: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x197, &mut x198, x196, x123, x171);
  let mut x199: u32 = 0;
  let mut x200: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x199, &mut x200, x198, ((x125 as fiat_p384_u1) as u32), x173);
  let mut x201: u32 = 0;
  let mut x202: u32 = 0;
  fiat_p384_mulx_u32(&mut x201, &mut x202, x175, 0xffffffff);
  let mut x203: u32 = 0;
  let mut x204: u32 = 0;
  fiat_p384_mulx_u32(&mut x203, &mut x204, x175, 0xffffffff);
  let mut x205: u32 = 0;
  let mut x206: u32 = 0;
  fiat_p384_mulx_u32(&mut x205, &mut x206, x175, 0xffffffff);
  let mut x207: u32 = 0;
  let mut x208: u32 = 0;
  fiat_p384_mulx_u32(&mut x207, &mut x208, x175, 0xffffffff);
  let mut x209: u32 = 0;
  let mut x210: u32 = 0;
  fiat_p384_mulx_u32(&mut x209, &mut x210, x175, 0xffffffff);
  let mut x211: u32 = 0;
  let mut x212: u32 = 0;
  fiat_p384_mulx_u32(&mut x211, &mut x212, x175, 0xffffffff);
  let mut x213: u32 = 0;
  let mut x214: u32 = 0;
  fiat_p384_mulx_u32(&mut x213, &mut x214, x175, 0xffffffff);
  let mut x215: u32 = 0;
  let mut x216: u32 = 0;
  fiat_p384_mulx_u32(&mut x215, &mut x216, x175, 0xfffffffe);
  let mut x217: u32 = 0;
  let mut x218: u32 = 0;
  fiat_p384_mulx_u32(&mut x217, &mut x218, x175, 0xffffffff);
  let mut x219: u32 = 0;
  let mut x220: u32 = 0;
  fiat_p384_mulx_u32(&mut x219, &mut x220, x175, 0xffffffff);
  let mut x221: u32 = 0;
  let mut x222: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x221, &mut x222, 0x0, x218, x215);
  let mut x223: u32 = 0;
  let mut x224: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x223, &mut x224, x222, x216, x213);
  let mut x225: u32 = 0;
  let mut x226: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x225, &mut x226, x224, x214, x211);
  let mut x227: u32 = 0;
  let mut x228: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x227, &mut x228, x226, x212, x209);
  let mut x229: u32 = 0;
  let mut x230: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x229, &mut x230, x228, x210, x207);
  let mut x231: u32 = 0;
  let mut x232: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x231, &mut x232, x230, x208, x205);
  let mut x233: u32 = 0;
  let mut x234: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x233, &mut x234, x232, x206, x203);
  let mut x235: u32 = 0;
  let mut x236: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x235, &mut x236, x234, x204, x201);
  let mut x237: u32 = 0;
  let mut x238: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x237, &mut x238, x236, x202, (0x0 as u32));
  let mut x239: u32 = 0;
  let mut x240: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x239, &mut x240, 0x0, x175, x219);
  let mut x241: u32 = 0;
  let mut x242: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x241, &mut x242, x240, x177, x220);
  let mut x243: u32 = 0;
  let mut x244: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x243, &mut x244, x242, x179, (0x0 as u32));
  let mut x245: u32 = 0;
  let mut x246: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x245, &mut x246, x244, x181, x217);
  let mut x247: u32 = 0;
  let mut x248: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x247, &mut x248, x246, x183, x221);
  let mut x249: u32 = 0;
  let mut x250: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x249, &mut x250, x248, x185, x223);
  let mut x251: u32 = 0;
  let mut x252: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x251, &mut x252, x250, x187, x225);
  let mut x253: u32 = 0;
  let mut x254: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x253, &mut x254, x252, x189, x227);
  let mut x255: u32 = 0;
  let mut x256: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x255, &mut x256, x254, x191, x229);
  let mut x257: u32 = 0;
  let mut x258: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x257, &mut x258, x256, x193, x231);
  let mut x259: u32 = 0;
  let mut x260: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x259, &mut x260, x258, x195, x233);
  let mut x261: u32 = 0;
  let mut x262: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x261, &mut x262, x260, x197, x235);
  let mut x263: u32 = 0;
  let mut x264: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x263, &mut x264, x262, x199, x237);
  let mut x265: u32 = 0;
  let mut x266: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x265, &mut x266, x264, (x200 as u32), (0x0 as u32));
  let mut x267: u32 = 0;
  let mut x268: u32 = 0;
  fiat_p384_mulx_u32(&mut x267, &mut x268, x2, (arg1[11]));
  let mut x269: u32 = 0;
  let mut x270: u32 = 0;
  fiat_p384_mulx_u32(&mut x269, &mut x270, x2, (arg1[10]));
  let mut x271: u32 = 0;
  let mut x272: u32 = 0;
  fiat_p384_mulx_u32(&mut x271, &mut x272, x2, (arg1[9]));
  let mut x273: u32 = 0;
  let mut x274: u32 = 0;
  fiat_p384_mulx_u32(&mut x273, &mut x274, x2, (arg1[8]));
  let mut x275: u32 = 0;
  let mut x276: u32 = 0;
  fiat_p384_mulx_u32(&mut x275, &mut x276, x2, (arg1[7]));
  let mut x277: u32 = 0;
  let mut x278: u32 = 0;
  fiat_p384_mulx_u32(&mut x277, &mut x278, x2, (arg1[6]));
  let mut x279: u32 = 0;
  let mut x280: u32 = 0;
  fiat_p384_mulx_u32(&mut x279, &mut x280, x2, (arg1[5]));
  let mut x281: u32 = 0;
  let mut x282: u32 = 0;
  fiat_p384_mulx_u32(&mut x281, &mut x282, x2, (arg1[4]));
  let mut x283: u32 = 0;
  let mut x284: u32 = 0;
  fiat_p384_mulx_u32(&mut x283, &mut x284, x2, (arg1[3]));
  let mut x285: u32 = 0;
  let mut x286: u32 = 0;
  fiat_p384_mulx_u32(&mut x285, &mut x286, x2, (arg1[2]));
  let mut x287: u32 = 0;
  let mut x288: u32 = 0;
  fiat_p384_mulx_u32(&mut x287, &mut x288, x2, (arg1[1]));
  let mut x289: u32 = 0;
  let mut x290: u32 = 0;
  fiat_p384_mulx_u32(&mut x289, &mut x290, x2, (arg1[0]));
  let mut x291: u32 = 0;
  let mut x292: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x291, &mut x292, 0x0, x290, x287);
  let mut x293: u32 = 0;
  let mut x294: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x293, &mut x294, x292, x288, x285);
  let mut x295: u32 = 0;
  let mut x296: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x295, &mut x296, x294, x286, x283);
  let mut x297: u32 = 0;
  let mut x298: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x297, &mut x298, x296, x284, x281);
  let mut x299: u32 = 0;
  let mut x300: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x299, &mut x300, x298, x282, x279);
  let mut x301: u32 = 0;
  let mut x302: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x301, &mut x302, x300, x280, x277);
  let mut x303: u32 = 0;
  let mut x304: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x303, &mut x304, x302, x278, x275);
  let mut x305: u32 = 0;
  let mut x306: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x305, &mut x306, x304, x276, x273);
  let mut x307: u32 = 0;
  let mut x308: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x307, &mut x308, x306, x274, x271);
  let mut x309: u32 = 0;
  let mut x310: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x309, &mut x310, x308, x272, x269);
  let mut x311: u32 = 0;
  let mut x312: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x311, &mut x312, x310, x270, x267);
  let mut x313: u32 = 0;
  let mut x314: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x313, &mut x314, x312, x268, (0x0 as u32));
  let mut x315: u32 = 0;
  let mut x316: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x315, &mut x316, 0x0, x241, x289);
  let mut x317: u32 = 0;
  let mut x318: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x317, &mut x318, x316, x243, x291);
  let mut x319: u32 = 0;
  let mut x320: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x319, &mut x320, x318, x245, x293);
  let mut x321: u32 = 0;
  let mut x322: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x321, &mut x322, x320, x247, x295);
  let mut x323: u32 = 0;
  let mut x324: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x323, &mut x324, x322, x249, x297);
  let mut x325: u32 = 0;
  let mut x326: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x325, &mut x326, x324, x251, x299);
  let mut x327: u32 = 0;
  let mut x328: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x327, &mut x328, x326, x253, x301);
  let mut x329: u32 = 0;
  let mut x330: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x329, &mut x330, x328, x255, x303);
  let mut x331: u32 = 0;
  let mut x332: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x331, &mut x332, x330, x257, x305);
  let mut x333: u32 = 0;
  let mut x334: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x333, &mut x334, x332, x259, x307);
  let mut x335: u32 = 0;
  let mut x336: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x335, &mut x336, x334, x261, x309);
  let mut x337: u32 = 0;
  let mut x338: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x337, &mut x338, x336, x263, x311);
  let mut x339: u32 = 0;
  let mut x340: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x339, &mut x340, x338, x265, x313);
  let mut x341: u32 = 0;
  let mut x342: u32 = 0;
  fiat_p384_mulx_u32(&mut x341, &mut x342, x315, 0xffffffff);
  let mut x343: u32 = 0;
  let mut x344: u32 = 0;
  fiat_p384_mulx_u32(&mut x343, &mut x344, x315, 0xffffffff);
  let mut x345: u32 = 0;
  let mut x346: u32 = 0;
  fiat_p384_mulx_u32(&mut x345, &mut x346, x315, 0xffffffff);
  let mut x347: u32 = 0;
  let mut x348: u32 = 0;
  fiat_p384_mulx_u32(&mut x347, &mut x348, x315, 0xffffffff);
  let mut x349: u32 = 0;
  let mut x350: u32 = 0;
  fiat_p384_mulx_u32(&mut x349, &mut x350, x315, 0xffffffff);
  let mut x351: u32 = 0;
  let mut x352: u32 = 0;
  fiat_p384_mulx_u32(&mut x351, &mut x352, x315, 0xffffffff);
  let mut x353: u32 = 0;
  let mut x354: u32 = 0;
  fiat_p384_mulx_u32(&mut x353, &mut x354, x315, 0xffffffff);
  let mut x355: u32 = 0;
  let mut x356: u32 = 0;
  fiat_p384_mulx_u32(&mut x355, &mut x356, x315, 0xfffffffe);
  let mut x357: u32 = 0;
  let mut x358: u32 = 0;
  fiat_p384_mulx_u32(&mut x357, &mut x358, x315, 0xffffffff);
  let mut x359: u32 = 0;
  let mut x360: u32 = 0;
  fiat_p384_mulx_u32(&mut x359, &mut x360, x315, 0xffffffff);
  let mut x361: u32 = 0;
  let mut x362: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x361, &mut x362, 0x0, x358, x355);
  let mut x363: u32 = 0;
  let mut x364: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x363, &mut x364, x362, x356, x353);
  let mut x365: u32 = 0;
  let mut x366: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x365, &mut x366, x364, x354, x351);
  let mut x367: u32 = 0;
  let mut x368: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x367, &mut x368, x366, x352, x349);
  let mut x369: u32 = 0;
  let mut x370: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x369, &mut x370, x368, x350, x347);
  let mut x371: u32 = 0;
  let mut x372: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x371, &mut x372, x370, x348, x345);
  let mut x373: u32 = 0;
  let mut x374: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x373, &mut x374, x372, x346, x343);
  let mut x375: u32 = 0;
  let mut x376: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x375, &mut x376, x374, x344, x341);
  let mut x377: u32 = 0;
  let mut x378: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x377, &mut x378, x376, x342, (0x0 as u32));
  let mut x379: u32 = 0;
  let mut x380: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x379, &mut x380, 0x0, x315, x359);
  let mut x381: u32 = 0;
  let mut x382: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x381, &mut x382, x380, x317, x360);
  let mut x383: u32 = 0;
  let mut x384: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x383, &mut x384, x382, x319, (0x0 as u32));
  let mut x385: u32 = 0;
  let mut x386: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x385, &mut x386, x384, x321, x357);
  let mut x387: u32 = 0;
  let mut x388: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x387, &mut x388, x386, x323, x361);
  let mut x389: u32 = 0;
  let mut x390: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x389, &mut x390, x388, x325, x363);
  let mut x391: u32 = 0;
  let mut x392: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x391, &mut x392, x390, x327, x365);
  let mut x393: u32 = 0;
  let mut x394: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x393, &mut x394, x392, x329, x367);
  let mut x395: u32 = 0;
  let mut x396: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x395, &mut x396, x394, x331, x369);
  let mut x397: u32 = 0;
  let mut x398: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x397, &mut x398, x396, x333, x371);
  let mut x399: u32 = 0;
  let mut x400: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x399, &mut x400, x398, x335, x373);
  let mut x401: u32 = 0;
  let mut x402: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x401, &mut x402, x400, x337, x375);
  let mut x403: u32 = 0;
  let mut x404: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x403, &mut x404, x402, x339, x377);
  let mut x405: u32 = 0;
  let mut x406: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x405, &mut x406, x404, (x340 as u32), (0x0 as u32));
  let mut x407: u32 = 0;
  let mut x408: u32 = 0;
  fiat_p384_mulx_u32(&mut x407, &mut x408, x3, (arg1[11]));
  let mut x409: u32 = 0;
  let mut x410: u32 = 0;
  fiat_p384_mulx_u32(&mut x409, &mut x410, x3, (arg1[10]));
  let mut x411: u32 = 0;
  let mut x412: u32 = 0;
  fiat_p384_mulx_u32(&mut x411, &mut x412, x3, (arg1[9]));
  let mut x413: u32 = 0;
  let mut x414: u32 = 0;
  fiat_p384_mulx_u32(&mut x413, &mut x414, x3, (arg1[8]));
  let mut x415: u32 = 0;
  let mut x416: u32 = 0;
  fiat_p384_mulx_u32(&mut x415, &mut x416, x3, (arg1[7]));
  let mut x417: u32 = 0;
  let mut x418: u32 = 0;
  fiat_p384_mulx_u32(&mut x417, &mut x418, x3, (arg1[6]));
  let mut x419: u32 = 0;
  let mut x420: u32 = 0;
  fiat_p384_mulx_u32(&mut x419, &mut x420, x3, (arg1[5]));
  let mut x421: u32 = 0;
  let mut x422: u32 = 0;
  fiat_p384_mulx_u32(&mut x421, &mut x422, x3, (arg1[4]));
  let mut x423: u32 = 0;
  let mut x424: u32 = 0;
  fiat_p384_mulx_u32(&mut x423, &mut x424, x3, (arg1[3]));
  let mut x425: u32 = 0;
  let mut x426: u32 = 0;
  fiat_p384_mulx_u32(&mut x425, &mut x426, x3, (arg1[2]));
  let mut x427: u32 = 0;
  let mut x428: u32 = 0;
  fiat_p384_mulx_u32(&mut x427, &mut x428, x3, (arg1[1]));
  let mut x429: u32 = 0;
  let mut x430: u32 = 0;
  fiat_p384_mulx_u32(&mut x429, &mut x430, x3, (arg1[0]));
  let mut x431: u32 = 0;
  let mut x432: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x431, &mut x432, 0x0, x430, x427);
  let mut x433: u32 = 0;
  let mut x434: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x433, &mut x434, x432, x428, x425);
  let mut x435: u32 = 0;
  let mut x436: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x435, &mut x436, x434, x426, x423);
  let mut x437: u32 = 0;
  let mut x438: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x437, &mut x438, x436, x424, x421);
  let mut x439: u32 = 0;
  let mut x440: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x439, &mut x440, x438, x422, x419);
  let mut x441: u32 = 0;
  let mut x442: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x441, &mut x442, x440, x420, x417);
  let mut x443: u32 = 0;
  let mut x444: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x443, &mut x444, x442, x418, x415);
  let mut x445: u32 = 0;
  let mut x446: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x445, &mut x446, x444, x416, x413);
  let mut x447: u32 = 0;
  let mut x448: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x447, &mut x448, x446, x414, x411);
  let mut x449: u32 = 0;
  let mut x450: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x449, &mut x450, x448, x412, x409);
  let mut x451: u32 = 0;
  let mut x452: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x451, &mut x452, x450, x410, x407);
  let mut x453: u32 = 0;
  let mut x454: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x453, &mut x454, x452, x408, (0x0 as u32));
  let mut x455: u32 = 0;
  let mut x456: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x455, &mut x456, 0x0, x381, x429);
  let mut x457: u32 = 0;
  let mut x458: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x457, &mut x458, x456, x383, x431);
  let mut x459: u32 = 0;
  let mut x460: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x459, &mut x460, x458, x385, x433);
  let mut x461: u32 = 0;
  let mut x462: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x461, &mut x462, x460, x387, x435);
  let mut x463: u32 = 0;
  let mut x464: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x463, &mut x464, x462, x389, x437);
  let mut x465: u32 = 0;
  let mut x466: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x465, &mut x466, x464, x391, x439);
  let mut x467: u32 = 0;
  let mut x468: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x467, &mut x468, x466, x393, x441);
  let mut x469: u32 = 0;
  let mut x470: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x469, &mut x470, x468, x395, x443);
  let mut x471: u32 = 0;
  let mut x472: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x471, &mut x472, x470, x397, x445);
  let mut x473: u32 = 0;
  let mut x474: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x473, &mut x474, x472, x399, x447);
  let mut x475: u32 = 0;
  let mut x476: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x475, &mut x476, x474, x401, x449);
  let mut x477: u32 = 0;
  let mut x478: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x477, &mut x478, x476, x403, x451);
  let mut x479: u32 = 0;
  let mut x480: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x479, &mut x480, x478, x405, x453);
  let mut x481: u32 = 0;
  let mut x482: u32 = 0;
  fiat_p384_mulx_u32(&mut x481, &mut x482, x455, 0xffffffff);
  let mut x483: u32 = 0;
  let mut x484: u32 = 0;
  fiat_p384_mulx_u32(&mut x483, &mut x484, x455, 0xffffffff);
  let mut x485: u32 = 0;
  let mut x486: u32 = 0;
  fiat_p384_mulx_u32(&mut x485, &mut x486, x455, 0xffffffff);
  let mut x487: u32 = 0;
  let mut x488: u32 = 0;
  fiat_p384_mulx_u32(&mut x487, &mut x488, x455, 0xffffffff);
  let mut x489: u32 = 0;
  let mut x490: u32 = 0;
  fiat_p384_mulx_u32(&mut x489, &mut x490, x455, 0xffffffff);
  let mut x491: u32 = 0;
  let mut x492: u32 = 0;
  fiat_p384_mulx_u32(&mut x491, &mut x492, x455, 0xffffffff);
  let mut x493: u32 = 0;
  let mut x494: u32 = 0;
  fiat_p384_mulx_u32(&mut x493, &mut x494, x455, 0xffffffff);
  let mut x495: u32 = 0;
  let mut x496: u32 = 0;
  fiat_p384_mulx_u32(&mut x495, &mut x496, x455, 0xfffffffe);
  let mut x497: u32 = 0;
  let mut x498: u32 = 0;
  fiat_p384_mulx_u32(&mut x497, &mut x498, x455, 0xffffffff);
  let mut x499: u32 = 0;
  let mut x500: u32 = 0;
  fiat_p384_mulx_u32(&mut x499, &mut x500, x455, 0xffffffff);
  let mut x501: u32 = 0;
  let mut x502: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x501, &mut x502, 0x0, x498, x495);
  let mut x503: u32 = 0;
  let mut x504: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x503, &mut x504, x502, x496, x493);
  let mut x505: u32 = 0;
  let mut x506: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x505, &mut x506, x504, x494, x491);
  let mut x507: u32 = 0;
  let mut x508: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x507, &mut x508, x506, x492, x489);
  let mut x509: u32 = 0;
  let mut x510: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x509, &mut x510, x508, x490, x487);
  let mut x511: u32 = 0;
  let mut x512: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x511, &mut x512, x510, x488, x485);
  let mut x513: u32 = 0;
  let mut x514: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x513, &mut x514, x512, x486, x483);
  let mut x515: u32 = 0;
  let mut x516: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x515, &mut x516, x514, x484, x481);
  let mut x517: u32 = 0;
  let mut x518: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x517, &mut x518, x516, x482, (0x0 as u32));
  let mut x519: u32 = 0;
  let mut x520: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x519, &mut x520, 0x0, x455, x499);
  let mut x521: u32 = 0;
  let mut x522: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x521, &mut x522, x520, x457, x500);
  let mut x523: u32 = 0;
  let mut x524: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x523, &mut x524, x522, x459, (0x0 as u32));
  let mut x525: u32 = 0;
  let mut x526: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x525, &mut x526, x524, x461, x497);
  let mut x527: u32 = 0;
  let mut x528: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x527, &mut x528, x526, x463, x501);
  let mut x529: u32 = 0;
  let mut x530: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x529, &mut x530, x528, x465, x503);
  let mut x531: u32 = 0;
  let mut x532: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x531, &mut x532, x530, x467, x505);
  let mut x533: u32 = 0;
  let mut x534: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x533, &mut x534, x532, x469, x507);
  let mut x535: u32 = 0;
  let mut x536: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x535, &mut x536, x534, x471, x509);
  let mut x537: u32 = 0;
  let mut x538: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x537, &mut x538, x536, x473, x511);
  let mut x539: u32 = 0;
  let mut x540: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x539, &mut x540, x538, x475, x513);
  let mut x541: u32 = 0;
  let mut x542: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x541, &mut x542, x540, x477, x515);
  let mut x543: u32 = 0;
  let mut x544: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x543, &mut x544, x542, x479, x517);
  let mut x545: u32 = 0;
  let mut x546: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x545, &mut x546, x544, (x480 as u32), (0x0 as u32));
  let mut x547: u32 = 0;
  let mut x548: u32 = 0;
  fiat_p384_mulx_u32(&mut x547, &mut x548, x4, (arg1[11]));
  let mut x549: u32 = 0;
  let mut x550: u32 = 0;
  fiat_p384_mulx_u32(&mut x549, &mut x550, x4, (arg1[10]));
  let mut x551: u32 = 0;
  let mut x552: u32 = 0;
  fiat_p384_mulx_u32(&mut x551, &mut x552, x4, (arg1[9]));
  let mut x553: u32 = 0;
  let mut x554: u32 = 0;
  fiat_p384_mulx_u32(&mut x553, &mut x554, x4, (arg1[8]));
  let mut x555: u32 = 0;
  let mut x556: u32 = 0;
  fiat_p384_mulx_u32(&mut x555, &mut x556, x4, (arg1[7]));
  let mut x557: u32 = 0;
  let mut x558: u32 = 0;
  fiat_p384_mulx_u32(&mut x557, &mut x558, x4, (arg1[6]));
  let mut x559: u32 = 0;
  let mut x560: u32 = 0;
  fiat_p384_mulx_u32(&mut x559, &mut x560, x4, (arg1[5]));
  let mut x561: u32 = 0;
  let mut x562: u32 = 0;
  fiat_p384_mulx_u32(&mut x561, &mut x562, x4, (arg1[4]));
  let mut x563: u32 = 0;
  let mut x564: u32 = 0;
  fiat_p384_mulx_u32(&mut x563, &mut x564, x4, (arg1[3]));
  let mut x565: u32 = 0;
  let mut x566: u32 = 0;
  fiat_p384_mulx_u32(&mut x565, &mut x566, x4, (arg1[2]));
  let mut x567: u32 = 0;
  let mut x568: u32 = 0;
  fiat_p384_mulx_u32(&mut x567, &mut x568, x4, (arg1[1]));
  let mut x569: u32 = 0;
  let mut x570: u32 = 0;
  fiat_p384_mulx_u32(&mut x569, &mut x570, x4, (arg1[0]));
  let mut x571: u32 = 0;
  let mut x572: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x571, &mut x572, 0x0, x570, x567);
  let mut x573: u32 = 0;
  let mut x574: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x573, &mut x574, x572, x568, x565);
  let mut x575: u32 = 0;
  let mut x576: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x575, &mut x576, x574, x566, x563);
  let mut x577: u32 = 0;
  let mut x578: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x577, &mut x578, x576, x564, x561);
  let mut x579: u32 = 0;
  let mut x580: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x579, &mut x580, x578, x562, x559);
  let mut x581: u32 = 0;
  let mut x582: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x581, &mut x582, x580, x560, x557);
  let mut x583: u32 = 0;
  let mut x584: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x583, &mut x584, x582, x558, x555);
  let mut x585: u32 = 0;
  let mut x586: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x585, &mut x586, x584, x556, x553);
  let mut x587: u32 = 0;
  let mut x588: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x587, &mut x588, x586, x554, x551);
  let mut x589: u32 = 0;
  let mut x590: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x589, &mut x590, x588, x552, x549);
  let mut x591: u32 = 0;
  let mut x592: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x591, &mut x592, x590, x550, x547);
  let mut x593: u32 = 0;
  let mut x594: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x593, &mut x594, x592, x548, (0x0 as u32));
  let mut x595: u32 = 0;
  let mut x596: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x595, &mut x596, 0x0, x521, x569);
  let mut x597: u32 = 0;
  let mut x598: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x597, &mut x598, x596, x523, x571);
  let mut x599: u32 = 0;
  let mut x600: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x599, &mut x600, x598, x525, x573);
  let mut x601: u32 = 0;
  let mut x602: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x601, &mut x602, x600, x527, x575);
  let mut x603: u32 = 0;
  let mut x604: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x603, &mut x604, x602, x529, x577);
  let mut x605: u32 = 0;
  let mut x606: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x605, &mut x606, x604, x531, x579);
  let mut x607: u32 = 0;
  let mut x608: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x607, &mut x608, x606, x533, x581);
  let mut x609: u32 = 0;
  let mut x610: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x609, &mut x610, x608, x535, x583);
  let mut x611: u32 = 0;
  let mut x612: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x611, &mut x612, x610, x537, x585);
  let mut x613: u32 = 0;
  let mut x614: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x613, &mut x614, x612, x539, x587);
  let mut x615: u32 = 0;
  let mut x616: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x615, &mut x616, x614, x541, x589);
  let mut x617: u32 = 0;
  let mut x618: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x617, &mut x618, x616, x543, x591);
  let mut x619: u32 = 0;
  let mut x620: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x619, &mut x620, x618, x545, x593);
  let mut x621: u32 = 0;
  let mut x622: u32 = 0;
  fiat_p384_mulx_u32(&mut x621, &mut x622, x595, 0xffffffff);
  let mut x623: u32 = 0;
  let mut x624: u32 = 0;
  fiat_p384_mulx_u32(&mut x623, &mut x624, x595, 0xffffffff);
  let mut x625: u32 = 0;
  let mut x626: u32 = 0;
  fiat_p384_mulx_u32(&mut x625, &mut x626, x595, 0xffffffff);
  let mut x627: u32 = 0;
  let mut x628: u32 = 0;
  fiat_p384_mulx_u32(&mut x627, &mut x628, x595, 0xffffffff);
  let mut x629: u32 = 0;
  let mut x630: u32 = 0;
  fiat_p384_mulx_u32(&mut x629, &mut x630, x595, 0xffffffff);
  let mut x631: u32 = 0;
  let mut x632: u32 = 0;
  fiat_p384_mulx_u32(&mut x631, &mut x632, x595, 0xffffffff);
  let mut x633: u32 = 0;
  let mut x634: u32 = 0;
  fiat_p384_mulx_u32(&mut x633, &mut x634, x595, 0xffffffff);
  let mut x635: u32 = 0;
  let mut x636: u32 = 0;
  fiat_p384_mulx_u32(&mut x635, &mut x636, x595, 0xfffffffe);
  let mut x637: u32 = 0;
  let mut x638: u32 = 0;
  fiat_p384_mulx_u32(&mut x637, &mut x638, x595, 0xffffffff);
  let mut x639: u32 = 0;
  let mut x640: u32 = 0;
  fiat_p384_mulx_u32(&mut x639, &mut x640, x595, 0xffffffff);
  let mut x641: u32 = 0;
  let mut x642: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x641, &mut x642, 0x0, x638, x635);
  let mut x643: u32 = 0;
  let mut x644: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x643, &mut x644, x642, x636, x633);
  let mut x645: u32 = 0;
  let mut x646: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x645, &mut x646, x644, x634, x631);
  let mut x647: u32 = 0;
  let mut x648: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x647, &mut x648, x646, x632, x629);
  let mut x649: u32 = 0;
  let mut x650: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x649, &mut x650, x648, x630, x627);
  let mut x651: u32 = 0;
  let mut x652: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x651, &mut x652, x650, x628, x625);
  let mut x653: u32 = 0;
  let mut x654: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x653, &mut x654, x652, x626, x623);
  let mut x655: u32 = 0;
  let mut x656: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x655, &mut x656, x654, x624, x621);
  let mut x657: u32 = 0;
  let mut x658: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x657, &mut x658, x656, x622, (0x0 as u32));
  let mut x659: u32 = 0;
  let mut x660: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x659, &mut x660, 0x0, x595, x639);
  let mut x661: u32 = 0;
  let mut x662: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x661, &mut x662, x660, x597, x640);
  let mut x663: u32 = 0;
  let mut x664: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x663, &mut x664, x662, x599, (0x0 as u32));
  let mut x665: u32 = 0;
  let mut x666: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x665, &mut x666, x664, x601, x637);
  let mut x667: u32 = 0;
  let mut x668: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x667, &mut x668, x666, x603, x641);
  let mut x669: u32 = 0;
  let mut x670: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x669, &mut x670, x668, x605, x643);
  let mut x671: u32 = 0;
  let mut x672: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x671, &mut x672, x670, x607, x645);
  let mut x673: u32 = 0;
  let mut x674: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x673, &mut x674, x672, x609, x647);
  let mut x675: u32 = 0;
  let mut x676: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x675, &mut x676, x674, x611, x649);
  let mut x677: u32 = 0;
  let mut x678: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x677, &mut x678, x676, x613, x651);
  let mut x679: u32 = 0;
  let mut x680: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x679, &mut x680, x678, x615, x653);
  let mut x681: u32 = 0;
  let mut x682: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x681, &mut x682, x680, x617, x655);
  let mut x683: u32 = 0;
  let mut x684: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x683, &mut x684, x682, x619, x657);
  let mut x685: u32 = 0;
  let mut x686: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x685, &mut x686, x684, (x620 as u32), (0x0 as u32));
  let mut x687: u32 = 0;
  let mut x688: u32 = 0;
  fiat_p384_mulx_u32(&mut x687, &mut x688, x5, (arg1[11]));
  let mut x689: u32 = 0;
  let mut x690: u32 = 0;
  fiat_p384_mulx_u32(&mut x689, &mut x690, x5, (arg1[10]));
  let mut x691: u32 = 0;
  let mut x692: u32 = 0;
  fiat_p384_mulx_u32(&mut x691, &mut x692, x5, (arg1[9]));
  let mut x693: u32 = 0;
  let mut x694: u32 = 0;
  fiat_p384_mulx_u32(&mut x693, &mut x694, x5, (arg1[8]));
  let mut x695: u32 = 0;
  let mut x696: u32 = 0;
  fiat_p384_mulx_u32(&mut x695, &mut x696, x5, (arg1[7]));
  let mut x697: u32 = 0;
  let mut x698: u32 = 0;
  fiat_p384_mulx_u32(&mut x697, &mut x698, x5, (arg1[6]));
  let mut x699: u32 = 0;
  let mut x700: u32 = 0;
  fiat_p384_mulx_u32(&mut x699, &mut x700, x5, (arg1[5]));
  let mut x701: u32 = 0;
  let mut x702: u32 = 0;
  fiat_p384_mulx_u32(&mut x701, &mut x702, x5, (arg1[4]));
  let mut x703: u32 = 0;
  let mut x704: u32 = 0;
  fiat_p384_mulx_u32(&mut x703, &mut x704, x5, (arg1[3]));
  let mut x705: u32 = 0;
  let mut x706: u32 = 0;
  fiat_p384_mulx_u32(&mut x705, &mut x706, x5, (arg1[2]));
  let mut x707: u32 = 0;
  let mut x708: u32 = 0;
  fiat_p384_mulx_u32(&mut x707, &mut x708, x5, (arg1[1]));
  let mut x709: u32 = 0;
  let mut x710: u32 = 0;
  fiat_p384_mulx_u32(&mut x709, &mut x710, x5, (arg1[0]));
  let mut x711: u32 = 0;
  let mut x712: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x711, &mut x712, 0x0, x710, x707);
  let mut x713: u32 = 0;
  let mut x714: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x713, &mut x714, x712, x708, x705);
  let mut x715: u32 = 0;
  let mut x716: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x715, &mut x716, x714, x706, x703);
  let mut x717: u32 = 0;
  let mut x718: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x717, &mut x718, x716, x704, x701);
  let mut x719: u32 = 0;
  let mut x720: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x719, &mut x720, x718, x702, x699);
  let mut x721: u32 = 0;
  let mut x722: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x721, &mut x722, x720, x700, x697);
  let mut x723: u32 = 0;
  let mut x724: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x723, &mut x724, x722, x698, x695);
  let mut x725: u32 = 0;
  let mut x726: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x725, &mut x726, x724, x696, x693);
  let mut x727: u32 = 0;
  let mut x728: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x727, &mut x728, x726, x694, x691);
  let mut x729: u32 = 0;
  let mut x730: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x729, &mut x730, x728, x692, x689);
  let mut x731: u32 = 0;
  let mut x732: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x731, &mut x732, x730, x690, x687);
  let mut x733: u32 = 0;
  let mut x734: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x733, &mut x734, x732, x688, (0x0 as u32));
  let mut x735: u32 = 0;
  let mut x736: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x735, &mut x736, 0x0, x661, x709);
  let mut x737: u32 = 0;
  let mut x738: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x737, &mut x738, x736, x663, x711);
  let mut x739: u32 = 0;
  let mut x740: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x739, &mut x740, x738, x665, x713);
  let mut x741: u32 = 0;
  let mut x742: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x741, &mut x742, x740, x667, x715);
  let mut x743: u32 = 0;
  let mut x744: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x743, &mut x744, x742, x669, x717);
  let mut x745: u32 = 0;
  let mut x746: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x745, &mut x746, x744, x671, x719);
  let mut x747: u32 = 0;
  let mut x748: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x747, &mut x748, x746, x673, x721);
  let mut x749: u32 = 0;
  let mut x750: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x749, &mut x750, x748, x675, x723);
  let mut x751: u32 = 0;
  let mut x752: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x751, &mut x752, x750, x677, x725);
  let mut x753: u32 = 0;
  let mut x754: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x753, &mut x754, x752, x679, x727);
  let mut x755: u32 = 0;
  let mut x756: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x755, &mut x756, x754, x681, x729);
  let mut x757: u32 = 0;
  let mut x758: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x757, &mut x758, x756, x683, x731);
  let mut x759: u32 = 0;
  let mut x760: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x759, &mut x760, x758, x685, x733);
  let mut x761: u32 = 0;
  let mut x762: u32 = 0;
  fiat_p384_mulx_u32(&mut x761, &mut x762, x735, 0xffffffff);
  let mut x763: u32 = 0;
  let mut x764: u32 = 0;
  fiat_p384_mulx_u32(&mut x763, &mut x764, x735, 0xffffffff);
  let mut x765: u32 = 0;
  let mut x766: u32 = 0;
  fiat_p384_mulx_u32(&mut x765, &mut x766, x735, 0xffffffff);
  let mut x767: u32 = 0;
  let mut x768: u32 = 0;
  fiat_p384_mulx_u32(&mut x767, &mut x768, x735, 0xffffffff);
  let mut x769: u32 = 0;
  let mut x770: u32 = 0;
  fiat_p384_mulx_u32(&mut x769, &mut x770, x735, 0xffffffff);
  let mut x771: u32 = 0;
  let mut x772: u32 = 0;
  fiat_p384_mulx_u32(&mut x771, &mut x772, x735, 0xffffffff);
  let mut x773: u32 = 0;
  let mut x774: u32 = 0;
  fiat_p384_mulx_u32(&mut x773, &mut x774, x735, 0xffffffff);
  let mut x775: u32 = 0;
  let mut x776: u32 = 0;
  fiat_p384_mulx_u32(&mut x775, &mut x776, x735, 0xfffffffe);
  let mut x777: u32 = 0;
  let mut x778: u32 = 0;
  fiat_p384_mulx_u32(&mut x777, &mut x778, x735, 0xffffffff);
  let mut x779: u32 = 0;
  let mut x780: u32 = 0;
  fiat_p384_mulx_u32(&mut x779, &mut x780, x735, 0xffffffff);
  let mut x781: u32 = 0;
  let mut x782: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x781, &mut x782, 0x0, x778, x775);
  let mut x783: u32 = 0;
  let mut x784: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x783, &mut x784, x782, x776, x773);
  let mut x785: u32 = 0;
  let mut x786: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x785, &mut x786, x784, x774, x771);
  let mut x787: u32 = 0;
  let mut x788: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x787, &mut x788, x786, x772, x769);
  let mut x789: u32 = 0;
  let mut x790: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x789, &mut x790, x788, x770, x767);
  let mut x791: u32 = 0;
  let mut x792: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x791, &mut x792, x790, x768, x765);
  let mut x793: u32 = 0;
  let mut x794: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x793, &mut x794, x792, x766, x763);
  let mut x795: u32 = 0;
  let mut x796: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x795, &mut x796, x794, x764, x761);
  let mut x797: u32 = 0;
  let mut x798: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x797, &mut x798, x796, x762, (0x0 as u32));
  let mut x799: u32 = 0;
  let mut x800: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x799, &mut x800, 0x0, x735, x779);
  let mut x801: u32 = 0;
  let mut x802: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x801, &mut x802, x800, x737, x780);
  let mut x803: u32 = 0;
  let mut x804: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x803, &mut x804, x802, x739, (0x0 as u32));
  let mut x805: u32 = 0;
  let mut x806: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x805, &mut x806, x804, x741, x777);
  let mut x807: u32 = 0;
  let mut x808: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x807, &mut x808, x806, x743, x781);
  let mut x809: u32 = 0;
  let mut x810: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x809, &mut x810, x808, x745, x783);
  let mut x811: u32 = 0;
  let mut x812: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x811, &mut x812, x810, x747, x785);
  let mut x813: u32 = 0;
  let mut x814: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x813, &mut x814, x812, x749, x787);
  let mut x815: u32 = 0;
  let mut x816: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x815, &mut x816, x814, x751, x789);
  let mut x817: u32 = 0;
  let mut x818: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x817, &mut x818, x816, x753, x791);
  let mut x819: u32 = 0;
  let mut x820: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x819, &mut x820, x818, x755, x793);
  let mut x821: u32 = 0;
  let mut x822: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x821, &mut x822, x820, x757, x795);
  let mut x823: u32 = 0;
  let mut x824: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x823, &mut x824, x822, x759, x797);
  let mut x825: u32 = 0;
  let mut x826: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x825, &mut x826, x824, (x760 as u32), (0x0 as u32));
  let mut x827: u32 = 0;
  let mut x828: u32 = 0;
  fiat_p384_mulx_u32(&mut x827, &mut x828, x6, (arg1[11]));
  let mut x829: u32 = 0;
  let mut x830: u32 = 0;
  fiat_p384_mulx_u32(&mut x829, &mut x830, x6, (arg1[10]));
  let mut x831: u32 = 0;
  let mut x832: u32 = 0;
  fiat_p384_mulx_u32(&mut x831, &mut x832, x6, (arg1[9]));
  let mut x833: u32 = 0;
  let mut x834: u32 = 0;
  fiat_p384_mulx_u32(&mut x833, &mut x834, x6, (arg1[8]));
  let mut x835: u32 = 0;
  let mut x836: u32 = 0;
  fiat_p384_mulx_u32(&mut x835, &mut x836, x6, (arg1[7]));
  let mut x837: u32 = 0;
  let mut x838: u32 = 0;
  fiat_p384_mulx_u32(&mut x837, &mut x838, x6, (arg1[6]));
  let mut x839: u32 = 0;
  let mut x840: u32 = 0;
  fiat_p384_mulx_u32(&mut x839, &mut x840, x6, (arg1[5]));
  let mut x841: u32 = 0;
  let mut x842: u32 = 0;
  fiat_p384_mulx_u32(&mut x841, &mut x842, x6, (arg1[4]));
  let mut x843: u32 = 0;
  let mut x844: u32 = 0;
  fiat_p384_mulx_u32(&mut x843, &mut x844, x6, (arg1[3]));
  let mut x845: u32 = 0;
  let mut x846: u32 = 0;
  fiat_p384_mulx_u32(&mut x845, &mut x846, x6, (arg1[2]));
  let mut x847: u32 = 0;
  let mut x848: u32 = 0;
  fiat_p384_mulx_u32(&mut x847, &mut x848, x6, (arg1[1]));
  let mut x849: u32 = 0;
  let mut x850: u32 = 0;
  fiat_p384_mulx_u32(&mut x849, &mut x850, x6, (arg1[0]));
  let mut x851: u32 = 0;
  let mut x852: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x851, &mut x852, 0x0, x850, x847);
  let mut x853: u32 = 0;
  let mut x854: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x853, &mut x854, x852, x848, x845);
  let mut x855: u32 = 0;
  let mut x856: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x855, &mut x856, x854, x846, x843);
  let mut x857: u32 = 0;
  let mut x858: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x857, &mut x858, x856, x844, x841);
  let mut x859: u32 = 0;
  let mut x860: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x859, &mut x860, x858, x842, x839);
  let mut x861: u32 = 0;
  let mut x862: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x861, &mut x862, x860, x840, x837);
  let mut x863: u32 = 0;
  let mut x864: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x863, &mut x864, x862, x838, x835);
  let mut x865: u32 = 0;
  let mut x866: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x865, &mut x866, x864, x836, x833);
  let mut x867: u32 = 0;
  let mut x868: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x867, &mut x868, x866, x834, x831);
  let mut x869: u32 = 0;
  let mut x870: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x869, &mut x870, x868, x832, x829);
  let mut x871: u32 = 0;
  let mut x872: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x871, &mut x872, x870, x830, x827);
  let mut x873: u32 = 0;
  let mut x874: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x873, &mut x874, x872, x828, (0x0 as u32));
  let mut x875: u32 = 0;
  let mut x876: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x875, &mut x876, 0x0, x801, x849);
  let mut x877: u32 = 0;
  let mut x878: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x877, &mut x878, x876, x803, x851);
  let mut x879: u32 = 0;
  let mut x880: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x879, &mut x880, x878, x805, x853);
  let mut x881: u32 = 0;
  let mut x882: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x881, &mut x882, x880, x807, x855);
  let mut x883: u32 = 0;
  let mut x884: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x883, &mut x884, x882, x809, x857);
  let mut x885: u32 = 0;
  let mut x886: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x885, &mut x886, x884, x811, x859);
  let mut x887: u32 = 0;
  let mut x888: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x887, &mut x888, x886, x813, x861);
  let mut x889: u32 = 0;
  let mut x890: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x889, &mut x890, x888, x815, x863);
  let mut x891: u32 = 0;
  let mut x892: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x891, &mut x892, x890, x817, x865);
  let mut x893: u32 = 0;
  let mut x894: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x893, &mut x894, x892, x819, x867);
  let mut x895: u32 = 0;
  let mut x896: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x895, &mut x896, x894, x821, x869);
  let mut x897: u32 = 0;
  let mut x898: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x897, &mut x898, x896, x823, x871);
  let mut x899: u32 = 0;
  let mut x900: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x899, &mut x900, x898, x825, x873);
  let mut x901: u32 = 0;
  let mut x902: u32 = 0;
  fiat_p384_mulx_u32(&mut x901, &mut x902, x875, 0xffffffff);
  let mut x903: u32 = 0;
  let mut x904: u32 = 0;
  fiat_p384_mulx_u32(&mut x903, &mut x904, x875, 0xffffffff);
  let mut x905: u32 = 0;
  let mut x906: u32 = 0;
  fiat_p384_mulx_u32(&mut x905, &mut x906, x875, 0xffffffff);
  let mut x907: u32 = 0;
  let mut x908: u32 = 0;
  fiat_p384_mulx_u32(&mut x907, &mut x908, x875, 0xffffffff);
  let mut x909: u32 = 0;
  let mut x910: u32 = 0;
  fiat_p384_mulx_u32(&mut x909, &mut x910, x875, 0xffffffff);
  let mut x911: u32 = 0;
  let mut x912: u32 = 0;
  fiat_p384_mulx_u32(&mut x911, &mut x912, x875, 0xffffffff);
  let mut x913: u32 = 0;
  let mut x914: u32 = 0;
  fiat_p384_mulx_u32(&mut x913, &mut x914, x875, 0xffffffff);
  let mut x915: u32 = 0;
  let mut x916: u32 = 0;
  fiat_p384_mulx_u32(&mut x915, &mut x916, x875, 0xfffffffe);
  let mut x917: u32 = 0;
  let mut x918: u32 = 0;
  fiat_p384_mulx_u32(&mut x917, &mut x918, x875, 0xffffffff);
  let mut x919: u32 = 0;
  let mut x920: u32 = 0;
  fiat_p384_mulx_u32(&mut x919, &mut x920, x875, 0xffffffff);
  let mut x921: u32 = 0;
  let mut x922: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x921, &mut x922, 0x0, x918, x915);
  let mut x923: u32 = 0;
  let mut x924: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x923, &mut x924, x922, x916, x913);
  let mut x925: u32 = 0;
  let mut x926: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x925, &mut x926, x924, x914, x911);
  let mut x927: u32 = 0;
  let mut x928: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x927, &mut x928, x926, x912, x909);
  let mut x929: u32 = 0;
  let mut x930: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x929, &mut x930, x928, x910, x907);
  let mut x931: u32 = 0;
  let mut x932: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x931, &mut x932, x930, x908, x905);
  let mut x933: u32 = 0;
  let mut x934: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x933, &mut x934, x932, x906, x903);
  let mut x935: u32 = 0;
  let mut x936: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x935, &mut x936, x934, x904, x901);
  let mut x937: u32 = 0;
  let mut x938: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x937, &mut x938, x936, x902, (0x0 as u32));
  let mut x939: u32 = 0;
  let mut x940: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x939, &mut x940, 0x0, x875, x919);
  let mut x941: u32 = 0;
  let mut x942: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x941, &mut x942, x940, x877, x920);
  let mut x943: u32 = 0;
  let mut x944: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x943, &mut x944, x942, x879, (0x0 as u32));
  let mut x945: u32 = 0;
  let mut x946: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x945, &mut x946, x944, x881, x917);
  let mut x947: u32 = 0;
  let mut x948: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x947, &mut x948, x946, x883, x921);
  let mut x949: u32 = 0;
  let mut x950: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x949, &mut x950, x948, x885, x923);
  let mut x951: u32 = 0;
  let mut x952: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x951, &mut x952, x950, x887, x925);
  let mut x953: u32 = 0;
  let mut x954: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x953, &mut x954, x952, x889, x927);
  let mut x955: u32 = 0;
  let mut x956: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x955, &mut x956, x954, x891, x929);
  let mut x957: u32 = 0;
  let mut x958: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x957, &mut x958, x956, x893, x931);
  let mut x959: u32 = 0;
  let mut x960: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x959, &mut x960, x958, x895, x933);
  let mut x961: u32 = 0;
  let mut x962: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x961, &mut x962, x960, x897, x935);
  let mut x963: u32 = 0;
  let mut x964: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x963, &mut x964, x962, x899, x937);
  let mut x965: u32 = 0;
  let mut x966: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x965, &mut x966, x964, (x900 as u32), (0x0 as u32));
  let mut x967: u32 = 0;
  let mut x968: u32 = 0;
  fiat_p384_mulx_u32(&mut x967, &mut x968, x7, (arg1[11]));
  let mut x969: u32 = 0;
  let mut x970: u32 = 0;
  fiat_p384_mulx_u32(&mut x969, &mut x970, x7, (arg1[10]));
  let mut x971: u32 = 0;
  let mut x972: u32 = 0;
  fiat_p384_mulx_u32(&mut x971, &mut x972, x7, (arg1[9]));
  let mut x973: u32 = 0;
  let mut x974: u32 = 0;
  fiat_p384_mulx_u32(&mut x973, &mut x974, x7, (arg1[8]));
  let mut x975: u32 = 0;
  let mut x976: u32 = 0;
  fiat_p384_mulx_u32(&mut x975, &mut x976, x7, (arg1[7]));
  let mut x977: u32 = 0;
  let mut x978: u32 = 0;
  fiat_p384_mulx_u32(&mut x977, &mut x978, x7, (arg1[6]));
  let mut x979: u32 = 0;
  let mut x980: u32 = 0;
  fiat_p384_mulx_u32(&mut x979, &mut x980, x7, (arg1[5]));
  let mut x981: u32 = 0;
  let mut x982: u32 = 0;
  fiat_p384_mulx_u32(&mut x981, &mut x982, x7, (arg1[4]));
  let mut x983: u32 = 0;
  let mut x984: u32 = 0;
  fiat_p384_mulx_u32(&mut x983, &mut x984, x7, (arg1[3]));
  let mut x985: u32 = 0;
  let mut x986: u32 = 0;
  fiat_p384_mulx_u32(&mut x985, &mut x986, x7, (arg1[2]));
  let mut x987: u32 = 0;
  let mut x988: u32 = 0;
  fiat_p384_mulx_u32(&mut x987, &mut x988, x7, (arg1[1]));
  let mut x989: u32 = 0;
  let mut x990: u32 = 0;
  fiat_p384_mulx_u32(&mut x989, &mut x990, x7, (arg1[0]));
  let mut x991: u32 = 0;
  let mut x992: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x991, &mut x992, 0x0, x990, x987);
  let mut x993: u32 = 0;
  let mut x994: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x993, &mut x994, x992, x988, x985);
  let mut x995: u32 = 0;
  let mut x996: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x995, &mut x996, x994, x986, x983);
  let mut x997: u32 = 0;
  let mut x998: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x997, &mut x998, x996, x984, x981);
  let mut x999: u32 = 0;
  let mut x1000: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x999, &mut x1000, x998, x982, x979);
  let mut x1001: u32 = 0;
  let mut x1002: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1001, &mut x1002, x1000, x980, x977);
  let mut x1003: u32 = 0;
  let mut x1004: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1003, &mut x1004, x1002, x978, x975);
  let mut x1005: u32 = 0;
  let mut x1006: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1005, &mut x1006, x1004, x976, x973);
  let mut x1007: u32 = 0;
  let mut x1008: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1007, &mut x1008, x1006, x974, x971);
  let mut x1009: u32 = 0;
  let mut x1010: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1009, &mut x1010, x1008, x972, x969);
  let mut x1011: u32 = 0;
  let mut x1012: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1011, &mut x1012, x1010, x970, x967);
  let mut x1013: u32 = 0;
  let mut x1014: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1013, &mut x1014, x1012, x968, (0x0 as u32));
  let mut x1015: u32 = 0;
  let mut x1016: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1015, &mut x1016, 0x0, x941, x989);
  let mut x1017: u32 = 0;
  let mut x1018: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1017, &mut x1018, x1016, x943, x991);
  let mut x1019: u32 = 0;
  let mut x1020: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1019, &mut x1020, x1018, x945, x993);
  let mut x1021: u32 = 0;
  let mut x1022: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1021, &mut x1022, x1020, x947, x995);
  let mut x1023: u32 = 0;
  let mut x1024: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1023, &mut x1024, x1022, x949, x997);
  let mut x1025: u32 = 0;
  let mut x1026: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1025, &mut x1026, x1024, x951, x999);
  let mut x1027: u32 = 0;
  let mut x1028: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1027, &mut x1028, x1026, x953, x1001);
  let mut x1029: u32 = 0;
  let mut x1030: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1029, &mut x1030, x1028, x955, x1003);
  let mut x1031: u32 = 0;
  let mut x1032: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1031, &mut x1032, x1030, x957, x1005);
  let mut x1033: u32 = 0;
  let mut x1034: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1033, &mut x1034, x1032, x959, x1007);
  let mut x1035: u32 = 0;
  let mut x1036: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1035, &mut x1036, x1034, x961, x1009);
  let mut x1037: u32 = 0;
  let mut x1038: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1037, &mut x1038, x1036, x963, x1011);
  let mut x1039: u32 = 0;
  let mut x1040: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1039, &mut x1040, x1038, x965, x1013);
  let mut x1041: u32 = 0;
  let mut x1042: u32 = 0;
  fiat_p384_mulx_u32(&mut x1041, &mut x1042, x1015, 0xffffffff);
  let mut x1043: u32 = 0;
  let mut x1044: u32 = 0;
  fiat_p384_mulx_u32(&mut x1043, &mut x1044, x1015, 0xffffffff);
  let mut x1045: u32 = 0;
  let mut x1046: u32 = 0;
  fiat_p384_mulx_u32(&mut x1045, &mut x1046, x1015, 0xffffffff);
  let mut x1047: u32 = 0;
  let mut x1048: u32 = 0;
  fiat_p384_mulx_u32(&mut x1047, &mut x1048, x1015, 0xffffffff);
  let mut x1049: u32 = 0;
  let mut x1050: u32 = 0;
  fiat_p384_mulx_u32(&mut x1049, &mut x1050, x1015, 0xffffffff);
  let mut x1051: u32 = 0;
  let mut x1052: u32 = 0;
  fiat_p384_mulx_u32(&mut x1051, &mut x1052, x1015, 0xffffffff);
  let mut x1053: u32 = 0;
  let mut x1054: u32 = 0;
  fiat_p384_mulx_u32(&mut x1053, &mut x1054, x1015, 0xffffffff);
  let mut x1055: u32 = 0;
  let mut x1056: u32 = 0;
  fiat_p384_mulx_u32(&mut x1055, &mut x1056, x1015, 0xfffffffe);
  let mut x1057: u32 = 0;
  let mut x1058: u32 = 0;
  fiat_p384_mulx_u32(&mut x1057, &mut x1058, x1015, 0xffffffff);
  let mut x1059: u32 = 0;
  let mut x1060: u32 = 0;
  fiat_p384_mulx_u32(&mut x1059, &mut x1060, x1015, 0xffffffff);
  let mut x1061: u32 = 0;
  let mut x1062: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1061, &mut x1062, 0x0, x1058, x1055);
  let mut x1063: u32 = 0;
  let mut x1064: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1063, &mut x1064, x1062, x1056, x1053);
  let mut x1065: u32 = 0;
  let mut x1066: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1065, &mut x1066, x1064, x1054, x1051);
  let mut x1067: u32 = 0;
  let mut x1068: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1067, &mut x1068, x1066, x1052, x1049);
  let mut x1069: u32 = 0;
  let mut x1070: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1069, &mut x1070, x1068, x1050, x1047);
  let mut x1071: u32 = 0;
  let mut x1072: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1071, &mut x1072, x1070, x1048, x1045);
  let mut x1073: u32 = 0;
  let mut x1074: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1073, &mut x1074, x1072, x1046, x1043);
  let mut x1075: u32 = 0;
  let mut x1076: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1075, &mut x1076, x1074, x1044, x1041);
  let mut x1077: u32 = 0;
  let mut x1078: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1077, &mut x1078, x1076, x1042, (0x0 as u32));
  let mut x1079: u32 = 0;
  let mut x1080: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1079, &mut x1080, 0x0, x1015, x1059);
  let mut x1081: u32 = 0;
  let mut x1082: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1081, &mut x1082, x1080, x1017, x1060);
  let mut x1083: u32 = 0;
  let mut x1084: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1083, &mut x1084, x1082, x1019, (0x0 as u32));
  let mut x1085: u32 = 0;
  let mut x1086: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1085, &mut x1086, x1084, x1021, x1057);
  let mut x1087: u32 = 0;
  let mut x1088: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1087, &mut x1088, x1086, x1023, x1061);
  let mut x1089: u32 = 0;
  let mut x1090: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1089, &mut x1090, x1088, x1025, x1063);
  let mut x1091: u32 = 0;
  let mut x1092: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1091, &mut x1092, x1090, x1027, x1065);
  let mut x1093: u32 = 0;
  let mut x1094: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1093, &mut x1094, x1092, x1029, x1067);
  let mut x1095: u32 = 0;
  let mut x1096: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1095, &mut x1096, x1094, x1031, x1069);
  let mut x1097: u32 = 0;
  let mut x1098: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1097, &mut x1098, x1096, x1033, x1071);
  let mut x1099: u32 = 0;
  let mut x1100: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1099, &mut x1100, x1098, x1035, x1073);
  let mut x1101: u32 = 0;
  let mut x1102: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1101, &mut x1102, x1100, x1037, x1075);
  let mut x1103: u32 = 0;
  let mut x1104: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1103, &mut x1104, x1102, x1039, x1077);
  let mut x1105: u32 = 0;
  let mut x1106: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1105, &mut x1106, x1104, (x1040 as u32), (0x0 as u32));
  let mut x1107: u32 = 0;
  let mut x1108: u32 = 0;
  fiat_p384_mulx_u32(&mut x1107, &mut x1108, x8, (arg1[11]));
  let mut x1109: u32 = 0;
  let mut x1110: u32 = 0;
  fiat_p384_mulx_u32(&mut x1109, &mut x1110, x8, (arg1[10]));
  let mut x1111: u32 = 0;
  let mut x1112: u32 = 0;
  fiat_p384_mulx_u32(&mut x1111, &mut x1112, x8, (arg1[9]));
  let mut x1113: u32 = 0;
  let mut x1114: u32 = 0;
  fiat_p384_mulx_u32(&mut x1113, &mut x1114, x8, (arg1[8]));
  let mut x1115: u32 = 0;
  let mut x1116: u32 = 0;
  fiat_p384_mulx_u32(&mut x1115, &mut x1116, x8, (arg1[7]));
  let mut x1117: u32 = 0;
  let mut x1118: u32 = 0;
  fiat_p384_mulx_u32(&mut x1117, &mut x1118, x8, (arg1[6]));
  let mut x1119: u32 = 0;
  let mut x1120: u32 = 0;
  fiat_p384_mulx_u32(&mut x1119, &mut x1120, x8, (arg1[5]));
  let mut x1121: u32 = 0;
  let mut x1122: u32 = 0;
  fiat_p384_mulx_u32(&mut x1121, &mut x1122, x8, (arg1[4]));
  let mut x1123: u32 = 0;
  let mut x1124: u32 = 0;
  fiat_p384_mulx_u32(&mut x1123, &mut x1124, x8, (arg1[3]));
  let mut x1125: u32 = 0;
  let mut x1126: u32 = 0;
  fiat_p384_mulx_u32(&mut x1125, &mut x1126, x8, (arg1[2]));
  let mut x1127: u32 = 0;
  let mut x1128: u32 = 0;
  fiat_p384_mulx_u32(&mut x1127, &mut x1128, x8, (arg1[1]));
  let mut x1129: u32 = 0;
  let mut x1130: u32 = 0;
  fiat_p384_mulx_u32(&mut x1129, &mut x1130, x8, (arg1[0]));
  let mut x1131: u32 = 0;
  let mut x1132: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1131, &mut x1132, 0x0, x1130, x1127);
  let mut x1133: u32 = 0;
  let mut x1134: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1133, &mut x1134, x1132, x1128, x1125);
  let mut x1135: u32 = 0;
  let mut x1136: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1135, &mut x1136, x1134, x1126, x1123);
  let mut x1137: u32 = 0;
  let mut x1138: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1137, &mut x1138, x1136, x1124, x1121);
  let mut x1139: u32 = 0;
  let mut x1140: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1139, &mut x1140, x1138, x1122, x1119);
  let mut x1141: u32 = 0;
  let mut x1142: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1141, &mut x1142, x1140, x1120, x1117);
  let mut x1143: u32 = 0;
  let mut x1144: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1143, &mut x1144, x1142, x1118, x1115);
  let mut x1145: u32 = 0;
  let mut x1146: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1145, &mut x1146, x1144, x1116, x1113);
  let mut x1147: u32 = 0;
  let mut x1148: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1147, &mut x1148, x1146, x1114, x1111);
  let mut x1149: u32 = 0;
  let mut x1150: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1149, &mut x1150, x1148, x1112, x1109);
  let mut x1151: u32 = 0;
  let mut x1152: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1151, &mut x1152, x1150, x1110, x1107);
  let mut x1153: u32 = 0;
  let mut x1154: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1153, &mut x1154, x1152, x1108, (0x0 as u32));
  let mut x1155: u32 = 0;
  let mut x1156: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1155, &mut x1156, 0x0, x1081, x1129);
  let mut x1157: u32 = 0;
  let mut x1158: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1157, &mut x1158, x1156, x1083, x1131);
  let mut x1159: u32 = 0;
  let mut x1160: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1159, &mut x1160, x1158, x1085, x1133);
  let mut x1161: u32 = 0;
  let mut x1162: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1161, &mut x1162, x1160, x1087, x1135);
  let mut x1163: u32 = 0;
  let mut x1164: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1163, &mut x1164, x1162, x1089, x1137);
  let mut x1165: u32 = 0;
  let mut x1166: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1165, &mut x1166, x1164, x1091, x1139);
  let mut x1167: u32 = 0;
  let mut x1168: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1167, &mut x1168, x1166, x1093, x1141);
  let mut x1169: u32 = 0;
  let mut x1170: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1169, &mut x1170, x1168, x1095, x1143);
  let mut x1171: u32 = 0;
  let mut x1172: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1171, &mut x1172, x1170, x1097, x1145);
  let mut x1173: u32 = 0;
  let mut x1174: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1173, &mut x1174, x1172, x1099, x1147);
  let mut x1175: u32 = 0;
  let mut x1176: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1175, &mut x1176, x1174, x1101, x1149);
  let mut x1177: u32 = 0;
  let mut x1178: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1177, &mut x1178, x1176, x1103, x1151);
  let mut x1179: u32 = 0;
  let mut x1180: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1179, &mut x1180, x1178, x1105, x1153);
  let mut x1181: u32 = 0;
  let mut x1182: u32 = 0;
  fiat_p384_mulx_u32(&mut x1181, &mut x1182, x1155, 0xffffffff);
  let mut x1183: u32 = 0;
  let mut x1184: u32 = 0;
  fiat_p384_mulx_u32(&mut x1183, &mut x1184, x1155, 0xffffffff);
  let mut x1185: u32 = 0;
  let mut x1186: u32 = 0;
  fiat_p384_mulx_u32(&mut x1185, &mut x1186, x1155, 0xffffffff);
  let mut x1187: u32 = 0;
  let mut x1188: u32 = 0;
  fiat_p384_mulx_u32(&mut x1187, &mut x1188, x1155, 0xffffffff);
  let mut x1189: u32 = 0;
  let mut x1190: u32 = 0;
  fiat_p384_mulx_u32(&mut x1189, &mut x1190, x1155, 0xffffffff);
  let mut x1191: u32 = 0;
  let mut x1192: u32 = 0;
  fiat_p384_mulx_u32(&mut x1191, &mut x1192, x1155, 0xffffffff);
  let mut x1193: u32 = 0;
  let mut x1194: u32 = 0;
  fiat_p384_mulx_u32(&mut x1193, &mut x1194, x1155, 0xffffffff);
  let mut x1195: u32 = 0;
  let mut x1196: u32 = 0;
  fiat_p384_mulx_u32(&mut x1195, &mut x1196, x1155, 0xfffffffe);
  let mut x1197: u32 = 0;
  let mut x1198: u32 = 0;
  fiat_p384_mulx_u32(&mut x1197, &mut x1198, x1155, 0xffffffff);
  let mut x1199: u32 = 0;
  let mut x1200: u32 = 0;
  fiat_p384_mulx_u32(&mut x1199, &mut x1200, x1155, 0xffffffff);
  let mut x1201: u32 = 0;
  let mut x1202: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1201, &mut x1202, 0x0, x1198, x1195);
  let mut x1203: u32 = 0;
  let mut x1204: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1203, &mut x1204, x1202, x1196, x1193);
  let mut x1205: u32 = 0;
  let mut x1206: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1205, &mut x1206, x1204, x1194, x1191);
  let mut x1207: u32 = 0;
  let mut x1208: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1207, &mut x1208, x1206, x1192, x1189);
  let mut x1209: u32 = 0;
  let mut x1210: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1209, &mut x1210, x1208, x1190, x1187);
  let mut x1211: u32 = 0;
  let mut x1212: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1211, &mut x1212, x1210, x1188, x1185);
  let mut x1213: u32 = 0;
  let mut x1214: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1213, &mut x1214, x1212, x1186, x1183);
  let mut x1215: u32 = 0;
  let mut x1216: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1215, &mut x1216, x1214, x1184, x1181);
  let mut x1217: u32 = 0;
  let mut x1218: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1217, &mut x1218, x1216, x1182, (0x0 as u32));
  let mut x1219: u32 = 0;
  let mut x1220: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1219, &mut x1220, 0x0, x1155, x1199);
  let mut x1221: u32 = 0;
  let mut x1222: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1221, &mut x1222, x1220, x1157, x1200);
  let mut x1223: u32 = 0;
  let mut x1224: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1223, &mut x1224, x1222, x1159, (0x0 as u32));
  let mut x1225: u32 = 0;
  let mut x1226: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1225, &mut x1226, x1224, x1161, x1197);
  let mut x1227: u32 = 0;
  let mut x1228: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1227, &mut x1228, x1226, x1163, x1201);
  let mut x1229: u32 = 0;
  let mut x1230: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1229, &mut x1230, x1228, x1165, x1203);
  let mut x1231: u32 = 0;
  let mut x1232: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1231, &mut x1232, x1230, x1167, x1205);
  let mut x1233: u32 = 0;
  let mut x1234: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1233, &mut x1234, x1232, x1169, x1207);
  let mut x1235: u32 = 0;
  let mut x1236: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1235, &mut x1236, x1234, x1171, x1209);
  let mut x1237: u32 = 0;
  let mut x1238: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1237, &mut x1238, x1236, x1173, x1211);
  let mut x1239: u32 = 0;
  let mut x1240: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1239, &mut x1240, x1238, x1175, x1213);
  let mut x1241: u32 = 0;
  let mut x1242: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1241, &mut x1242, x1240, x1177, x1215);
  let mut x1243: u32 = 0;
  let mut x1244: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1243, &mut x1244, x1242, x1179, x1217);
  let mut x1245: u32 = 0;
  let mut x1246: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1245, &mut x1246, x1244, (x1180 as u32), (0x0 as u32));
  let mut x1247: u32 = 0;
  let mut x1248: u32 = 0;
  fiat_p384_mulx_u32(&mut x1247, &mut x1248, x9, (arg1[11]));
  let mut x1249: u32 = 0;
  let mut x1250: u32 = 0;
  fiat_p384_mulx_u32(&mut x1249, &mut x1250, x9, (arg1[10]));
  let mut x1251: u32 = 0;
  let mut x1252: u32 = 0;
  fiat_p384_mulx_u32(&mut x1251, &mut x1252, x9, (arg1[9]));
  let mut x1253: u32 = 0;
  let mut x1254: u32 = 0;
  fiat_p384_mulx_u32(&mut x1253, &mut x1254, x9, (arg1[8]));
  let mut x1255: u32 = 0;
  let mut x1256: u32 = 0;
  fiat_p384_mulx_u32(&mut x1255, &mut x1256, x9, (arg1[7]));
  let mut x1257: u32 = 0;
  let mut x1258: u32 = 0;
  fiat_p384_mulx_u32(&mut x1257, &mut x1258, x9, (arg1[6]));
  let mut x1259: u32 = 0;
  let mut x1260: u32 = 0;
  fiat_p384_mulx_u32(&mut x1259, &mut x1260, x9, (arg1[5]));
  let mut x1261: u32 = 0;
  let mut x1262: u32 = 0;
  fiat_p384_mulx_u32(&mut x1261, &mut x1262, x9, (arg1[4]));
  let mut x1263: u32 = 0;
  let mut x1264: u32 = 0;
  fiat_p384_mulx_u32(&mut x1263, &mut x1264, x9, (arg1[3]));
  let mut x1265: u32 = 0;
  let mut x1266: u32 = 0;
  fiat_p384_mulx_u32(&mut x1265, &mut x1266, x9, (arg1[2]));
  let mut x1267: u32 = 0;
  let mut x1268: u32 = 0;
  fiat_p384_mulx_u32(&mut x1267, &mut x1268, x9, (arg1[1]));
  let mut x1269: u32 = 0;
  let mut x1270: u32 = 0;
  fiat_p384_mulx_u32(&mut x1269, &mut x1270, x9, (arg1[0]));
  let mut x1271: u32 = 0;
  let mut x1272: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1271, &mut x1272, 0x0, x1270, x1267);
  let mut x1273: u32 = 0;
  let mut x1274: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1273, &mut x1274, x1272, x1268, x1265);
  let mut x1275: u32 = 0;
  let mut x1276: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1275, &mut x1276, x1274, x1266, x1263);
  let mut x1277: u32 = 0;
  let mut x1278: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1277, &mut x1278, x1276, x1264, x1261);
  let mut x1279: u32 = 0;
  let mut x1280: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1279, &mut x1280, x1278, x1262, x1259);
  let mut x1281: u32 = 0;
  let mut x1282: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1281, &mut x1282, x1280, x1260, x1257);
  let mut x1283: u32 = 0;
  let mut x1284: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1283, &mut x1284, x1282, x1258, x1255);
  let mut x1285: u32 = 0;
  let mut x1286: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1285, &mut x1286, x1284, x1256, x1253);
  let mut x1287: u32 = 0;
  let mut x1288: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1287, &mut x1288, x1286, x1254, x1251);
  let mut x1289: u32 = 0;
  let mut x1290: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1289, &mut x1290, x1288, x1252, x1249);
  let mut x1291: u32 = 0;
  let mut x1292: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1291, &mut x1292, x1290, x1250, x1247);
  let mut x1293: u32 = 0;
  let mut x1294: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1293, &mut x1294, x1292, x1248, (0x0 as u32));
  let mut x1295: u32 = 0;
  let mut x1296: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1295, &mut x1296, 0x0, x1221, x1269);
  let mut x1297: u32 = 0;
  let mut x1298: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1297, &mut x1298, x1296, x1223, x1271);
  let mut x1299: u32 = 0;
  let mut x1300: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1299, &mut x1300, x1298, x1225, x1273);
  let mut x1301: u32 = 0;
  let mut x1302: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1301, &mut x1302, x1300, x1227, x1275);
  let mut x1303: u32 = 0;
  let mut x1304: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1303, &mut x1304, x1302, x1229, x1277);
  let mut x1305: u32 = 0;
  let mut x1306: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1305, &mut x1306, x1304, x1231, x1279);
  let mut x1307: u32 = 0;
  let mut x1308: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1307, &mut x1308, x1306, x1233, x1281);
  let mut x1309: u32 = 0;
  let mut x1310: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1309, &mut x1310, x1308, x1235, x1283);
  let mut x1311: u32 = 0;
  let mut x1312: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1311, &mut x1312, x1310, x1237, x1285);
  let mut x1313: u32 = 0;
  let mut x1314: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1313, &mut x1314, x1312, x1239, x1287);
  let mut x1315: u32 = 0;
  let mut x1316: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1315, &mut x1316, x1314, x1241, x1289);
  let mut x1317: u32 = 0;
  let mut x1318: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1317, &mut x1318, x1316, x1243, x1291);
  let mut x1319: u32 = 0;
  let mut x1320: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1319, &mut x1320, x1318, x1245, x1293);
  let mut x1321: u32 = 0;
  let mut x1322: u32 = 0;
  fiat_p384_mulx_u32(&mut x1321, &mut x1322, x1295, 0xffffffff);
  let mut x1323: u32 = 0;
  let mut x1324: u32 = 0;
  fiat_p384_mulx_u32(&mut x1323, &mut x1324, x1295, 0xffffffff);
  let mut x1325: u32 = 0;
  let mut x1326: u32 = 0;
  fiat_p384_mulx_u32(&mut x1325, &mut x1326, x1295, 0xffffffff);
  let mut x1327: u32 = 0;
  let mut x1328: u32 = 0;
  fiat_p384_mulx_u32(&mut x1327, &mut x1328, x1295, 0xffffffff);
  let mut x1329: u32 = 0;
  let mut x1330: u32 = 0;
  fiat_p384_mulx_u32(&mut x1329, &mut x1330, x1295, 0xffffffff);
  let mut x1331: u32 = 0;
  let mut x1332: u32 = 0;
  fiat_p384_mulx_u32(&mut x1331, &mut x1332, x1295, 0xffffffff);
  let mut x1333: u32 = 0;
  let mut x1334: u32 = 0;
  fiat_p384_mulx_u32(&mut x1333, &mut x1334, x1295, 0xffffffff);
  let mut x1335: u32 = 0;
  let mut x1336: u32 = 0;
  fiat_p384_mulx_u32(&mut x1335, &mut x1336, x1295, 0xfffffffe);
  let mut x1337: u32 = 0;
  let mut x1338: u32 = 0;
  fiat_p384_mulx_u32(&mut x1337, &mut x1338, x1295, 0xffffffff);
  let mut x1339: u32 = 0;
  let mut x1340: u32 = 0;
  fiat_p384_mulx_u32(&mut x1339, &mut x1340, x1295, 0xffffffff);
  let mut x1341: u32 = 0;
  let mut x1342: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1341, &mut x1342, 0x0, x1338, x1335);
  let mut x1343: u32 = 0;
  let mut x1344: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1343, &mut x1344, x1342, x1336, x1333);
  let mut x1345: u32 = 0;
  let mut x1346: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1345, &mut x1346, x1344, x1334, x1331);
  let mut x1347: u32 = 0;
  let mut x1348: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1347, &mut x1348, x1346, x1332, x1329);
  let mut x1349: u32 = 0;
  let mut x1350: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1349, &mut x1350, x1348, x1330, x1327);
  let mut x1351: u32 = 0;
  let mut x1352: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1351, &mut x1352, x1350, x1328, x1325);
  let mut x1353: u32 = 0;
  let mut x1354: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1353, &mut x1354, x1352, x1326, x1323);
  let mut x1355: u32 = 0;
  let mut x1356: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1355, &mut x1356, x1354, x1324, x1321);
  let mut x1357: u32 = 0;
  let mut x1358: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1357, &mut x1358, x1356, x1322, (0x0 as u32));
  let mut x1359: u32 = 0;
  let mut x1360: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1359, &mut x1360, 0x0, x1295, x1339);
  let mut x1361: u32 = 0;
  let mut x1362: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1361, &mut x1362, x1360, x1297, x1340);
  let mut x1363: u32 = 0;
  let mut x1364: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1363, &mut x1364, x1362, x1299, (0x0 as u32));
  let mut x1365: u32 = 0;
  let mut x1366: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1365, &mut x1366, x1364, x1301, x1337);
  let mut x1367: u32 = 0;
  let mut x1368: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1367, &mut x1368, x1366, x1303, x1341);
  let mut x1369: u32 = 0;
  let mut x1370: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1369, &mut x1370, x1368, x1305, x1343);
  let mut x1371: u32 = 0;
  let mut x1372: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1371, &mut x1372, x1370, x1307, x1345);
  let mut x1373: u32 = 0;
  let mut x1374: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1373, &mut x1374, x1372, x1309, x1347);
  let mut x1375: u32 = 0;
  let mut x1376: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1375, &mut x1376, x1374, x1311, x1349);
  let mut x1377: u32 = 0;
  let mut x1378: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1377, &mut x1378, x1376, x1313, x1351);
  let mut x1379: u32 = 0;
  let mut x1380: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1379, &mut x1380, x1378, x1315, x1353);
  let mut x1381: u32 = 0;
  let mut x1382: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1381, &mut x1382, x1380, x1317, x1355);
  let mut x1383: u32 = 0;
  let mut x1384: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1383, &mut x1384, x1382, x1319, x1357);
  let mut x1385: u32 = 0;
  let mut x1386: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1385, &mut x1386, x1384, (x1320 as u32), (0x0 as u32));
  let mut x1387: u32 = 0;
  let mut x1388: u32 = 0;
  fiat_p384_mulx_u32(&mut x1387, &mut x1388, x10, (arg1[11]));
  let mut x1389: u32 = 0;
  let mut x1390: u32 = 0;
  fiat_p384_mulx_u32(&mut x1389, &mut x1390, x10, (arg1[10]));
  let mut x1391: u32 = 0;
  let mut x1392: u32 = 0;
  fiat_p384_mulx_u32(&mut x1391, &mut x1392, x10, (arg1[9]));
  let mut x1393: u32 = 0;
  let mut x1394: u32 = 0;
  fiat_p384_mulx_u32(&mut x1393, &mut x1394, x10, (arg1[8]));
  let mut x1395: u32 = 0;
  let mut x1396: u32 = 0;
  fiat_p384_mulx_u32(&mut x1395, &mut x1396, x10, (arg1[7]));
  let mut x1397: u32 = 0;
  let mut x1398: u32 = 0;
  fiat_p384_mulx_u32(&mut x1397, &mut x1398, x10, (arg1[6]));
  let mut x1399: u32 = 0;
  let mut x1400: u32 = 0;
  fiat_p384_mulx_u32(&mut x1399, &mut x1400, x10, (arg1[5]));
  let mut x1401: u32 = 0;
  let mut x1402: u32 = 0;
  fiat_p384_mulx_u32(&mut x1401, &mut x1402, x10, (arg1[4]));
  let mut x1403: u32 = 0;
  let mut x1404: u32 = 0;
  fiat_p384_mulx_u32(&mut x1403, &mut x1404, x10, (arg1[3]));
  let mut x1405: u32 = 0;
  let mut x1406: u32 = 0;
  fiat_p384_mulx_u32(&mut x1405, &mut x1406, x10, (arg1[2]));
  let mut x1407: u32 = 0;
  let mut x1408: u32 = 0;
  fiat_p384_mulx_u32(&mut x1407, &mut x1408, x10, (arg1[1]));
  let mut x1409: u32 = 0;
  let mut x1410: u32 = 0;
  fiat_p384_mulx_u32(&mut x1409, &mut x1410, x10, (arg1[0]));
  let mut x1411: u32 = 0;
  let mut x1412: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1411, &mut x1412, 0x0, x1410, x1407);
  let mut x1413: u32 = 0;
  let mut x1414: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1413, &mut x1414, x1412, x1408, x1405);
  let mut x1415: u32 = 0;
  let mut x1416: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1415, &mut x1416, x1414, x1406, x1403);
  let mut x1417: u32 = 0;
  let mut x1418: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1417, &mut x1418, x1416, x1404, x1401);
  let mut x1419: u32 = 0;
  let mut x1420: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1419, &mut x1420, x1418, x1402, x1399);
  let mut x1421: u32 = 0;
  let mut x1422: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1421, &mut x1422, x1420, x1400, x1397);
  let mut x1423: u32 = 0;
  let mut x1424: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1423, &mut x1424, x1422, x1398, x1395);
  let mut x1425: u32 = 0;
  let mut x1426: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1425, &mut x1426, x1424, x1396, x1393);
  let mut x1427: u32 = 0;
  let mut x1428: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1427, &mut x1428, x1426, x1394, x1391);
  let mut x1429: u32 = 0;
  let mut x1430: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1429, &mut x1430, x1428, x1392, x1389);
  let mut x1431: u32 = 0;
  let mut x1432: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1431, &mut x1432, x1430, x1390, x1387);
  let mut x1433: u32 = 0;
  let mut x1434: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1433, &mut x1434, x1432, x1388, (0x0 as u32));
  let mut x1435: u32 = 0;
  let mut x1436: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1435, &mut x1436, 0x0, x1361, x1409);
  let mut x1437: u32 = 0;
  let mut x1438: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1437, &mut x1438, x1436, x1363, x1411);
  let mut x1439: u32 = 0;
  let mut x1440: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1439, &mut x1440, x1438, x1365, x1413);
  let mut x1441: u32 = 0;
  let mut x1442: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1441, &mut x1442, x1440, x1367, x1415);
  let mut x1443: u32 = 0;
  let mut x1444: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1443, &mut x1444, x1442, x1369, x1417);
  let mut x1445: u32 = 0;
  let mut x1446: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1445, &mut x1446, x1444, x1371, x1419);
  let mut x1447: u32 = 0;
  let mut x1448: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1447, &mut x1448, x1446, x1373, x1421);
  let mut x1449: u32 = 0;
  let mut x1450: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1449, &mut x1450, x1448, x1375, x1423);
  let mut x1451: u32 = 0;
  let mut x1452: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1451, &mut x1452, x1450, x1377, x1425);
  let mut x1453: u32 = 0;
  let mut x1454: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1453, &mut x1454, x1452, x1379, x1427);
  let mut x1455: u32 = 0;
  let mut x1456: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1455, &mut x1456, x1454, x1381, x1429);
  let mut x1457: u32 = 0;
  let mut x1458: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1457, &mut x1458, x1456, x1383, x1431);
  let mut x1459: u32 = 0;
  let mut x1460: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1459, &mut x1460, x1458, x1385, x1433);
  let mut x1461: u32 = 0;
  let mut x1462: u32 = 0;
  fiat_p384_mulx_u32(&mut x1461, &mut x1462, x1435, 0xffffffff);
  let mut x1463: u32 = 0;
  let mut x1464: u32 = 0;
  fiat_p384_mulx_u32(&mut x1463, &mut x1464, x1435, 0xffffffff);
  let mut x1465: u32 = 0;
  let mut x1466: u32 = 0;
  fiat_p384_mulx_u32(&mut x1465, &mut x1466, x1435, 0xffffffff);
  let mut x1467: u32 = 0;
  let mut x1468: u32 = 0;
  fiat_p384_mulx_u32(&mut x1467, &mut x1468, x1435, 0xffffffff);
  let mut x1469: u32 = 0;
  let mut x1470: u32 = 0;
  fiat_p384_mulx_u32(&mut x1469, &mut x1470, x1435, 0xffffffff);
  let mut x1471: u32 = 0;
  let mut x1472: u32 = 0;
  fiat_p384_mulx_u32(&mut x1471, &mut x1472, x1435, 0xffffffff);
  let mut x1473: u32 = 0;
  let mut x1474: u32 = 0;
  fiat_p384_mulx_u32(&mut x1473, &mut x1474, x1435, 0xffffffff);
  let mut x1475: u32 = 0;
  let mut x1476: u32 = 0;
  fiat_p384_mulx_u32(&mut x1475, &mut x1476, x1435, 0xfffffffe);
  let mut x1477: u32 = 0;
  let mut x1478: u32 = 0;
  fiat_p384_mulx_u32(&mut x1477, &mut x1478, x1435, 0xffffffff);
  let mut x1479: u32 = 0;
  let mut x1480: u32 = 0;
  fiat_p384_mulx_u32(&mut x1479, &mut x1480, x1435, 0xffffffff);
  let mut x1481: u32 = 0;
  let mut x1482: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1481, &mut x1482, 0x0, x1478, x1475);
  let mut x1483: u32 = 0;
  let mut x1484: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1483, &mut x1484, x1482, x1476, x1473);
  let mut x1485: u32 = 0;
  let mut x1486: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1485, &mut x1486, x1484, x1474, x1471);
  let mut x1487: u32 = 0;
  let mut x1488: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1487, &mut x1488, x1486, x1472, x1469);
  let mut x1489: u32 = 0;
  let mut x1490: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1489, &mut x1490, x1488, x1470, x1467);
  let mut x1491: u32 = 0;
  let mut x1492: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1491, &mut x1492, x1490, x1468, x1465);
  let mut x1493: u32 = 0;
  let mut x1494: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1493, &mut x1494, x1492, x1466, x1463);
  let mut x1495: u32 = 0;
  let mut x1496: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1495, &mut x1496, x1494, x1464, x1461);
  let mut x1497: u32 = 0;
  let mut x1498: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1497, &mut x1498, x1496, x1462, (0x0 as u32));
  let mut x1499: u32 = 0;
  let mut x1500: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1499, &mut x1500, 0x0, x1435, x1479);
  let mut x1501: u32 = 0;
  let mut x1502: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1501, &mut x1502, x1500, x1437, x1480);
  let mut x1503: u32 = 0;
  let mut x1504: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1503, &mut x1504, x1502, x1439, (0x0 as u32));
  let mut x1505: u32 = 0;
  let mut x1506: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1505, &mut x1506, x1504, x1441, x1477);
  let mut x1507: u32 = 0;
  let mut x1508: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1507, &mut x1508, x1506, x1443, x1481);
  let mut x1509: u32 = 0;
  let mut x1510: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1509, &mut x1510, x1508, x1445, x1483);
  let mut x1511: u32 = 0;
  let mut x1512: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1511, &mut x1512, x1510, x1447, x1485);
  let mut x1513: u32 = 0;
  let mut x1514: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1513, &mut x1514, x1512, x1449, x1487);
  let mut x1515: u32 = 0;
  let mut x1516: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1515, &mut x1516, x1514, x1451, x1489);
  let mut x1517: u32 = 0;
  let mut x1518: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1517, &mut x1518, x1516, x1453, x1491);
  let mut x1519: u32 = 0;
  let mut x1520: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1519, &mut x1520, x1518, x1455, x1493);
  let mut x1521: u32 = 0;
  let mut x1522: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1521, &mut x1522, x1520, x1457, x1495);
  let mut x1523: u32 = 0;
  let mut x1524: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1523, &mut x1524, x1522, x1459, x1497);
  let mut x1525: u32 = 0;
  let mut x1526: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1525, &mut x1526, x1524, (x1460 as u32), (0x0 as u32));
  let mut x1527: u32 = 0;
  let mut x1528: u32 = 0;
  fiat_p384_mulx_u32(&mut x1527, &mut x1528, x11, (arg1[11]));
  let mut x1529: u32 = 0;
  let mut x1530: u32 = 0;
  fiat_p384_mulx_u32(&mut x1529, &mut x1530, x11, (arg1[10]));
  let mut x1531: u32 = 0;
  let mut x1532: u32 = 0;
  fiat_p384_mulx_u32(&mut x1531, &mut x1532, x11, (arg1[9]));
  let mut x1533: u32 = 0;
  let mut x1534: u32 = 0;
  fiat_p384_mulx_u32(&mut x1533, &mut x1534, x11, (arg1[8]));
  let mut x1535: u32 = 0;
  let mut x1536: u32 = 0;
  fiat_p384_mulx_u32(&mut x1535, &mut x1536, x11, (arg1[7]));
  let mut x1537: u32 = 0;
  let mut x1538: u32 = 0;
  fiat_p384_mulx_u32(&mut x1537, &mut x1538, x11, (arg1[6]));
  let mut x1539: u32 = 0;
  let mut x1540: u32 = 0;
  fiat_p384_mulx_u32(&mut x1539, &mut x1540, x11, (arg1[5]));
  let mut x1541: u32 = 0;
  let mut x1542: u32 = 0;
  fiat_p384_mulx_u32(&mut x1541, &mut x1542, x11, (arg1[4]));
  let mut x1543: u32 = 0;
  let mut x1544: u32 = 0;
  fiat_p384_mulx_u32(&mut x1543, &mut x1544, x11, (arg1[3]));
  let mut x1545: u32 = 0;
  let mut x1546: u32 = 0;
  fiat_p384_mulx_u32(&mut x1545, &mut x1546, x11, (arg1[2]));
  let mut x1547: u32 = 0;
  let mut x1548: u32 = 0;
  fiat_p384_mulx_u32(&mut x1547, &mut x1548, x11, (arg1[1]));
  let mut x1549: u32 = 0;
  let mut x1550: u32 = 0;
  fiat_p384_mulx_u32(&mut x1549, &mut x1550, x11, (arg1[0]));
  let mut x1551: u32 = 0;
  let mut x1552: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1551, &mut x1552, 0x0, x1550, x1547);
  let mut x1553: u32 = 0;
  let mut x1554: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1553, &mut x1554, x1552, x1548, x1545);
  let mut x1555: u32 = 0;
  let mut x1556: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1555, &mut x1556, x1554, x1546, x1543);
  let mut x1557: u32 = 0;
  let mut x1558: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1557, &mut x1558, x1556, x1544, x1541);
  let mut x1559: u32 = 0;
  let mut x1560: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1559, &mut x1560, x1558, x1542, x1539);
  let mut x1561: u32 = 0;
  let mut x1562: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1561, &mut x1562, x1560, x1540, x1537);
  let mut x1563: u32 = 0;
  let mut x1564: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1563, &mut x1564, x1562, x1538, x1535);
  let mut x1565: u32 = 0;
  let mut x1566: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1565, &mut x1566, x1564, x1536, x1533);
  let mut x1567: u32 = 0;
  let mut x1568: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1567, &mut x1568, x1566, x1534, x1531);
  let mut x1569: u32 = 0;
  let mut x1570: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1569, &mut x1570, x1568, x1532, x1529);
  let mut x1571: u32 = 0;
  let mut x1572: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1571, &mut x1572, x1570, x1530, x1527);
  let mut x1573: u32 = 0;
  let mut x1574: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1573, &mut x1574, x1572, x1528, (0x0 as u32));
  let mut x1575: u32 = 0;
  let mut x1576: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1575, &mut x1576, 0x0, x1501, x1549);
  let mut x1577: u32 = 0;
  let mut x1578: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1577, &mut x1578, x1576, x1503, x1551);
  let mut x1579: u32 = 0;
  let mut x1580: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1579, &mut x1580, x1578, x1505, x1553);
  let mut x1581: u32 = 0;
  let mut x1582: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1581, &mut x1582, x1580, x1507, x1555);
  let mut x1583: u32 = 0;
  let mut x1584: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1583, &mut x1584, x1582, x1509, x1557);
  let mut x1585: u32 = 0;
  let mut x1586: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1585, &mut x1586, x1584, x1511, x1559);
  let mut x1587: u32 = 0;
  let mut x1588: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1587, &mut x1588, x1586, x1513, x1561);
  let mut x1589: u32 = 0;
  let mut x1590: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1589, &mut x1590, x1588, x1515, x1563);
  let mut x1591: u32 = 0;
  let mut x1592: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1591, &mut x1592, x1590, x1517, x1565);
  let mut x1593: u32 = 0;
  let mut x1594: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1593, &mut x1594, x1592, x1519, x1567);
  let mut x1595: u32 = 0;
  let mut x1596: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1595, &mut x1596, x1594, x1521, x1569);
  let mut x1597: u32 = 0;
  let mut x1598: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1597, &mut x1598, x1596, x1523, x1571);
  let mut x1599: u32 = 0;
  let mut x1600: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1599, &mut x1600, x1598, x1525, x1573);
  let mut x1601: u32 = 0;
  let mut x1602: u32 = 0;
  fiat_p384_mulx_u32(&mut x1601, &mut x1602, x1575, 0xffffffff);
  let mut x1603: u32 = 0;
  let mut x1604: u32 = 0;
  fiat_p384_mulx_u32(&mut x1603, &mut x1604, x1575, 0xffffffff);
  let mut x1605: u32 = 0;
  let mut x1606: u32 = 0;
  fiat_p384_mulx_u32(&mut x1605, &mut x1606, x1575, 0xffffffff);
  let mut x1607: u32 = 0;
  let mut x1608: u32 = 0;
  fiat_p384_mulx_u32(&mut x1607, &mut x1608, x1575, 0xffffffff);
  let mut x1609: u32 = 0;
  let mut x1610: u32 = 0;
  fiat_p384_mulx_u32(&mut x1609, &mut x1610, x1575, 0xffffffff);
  let mut x1611: u32 = 0;
  let mut x1612: u32 = 0;
  fiat_p384_mulx_u32(&mut x1611, &mut x1612, x1575, 0xffffffff);
  let mut x1613: u32 = 0;
  let mut x1614: u32 = 0;
  fiat_p384_mulx_u32(&mut x1613, &mut x1614, x1575, 0xffffffff);
  let mut x1615: u32 = 0;
  let mut x1616: u32 = 0;
  fiat_p384_mulx_u32(&mut x1615, &mut x1616, x1575, 0xfffffffe);
  let mut x1617: u32 = 0;
  let mut x1618: u32 = 0;
  fiat_p384_mulx_u32(&mut x1617, &mut x1618, x1575, 0xffffffff);
  let mut x1619: u32 = 0;
  let mut x1620: u32 = 0;
  fiat_p384_mulx_u32(&mut x1619, &mut x1620, x1575, 0xffffffff);
  let mut x1621: u32 = 0;
  let mut x1622: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1621, &mut x1622, 0x0, x1618, x1615);
  let mut x1623: u32 = 0;
  let mut x1624: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1623, &mut x1624, x1622, x1616, x1613);
  let mut x1625: u32 = 0;
  let mut x1626: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1625, &mut x1626, x1624, x1614, x1611);
  let mut x1627: u32 = 0;
  let mut x1628: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1627, &mut x1628, x1626, x1612, x1609);
  let mut x1629: u32 = 0;
  let mut x1630: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1629, &mut x1630, x1628, x1610, x1607);
  let mut x1631: u32 = 0;
  let mut x1632: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1631, &mut x1632, x1630, x1608, x1605);
  let mut x1633: u32 = 0;
  let mut x1634: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1633, &mut x1634, x1632, x1606, x1603);
  let mut x1635: u32 = 0;
  let mut x1636: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1635, &mut x1636, x1634, x1604, x1601);
  let mut x1637: u32 = 0;
  let mut x1638: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1637, &mut x1638, x1636, x1602, (0x0 as u32));
  let mut x1639: u32 = 0;
  let mut x1640: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1639, &mut x1640, 0x0, x1575, x1619);
  let mut x1641: u32 = 0;
  let mut x1642: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1641, &mut x1642, x1640, x1577, x1620);
  let mut x1643: u32 = 0;
  let mut x1644: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1643, &mut x1644, x1642, x1579, (0x0 as u32));
  let mut x1645: u32 = 0;
  let mut x1646: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1645, &mut x1646, x1644, x1581, x1617);
  let mut x1647: u32 = 0;
  let mut x1648: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1647, &mut x1648, x1646, x1583, x1621);
  let mut x1649: u32 = 0;
  let mut x1650: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1649, &mut x1650, x1648, x1585, x1623);
  let mut x1651: u32 = 0;
  let mut x1652: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1651, &mut x1652, x1650, x1587, x1625);
  let mut x1653: u32 = 0;
  let mut x1654: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1653, &mut x1654, x1652, x1589, x1627);
  let mut x1655: u32 = 0;
  let mut x1656: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1655, &mut x1656, x1654, x1591, x1629);
  let mut x1657: u32 = 0;
  let mut x1658: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1657, &mut x1658, x1656, x1593, x1631);
  let mut x1659: u32 = 0;
  let mut x1660: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1659, &mut x1660, x1658, x1595, x1633);
  let mut x1661: u32 = 0;
  let mut x1662: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1661, &mut x1662, x1660, x1597, x1635);
  let mut x1663: u32 = 0;
  let mut x1664: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1663, &mut x1664, x1662, x1599, x1637);
  let mut x1665: u32 = 0;
  let mut x1666: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1665, &mut x1666, x1664, (x1600 as u32), (0x0 as u32));
  let mut x1667: u32 = 0;
  let mut x1668: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1667, &mut x1668, 0x0, x1641, 0xffffffff);
  let mut x1669: u32 = 0;
  let mut x1670: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1669, &mut x1670, x1668, x1643, (0x0 as u32));
  let mut x1671: u32 = 0;
  let mut x1672: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1671, &mut x1672, x1670, x1645, (0x0 as u32));
  let mut x1673: u32 = 0;
  let mut x1674: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1673, &mut x1674, x1672, x1647, 0xffffffff);
  let mut x1675: u32 = 0;
  let mut x1676: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1675, &mut x1676, x1674, x1649, 0xfffffffe);
  let mut x1677: u32 = 0;
  let mut x1678: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1677, &mut x1678, x1676, x1651, 0xffffffff);
  let mut x1679: u32 = 0;
  let mut x1680: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1679, &mut x1680, x1678, x1653, 0xffffffff);
  let mut x1681: u32 = 0;
  let mut x1682: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1681, &mut x1682, x1680, x1655, 0xffffffff);
  let mut x1683: u32 = 0;
  let mut x1684: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1683, &mut x1684, x1682, x1657, 0xffffffff);
  let mut x1685: u32 = 0;
  let mut x1686: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1685, &mut x1686, x1684, x1659, 0xffffffff);
  let mut x1687: u32 = 0;
  let mut x1688: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1687, &mut x1688, x1686, x1661, 0xffffffff);
  let mut x1689: u32 = 0;
  let mut x1690: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1689, &mut x1690, x1688, x1663, 0xffffffff);
  let mut x1691: u32 = 0;
  let mut x1692: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1691, &mut x1692, x1690, x1665, (0x0 as u32));
  let mut x1693: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1693, x1692, x1667, x1641);
  let mut x1694: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1694, x1692, x1669, x1643);
  let mut x1695: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1695, x1692, x1671, x1645);
  let mut x1696: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1696, x1692, x1673, x1647);
  let mut x1697: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1697, x1692, x1675, x1649);
  let mut x1698: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1698, x1692, x1677, x1651);
  let mut x1699: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1699, x1692, x1679, x1653);
  let mut x1700: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1700, x1692, x1681, x1655);
  let mut x1701: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1701, x1692, x1683, x1657);
  let mut x1702: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1702, x1692, x1685, x1659);
  let mut x1703: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1703, x1692, x1687, x1661);
  let mut x1704: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1704, x1692, x1689, x1663);
  out1[0] = x1693;
  out1[1] = x1694;
  out1[2] = x1695;
  out1[3] = x1696;
  out1[4] = x1697;
  out1[5] = x1698;
  out1[6] = x1699;
  out1[7] = x1700;
  out1[8] = x1701;
  out1[9] = x1702;
  out1[10] = x1703;
  out1[11] = x1704;
}

/*
 * The function fiat_p384_add adds two field elements in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 *   0 ≤ eval arg2 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) + eval (from_montgomery arg2)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p384_add(out1: &mut [u32; 12], arg1: &[u32; 12], arg2: &[u32; 12]) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1, &mut x2, 0x0, (arg1[0]), (arg2[0]));
  let mut x3: u32 = 0;
  let mut x4: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x3, &mut x4, x2, (arg1[1]), (arg2[1]));
  let mut x5: u32 = 0;
  let mut x6: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x5, &mut x6, x4, (arg1[2]), (arg2[2]));
  let mut x7: u32 = 0;
  let mut x8: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x7, &mut x8, x6, (arg1[3]), (arg2[3]));
  let mut x9: u32 = 0;
  let mut x10: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x9, &mut x10, x8, (arg1[4]), (arg2[4]));
  let mut x11: u32 = 0;
  let mut x12: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x11, &mut x12, x10, (arg1[5]), (arg2[5]));
  let mut x13: u32 = 0;
  let mut x14: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x13, &mut x14, x12, (arg1[6]), (arg2[6]));
  let mut x15: u32 = 0;
  let mut x16: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x15, &mut x16, x14, (arg1[7]), (arg2[7]));
  let mut x17: u32 = 0;
  let mut x18: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x17, &mut x18, x16, (arg1[8]), (arg2[8]));
  let mut x19: u32 = 0;
  let mut x20: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x19, &mut x20, x18, (arg1[9]), (arg2[9]));
  let mut x21: u32 = 0;
  let mut x22: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x21, &mut x22, x20, (arg1[10]), (arg2[10]));
  let mut x23: u32 = 0;
  let mut x24: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x23, &mut x24, x22, (arg1[11]), (arg2[11]));
  let mut x25: u32 = 0;
  let mut x26: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x25, &mut x26, 0x0, x1, 0xffffffff);
  let mut x27: u32 = 0;
  let mut x28: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x27, &mut x28, x26, x3, (0x0 as u32));
  let mut x29: u32 = 0;
  let mut x30: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x29, &mut x30, x28, x5, (0x0 as u32));
  let mut x31: u32 = 0;
  let mut x32: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x31, &mut x32, x30, x7, 0xffffffff);
  let mut x33: u32 = 0;
  let mut x34: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x33, &mut x34, x32, x9, 0xfffffffe);
  let mut x35: u32 = 0;
  let mut x36: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x35, &mut x36, x34, x11, 0xffffffff);
  let mut x37: u32 = 0;
  let mut x38: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x37, &mut x38, x36, x13, 0xffffffff);
  let mut x39: u32 = 0;
  let mut x40: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x39, &mut x40, x38, x15, 0xffffffff);
  let mut x41: u32 = 0;
  let mut x42: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x41, &mut x42, x40, x17, 0xffffffff);
  let mut x43: u32 = 0;
  let mut x44: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x43, &mut x44, x42, x19, 0xffffffff);
  let mut x45: u32 = 0;
  let mut x46: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x45, &mut x46, x44, x21, 0xffffffff);
  let mut x47: u32 = 0;
  let mut x48: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x47, &mut x48, x46, x23, 0xffffffff);
  let mut x49: u32 = 0;
  let mut x50: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x49, &mut x50, x48, (x24 as u32), (0x0 as u32));
  let mut x51: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x51, x50, x25, x1);
  let mut x52: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x52, x50, x27, x3);
  let mut x53: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x53, x50, x29, x5);
  let mut x54: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x54, x50, x31, x7);
  let mut x55: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x55, x50, x33, x9);
  let mut x56: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x56, x50, x35, x11);
  let mut x57: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x57, x50, x37, x13);
  let mut x58: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x58, x50, x39, x15);
  let mut x59: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x59, x50, x41, x17);
  let mut x60: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x60, x50, x43, x19);
  let mut x61: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x61, x50, x45, x21);
  let mut x62: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x62, x50, x47, x23);
  out1[0] = x51;
  out1[1] = x52;
  out1[2] = x53;
  out1[3] = x54;
  out1[4] = x55;
  out1[5] = x56;
  out1[6] = x57;
  out1[7] = x58;
  out1[8] = x59;
  out1[9] = x60;
  out1[10] = x61;
  out1[11] = x62;
}

/*
 * The function fiat_p384_sub subtracts two field elements in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 *   0 ≤ eval arg2 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) - eval (from_montgomery arg2)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p384_sub(out1: &mut [u32; 12], arg1: &[u32; 12], arg2: &[u32; 12]) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1, &mut x2, 0x0, (arg1[0]), (arg2[0]));
  let mut x3: u32 = 0;
  let mut x4: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x3, &mut x4, x2, (arg1[1]), (arg2[1]));
  let mut x5: u32 = 0;
  let mut x6: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x5, &mut x6, x4, (arg1[2]), (arg2[2]));
  let mut x7: u32 = 0;
  let mut x8: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x7, &mut x8, x6, (arg1[3]), (arg2[3]));
  let mut x9: u32 = 0;
  let mut x10: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x9, &mut x10, x8, (arg1[4]), (arg2[4]));
  let mut x11: u32 = 0;
  let mut x12: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x11, &mut x12, x10, (arg1[5]), (arg2[5]));
  let mut x13: u32 = 0;
  let mut x14: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x13, &mut x14, x12, (arg1[6]), (arg2[6]));
  let mut x15: u32 = 0;
  let mut x16: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x15, &mut x16, x14, (arg1[7]), (arg2[7]));
  let mut x17: u32 = 0;
  let mut x18: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x17, &mut x18, x16, (arg1[8]), (arg2[8]));
  let mut x19: u32 = 0;
  let mut x20: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x19, &mut x20, x18, (arg1[9]), (arg2[9]));
  let mut x21: u32 = 0;
  let mut x22: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x21, &mut x22, x20, (arg1[10]), (arg2[10]));
  let mut x23: u32 = 0;
  let mut x24: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x23, &mut x24, x22, (arg1[11]), (arg2[11]));
  let mut x25: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x25, x24, (0x0 as u32), 0xffffffff);
  let mut x26: u32 = 0;
  let mut x27: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x26, &mut x27, 0x0, x1, (x25 & 0xffffffff));
  let mut x28: u32 = 0;
  let mut x29: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x28, &mut x29, x27, x3, (0x0 as u32));
  let mut x30: u32 = 0;
  let mut x31: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x30, &mut x31, x29, x5, (0x0 as u32));
  let mut x32: u32 = 0;
  let mut x33: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x32, &mut x33, x31, x7, (x25 & 0xffffffff));
  let mut x34: u32 = 0;
  let mut x35: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x34, &mut x35, x33, x9, (x25 & 0xfffffffe));
  let mut x36: u32 = 0;
  let mut x37: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x36, &mut x37, x35, x11, (x25 & 0xffffffff));
  let mut x38: u32 = 0;
  let mut x39: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x38, &mut x39, x37, x13, (x25 & 0xffffffff));
  let mut x40: u32 = 0;
  let mut x41: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x40, &mut x41, x39, x15, (x25 & 0xffffffff));
  let mut x42: u32 = 0;
  let mut x43: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x42, &mut x43, x41, x17, (x25 & 0xffffffff));
  let mut x44: u32 = 0;
  let mut x45: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x44, &mut x45, x43, x19, (x25 & 0xffffffff));
  let mut x46: u32 = 0;
  let mut x47: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x46, &mut x47, x45, x21, (x25 & 0xffffffff));
  let mut x48: u32 = 0;
  let mut x49: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x48, &mut x49, x47, x23, (x25 & 0xffffffff));
  out1[0] = x26;
  out1[1] = x28;
  out1[2] = x30;
  out1[3] = x32;
  out1[4] = x34;
  out1[5] = x36;
  out1[6] = x38;
  out1[7] = x40;
  out1[8] = x42;
  out1[9] = x44;
  out1[10] = x46;
  out1[11] = x48;
}

/*
 * The function fiat_p384_opp negates a field element in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = -eval (from_montgomery arg1) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p384_opp(out1: &mut [u32; 12], arg1: &[u32; 12]) -> () {
  let mut x1: u32 = 0;
  let mut x2: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1, &mut x2, 0x0, (0x0 as u32), (arg1[0]));
  let mut x3: u32 = 0;
  let mut x4: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x3, &mut x4, x2, (0x0 as u32), (arg1[1]));
  let mut x5: u32 = 0;
  let mut x6: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x5, &mut x6, x4, (0x0 as u32), (arg1[2]));
  let mut x7: u32 = 0;
  let mut x8: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x7, &mut x8, x6, (0x0 as u32), (arg1[3]));
  let mut x9: u32 = 0;
  let mut x10: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x9, &mut x10, x8, (0x0 as u32), (arg1[4]));
  let mut x11: u32 = 0;
  let mut x12: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x11, &mut x12, x10, (0x0 as u32), (arg1[5]));
  let mut x13: u32 = 0;
  let mut x14: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x13, &mut x14, x12, (0x0 as u32), (arg1[6]));
  let mut x15: u32 = 0;
  let mut x16: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x15, &mut x16, x14, (0x0 as u32), (arg1[7]));
  let mut x17: u32 = 0;
  let mut x18: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x17, &mut x18, x16, (0x0 as u32), (arg1[8]));
  let mut x19: u32 = 0;
  let mut x20: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x19, &mut x20, x18, (0x0 as u32), (arg1[9]));
  let mut x21: u32 = 0;
  let mut x22: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x21, &mut x22, x20, (0x0 as u32), (arg1[10]));
  let mut x23: u32 = 0;
  let mut x24: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x23, &mut x24, x22, (0x0 as u32), (arg1[11]));
  let mut x25: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x25, x24, (0x0 as u32), 0xffffffff);
  let mut x26: u32 = 0;
  let mut x27: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x26, &mut x27, 0x0, x1, (x25 & 0xffffffff));
  let mut x28: u32 = 0;
  let mut x29: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x28, &mut x29, x27, x3, (0x0 as u32));
  let mut x30: u32 = 0;
  let mut x31: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x30, &mut x31, x29, x5, (0x0 as u32));
  let mut x32: u32 = 0;
  let mut x33: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x32, &mut x33, x31, x7, (x25 & 0xffffffff));
  let mut x34: u32 = 0;
  let mut x35: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x34, &mut x35, x33, x9, (x25 & 0xfffffffe));
  let mut x36: u32 = 0;
  let mut x37: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x36, &mut x37, x35, x11, (x25 & 0xffffffff));
  let mut x38: u32 = 0;
  let mut x39: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x38, &mut x39, x37, x13, (x25 & 0xffffffff));
  let mut x40: u32 = 0;
  let mut x41: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x40, &mut x41, x39, x15, (x25 & 0xffffffff));
  let mut x42: u32 = 0;
  let mut x43: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x42, &mut x43, x41, x17, (x25 & 0xffffffff));
  let mut x44: u32 = 0;
  let mut x45: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x44, &mut x45, x43, x19, (x25 & 0xffffffff));
  let mut x46: u32 = 0;
  let mut x47: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x46, &mut x47, x45, x21, (x25 & 0xffffffff));
  let mut x48: u32 = 0;
  let mut x49: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x48, &mut x49, x47, x23, (x25 & 0xffffffff));
  out1[0] = x26;
  out1[1] = x28;
  out1[2] = x30;
  out1[3] = x32;
  out1[4] = x34;
  out1[5] = x36;
  out1[6] = x38;
  out1[7] = x40;
  out1[8] = x42;
  out1[9] = x44;
  out1[10] = x46;
  out1[11] = x48;
}

/*
 * The function fiat_p384_from_montgomery translates a field element out of the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval out1 mod m = (eval arg1 * ((2^32)⁻¹ mod m)^12) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p384_from_montgomery(out1: &mut [u32; 12], arg1: &[u32; 12]) -> () {
  let x1: u32 = (arg1[0]);
  let mut x2: u32 = 0;
  let mut x3: u32 = 0;
  fiat_p384_mulx_u32(&mut x2, &mut x3, x1, 0xffffffff);
  let mut x4: u32 = 0;
  let mut x5: u32 = 0;
  fiat_p384_mulx_u32(&mut x4, &mut x5, x1, 0xffffffff);
  let mut x6: u32 = 0;
  let mut x7: u32 = 0;
  fiat_p384_mulx_u32(&mut x6, &mut x7, x1, 0xffffffff);
  let mut x8: u32 = 0;
  let mut x9: u32 = 0;
  fiat_p384_mulx_u32(&mut x8, &mut x9, x1, 0xffffffff);
  let mut x10: u32 = 0;
  let mut x11: u32 = 0;
  fiat_p384_mulx_u32(&mut x10, &mut x11, x1, 0xffffffff);
  let mut x12: u32 = 0;
  let mut x13: u32 = 0;
  fiat_p384_mulx_u32(&mut x12, &mut x13, x1, 0xffffffff);
  let mut x14: u32 = 0;
  let mut x15: u32 = 0;
  fiat_p384_mulx_u32(&mut x14, &mut x15, x1, 0xffffffff);
  let mut x16: u32 = 0;
  let mut x17: u32 = 0;
  fiat_p384_mulx_u32(&mut x16, &mut x17, x1, 0xfffffffe);
  let mut x18: u32 = 0;
  let mut x19: u32 = 0;
  fiat_p384_mulx_u32(&mut x18, &mut x19, x1, 0xffffffff);
  let mut x20: u32 = 0;
  let mut x21: u32 = 0;
  fiat_p384_mulx_u32(&mut x20, &mut x21, x1, 0xffffffff);
  let mut x22: u32 = 0;
  let mut x23: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x22, &mut x23, 0x0, x19, x16);
  let mut x24: u32 = 0;
  let mut x25: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x24, &mut x25, x23, x17, x14);
  let mut x26: u32 = 0;
  let mut x27: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x26, &mut x27, x25, x15, x12);
  let mut x28: u32 = 0;
  let mut x29: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x28, &mut x29, x27, x13, x10);
  let mut x30: u32 = 0;
  let mut x31: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x30, &mut x31, x29, x11, x8);
  let mut x32: u32 = 0;
  let mut x33: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x32, &mut x33, x31, x9, x6);
  let mut x34: u32 = 0;
  let mut x35: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x34, &mut x35, x33, x7, x4);
  let mut x36: u32 = 0;
  let mut x37: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x36, &mut x37, x35, x5, x2);
  let mut x38: u32 = 0;
  let mut x39: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x38, &mut x39, 0x0, x1, x20);
  let mut x40: u32 = 0;
  let mut x41: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x40, &mut x41, x39, (0x0 as u32), x21);
  let mut x42: u32 = 0;
  let mut x43: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x42, &mut x43, 0x0, x40, (arg1[1]));
  let mut x44: u32 = 0;
  let mut x45: u32 = 0;
  fiat_p384_mulx_u32(&mut x44, &mut x45, x42, 0xffffffff);
  let mut x46: u32 = 0;
  let mut x47: u32 = 0;
  fiat_p384_mulx_u32(&mut x46, &mut x47, x42, 0xffffffff);
  let mut x48: u32 = 0;
  let mut x49: u32 = 0;
  fiat_p384_mulx_u32(&mut x48, &mut x49, x42, 0xffffffff);
  let mut x50: u32 = 0;
  let mut x51: u32 = 0;
  fiat_p384_mulx_u32(&mut x50, &mut x51, x42, 0xffffffff);
  let mut x52: u32 = 0;
  let mut x53: u32 = 0;
  fiat_p384_mulx_u32(&mut x52, &mut x53, x42, 0xffffffff);
  let mut x54: u32 = 0;
  let mut x55: u32 = 0;
  fiat_p384_mulx_u32(&mut x54, &mut x55, x42, 0xffffffff);
  let mut x56: u32 = 0;
  let mut x57: u32 = 0;
  fiat_p384_mulx_u32(&mut x56, &mut x57, x42, 0xffffffff);
  let mut x58: u32 = 0;
  let mut x59: u32 = 0;
  fiat_p384_mulx_u32(&mut x58, &mut x59, x42, 0xfffffffe);
  let mut x60: u32 = 0;
  let mut x61: u32 = 0;
  fiat_p384_mulx_u32(&mut x60, &mut x61, x42, 0xffffffff);
  let mut x62: u32 = 0;
  let mut x63: u32 = 0;
  fiat_p384_mulx_u32(&mut x62, &mut x63, x42, 0xffffffff);
  let mut x64: u32 = 0;
  let mut x65: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x64, &mut x65, 0x0, x61, x58);
  let mut x66: u32 = 0;
  let mut x67: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x66, &mut x67, x65, x59, x56);
  let mut x68: u32 = 0;
  let mut x69: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x68, &mut x69, x67, x57, x54);
  let mut x70: u32 = 0;
  let mut x71: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x70, &mut x71, x69, x55, x52);
  let mut x72: u32 = 0;
  let mut x73: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x72, &mut x73, x71, x53, x50);
  let mut x74: u32 = 0;
  let mut x75: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x74, &mut x75, x73, x51, x48);
  let mut x76: u32 = 0;
  let mut x77: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x76, &mut x77, x75, x49, x46);
  let mut x78: u32 = 0;
  let mut x79: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x78, &mut x79, x77, x47, x44);
  let mut x80: u32 = 0;
  let mut x81: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x80, &mut x81, x43, (0x0 as u32), (0x0 as u32));
  let mut x82: u32 = 0;
  let mut x83: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x82, &mut x83, 0x0, x42, x62);
  let mut x84: u32 = 0;
  let mut x85: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x84, &mut x85, x83, ((x80 as fiat_p384_u1) as u32), x63);
  let mut x86: u32 = 0;
  let mut x87: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x86, &mut x87, x85, x18, (0x0 as u32));
  let mut x88: u32 = 0;
  let mut x89: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x88, &mut x89, x87, x22, x60);
  let mut x90: u32 = 0;
  let mut x91: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x90, &mut x91, x89, x24, x64);
  let mut x92: u32 = 0;
  let mut x93: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x92, &mut x93, x91, x26, x66);
  let mut x94: u32 = 0;
  let mut x95: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x94, &mut x95, x93, x28, x68);
  let mut x96: u32 = 0;
  let mut x97: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x96, &mut x97, x95, x30, x70);
  let mut x98: u32 = 0;
  let mut x99: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x98, &mut x99, x97, x32, x72);
  let mut x100: u32 = 0;
  let mut x101: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x100, &mut x101, x99, x34, x74);
  let mut x102: u32 = 0;
  let mut x103: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x102, &mut x103, x101, x36, x76);
  let mut x104: u32 = 0;
  let mut x105: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x104, &mut x105, x37, x3, (0x0 as u32));
  let mut x106: u32 = 0;
  let mut x107: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x106, &mut x107, x103, x104, x78);
  let mut x108: u32 = 0;
  let mut x109: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x108, &mut x109, x79, x45, (0x0 as u32));
  let mut x110: u32 = 0;
  let mut x111: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x110, &mut x111, x107, (0x0 as u32), x108);
  let mut x112: u32 = 0;
  let mut x113: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x112, &mut x113, 0x0, x84, (arg1[2]));
  let mut x114: u32 = 0;
  let mut x115: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x114, &mut x115, x113, x86, (0x0 as u32));
  let mut x116: u32 = 0;
  let mut x117: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x116, &mut x117, x115, x88, (0x0 as u32));
  let mut x118: u32 = 0;
  let mut x119: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x118, &mut x119, x117, x90, (0x0 as u32));
  let mut x120: u32 = 0;
  let mut x121: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x120, &mut x121, x119, x92, (0x0 as u32));
  let mut x122: u32 = 0;
  let mut x123: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x122, &mut x123, x121, x94, (0x0 as u32));
  let mut x124: u32 = 0;
  let mut x125: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x124, &mut x125, x123, x96, (0x0 as u32));
  let mut x126: u32 = 0;
  let mut x127: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x126, &mut x127, x125, x98, (0x0 as u32));
  let mut x128: u32 = 0;
  let mut x129: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x128, &mut x129, x127, x100, (0x0 as u32));
  let mut x130: u32 = 0;
  let mut x131: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x130, &mut x131, x129, x102, (0x0 as u32));
  let mut x132: u32 = 0;
  let mut x133: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x132, &mut x133, x131, x106, (0x0 as u32));
  let mut x134: u32 = 0;
  let mut x135: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x134, &mut x135, x133, x110, (0x0 as u32));
  let mut x136: u32 = 0;
  let mut x137: u32 = 0;
  fiat_p384_mulx_u32(&mut x136, &mut x137, x112, 0xffffffff);
  let mut x138: u32 = 0;
  let mut x139: u32 = 0;
  fiat_p384_mulx_u32(&mut x138, &mut x139, x112, 0xffffffff);
  let mut x140: u32 = 0;
  let mut x141: u32 = 0;
  fiat_p384_mulx_u32(&mut x140, &mut x141, x112, 0xffffffff);
  let mut x142: u32 = 0;
  let mut x143: u32 = 0;
  fiat_p384_mulx_u32(&mut x142, &mut x143, x112, 0xffffffff);
  let mut x144: u32 = 0;
  let mut x145: u32 = 0;
  fiat_p384_mulx_u32(&mut x144, &mut x145, x112, 0xffffffff);
  let mut x146: u32 = 0;
  let mut x147: u32 = 0;
  fiat_p384_mulx_u32(&mut x146, &mut x147, x112, 0xffffffff);
  let mut x148: u32 = 0;
  let mut x149: u32 = 0;
  fiat_p384_mulx_u32(&mut x148, &mut x149, x112, 0xffffffff);
  let mut x150: u32 = 0;
  let mut x151: u32 = 0;
  fiat_p384_mulx_u32(&mut x150, &mut x151, x112, 0xfffffffe);
  let mut x152: u32 = 0;
  let mut x153: u32 = 0;
  fiat_p384_mulx_u32(&mut x152, &mut x153, x112, 0xffffffff);
  let mut x154: u32 = 0;
  let mut x155: u32 = 0;
  fiat_p384_mulx_u32(&mut x154, &mut x155, x112, 0xffffffff);
  let mut x156: u32 = 0;
  let mut x157: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x156, &mut x157, 0x0, x153, x150);
  let mut x158: u32 = 0;
  let mut x159: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x158, &mut x159, x157, x151, x148);
  let mut x160: u32 = 0;
  let mut x161: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x160, &mut x161, x159, x149, x146);
  let mut x162: u32 = 0;
  let mut x163: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x162, &mut x163, x161, x147, x144);
  let mut x164: u32 = 0;
  let mut x165: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x164, &mut x165, x163, x145, x142);
  let mut x166: u32 = 0;
  let mut x167: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x166, &mut x167, x165, x143, x140);
  let mut x168: u32 = 0;
  let mut x169: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x168, &mut x169, x167, x141, x138);
  let mut x170: u32 = 0;
  let mut x171: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x170, &mut x171, x169, x139, x136);
  let mut x172: u32 = 0;
  let mut x173: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x172, &mut x173, 0x0, x112, x154);
  let mut x174: u32 = 0;
  let mut x175: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x174, &mut x175, x173, x114, x155);
  let mut x176: u32 = 0;
  let mut x177: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x176, &mut x177, x175, x116, (0x0 as u32));
  let mut x178: u32 = 0;
  let mut x179: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x178, &mut x179, x177, x118, x152);
  let mut x180: u32 = 0;
  let mut x181: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x180, &mut x181, x179, x120, x156);
  let mut x182: u32 = 0;
  let mut x183: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x182, &mut x183, x181, x122, x158);
  let mut x184: u32 = 0;
  let mut x185: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x184, &mut x185, x183, x124, x160);
  let mut x186: u32 = 0;
  let mut x187: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x186, &mut x187, x185, x126, x162);
  let mut x188: u32 = 0;
  let mut x189: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x188, &mut x189, x187, x128, x164);
  let mut x190: u32 = 0;
  let mut x191: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x190, &mut x191, x189, x130, x166);
  let mut x192: u32 = 0;
  let mut x193: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x192, &mut x193, x191, x132, x168);
  let mut x194: u32 = 0;
  let mut x195: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x194, &mut x195, x193, x134, x170);
  let mut x196: u32 = 0;
  let mut x197: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x196, &mut x197, x171, x137, (0x0 as u32));
  let mut x198: u32 = 0;
  let mut x199: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x198, &mut x199, x111, (0x0 as u32), (0x0 as u32));
  let mut x200: u32 = 0;
  let mut x201: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x200, &mut x201, x135, ((x198 as fiat_p384_u1) as u32), (0x0 as u32));
  let mut x202: u32 = 0;
  let mut x203: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x202, &mut x203, x195, x200, x196);
  let mut x204: u32 = 0;
  let mut x205: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x204, &mut x205, 0x0, x174, (arg1[3]));
  let mut x206: u32 = 0;
  let mut x207: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x206, &mut x207, x205, x176, (0x0 as u32));
  let mut x208: u32 = 0;
  let mut x209: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x208, &mut x209, x207, x178, (0x0 as u32));
  let mut x210: u32 = 0;
  let mut x211: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x210, &mut x211, x209, x180, (0x0 as u32));
  let mut x212: u32 = 0;
  let mut x213: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x212, &mut x213, x211, x182, (0x0 as u32));
  let mut x214: u32 = 0;
  let mut x215: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x214, &mut x215, x213, x184, (0x0 as u32));
  let mut x216: u32 = 0;
  let mut x217: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x216, &mut x217, x215, x186, (0x0 as u32));
  let mut x218: u32 = 0;
  let mut x219: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x218, &mut x219, x217, x188, (0x0 as u32));
  let mut x220: u32 = 0;
  let mut x221: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x220, &mut x221, x219, x190, (0x0 as u32));
  let mut x222: u32 = 0;
  let mut x223: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x222, &mut x223, x221, x192, (0x0 as u32));
  let mut x224: u32 = 0;
  let mut x225: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x224, &mut x225, x223, x194, (0x0 as u32));
  let mut x226: u32 = 0;
  let mut x227: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x226, &mut x227, x225, x202, (0x0 as u32));
  let mut x228: u32 = 0;
  let mut x229: u32 = 0;
  fiat_p384_mulx_u32(&mut x228, &mut x229, x204, 0xffffffff);
  let mut x230: u32 = 0;
  let mut x231: u32 = 0;
  fiat_p384_mulx_u32(&mut x230, &mut x231, x204, 0xffffffff);
  let mut x232: u32 = 0;
  let mut x233: u32 = 0;
  fiat_p384_mulx_u32(&mut x232, &mut x233, x204, 0xffffffff);
  let mut x234: u32 = 0;
  let mut x235: u32 = 0;
  fiat_p384_mulx_u32(&mut x234, &mut x235, x204, 0xffffffff);
  let mut x236: u32 = 0;
  let mut x237: u32 = 0;
  fiat_p384_mulx_u32(&mut x236, &mut x237, x204, 0xffffffff);
  let mut x238: u32 = 0;
  let mut x239: u32 = 0;
  fiat_p384_mulx_u32(&mut x238, &mut x239, x204, 0xffffffff);
  let mut x240: u32 = 0;
  let mut x241: u32 = 0;
  fiat_p384_mulx_u32(&mut x240, &mut x241, x204, 0xffffffff);
  let mut x242: u32 = 0;
  let mut x243: u32 = 0;
  fiat_p384_mulx_u32(&mut x242, &mut x243, x204, 0xfffffffe);
  let mut x244: u32 = 0;
  let mut x245: u32 = 0;
  fiat_p384_mulx_u32(&mut x244, &mut x245, x204, 0xffffffff);
  let mut x246: u32 = 0;
  let mut x247: u32 = 0;
  fiat_p384_mulx_u32(&mut x246, &mut x247, x204, 0xffffffff);
  let mut x248: u32 = 0;
  let mut x249: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x248, &mut x249, 0x0, x245, x242);
  let mut x250: u32 = 0;
  let mut x251: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x250, &mut x251, x249, x243, x240);
  let mut x252: u32 = 0;
  let mut x253: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x252, &mut x253, x251, x241, x238);
  let mut x254: u32 = 0;
  let mut x255: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x254, &mut x255, x253, x239, x236);
  let mut x256: u32 = 0;
  let mut x257: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x256, &mut x257, x255, x237, x234);
  let mut x258: u32 = 0;
  let mut x259: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x258, &mut x259, x257, x235, x232);
  let mut x260: u32 = 0;
  let mut x261: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x260, &mut x261, x259, x233, x230);
  let mut x262: u32 = 0;
  let mut x263: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x262, &mut x263, x261, x231, x228);
  let mut x264: u32 = 0;
  let mut x265: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x264, &mut x265, 0x0, x204, x246);
  let mut x266: u32 = 0;
  let mut x267: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x266, &mut x267, x265, x206, x247);
  let mut x268: u32 = 0;
  let mut x269: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x268, &mut x269, x267, x208, (0x0 as u32));
  let mut x270: u32 = 0;
  let mut x271: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x270, &mut x271, x269, x210, x244);
  let mut x272: u32 = 0;
  let mut x273: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x272, &mut x273, x271, x212, x248);
  let mut x274: u32 = 0;
  let mut x275: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x274, &mut x275, x273, x214, x250);
  let mut x276: u32 = 0;
  let mut x277: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x276, &mut x277, x275, x216, x252);
  let mut x278: u32 = 0;
  let mut x279: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x278, &mut x279, x277, x218, x254);
  let mut x280: u32 = 0;
  let mut x281: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x280, &mut x281, x279, x220, x256);
  let mut x282: u32 = 0;
  let mut x283: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x282, &mut x283, x281, x222, x258);
  let mut x284: u32 = 0;
  let mut x285: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x284, &mut x285, x283, x224, x260);
  let mut x286: u32 = 0;
  let mut x287: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x286, &mut x287, x285, x226, x262);
  let mut x288: u32 = 0;
  let mut x289: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x288, &mut x289, x263, x229, (0x0 as u32));
  let mut x290: u32 = 0;
  let mut x291: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x290, &mut x291, x203, (0x0 as u32), (0x0 as u32));
  let mut x292: u32 = 0;
  let mut x293: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x292, &mut x293, x227, ((x290 as fiat_p384_u1) as u32), (0x0 as u32));
  let mut x294: u32 = 0;
  let mut x295: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x294, &mut x295, x287, x292, x288);
  let mut x296: u32 = 0;
  let mut x297: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x296, &mut x297, 0x0, x266, (arg1[4]));
  let mut x298: u32 = 0;
  let mut x299: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x298, &mut x299, x297, x268, (0x0 as u32));
  let mut x300: u32 = 0;
  let mut x301: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x300, &mut x301, x299, x270, (0x0 as u32));
  let mut x302: u32 = 0;
  let mut x303: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x302, &mut x303, x301, x272, (0x0 as u32));
  let mut x304: u32 = 0;
  let mut x305: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x304, &mut x305, x303, x274, (0x0 as u32));
  let mut x306: u32 = 0;
  let mut x307: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x306, &mut x307, x305, x276, (0x0 as u32));
  let mut x308: u32 = 0;
  let mut x309: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x308, &mut x309, x307, x278, (0x0 as u32));
  let mut x310: u32 = 0;
  let mut x311: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x310, &mut x311, x309, x280, (0x0 as u32));
  let mut x312: u32 = 0;
  let mut x313: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x312, &mut x313, x311, x282, (0x0 as u32));
  let mut x314: u32 = 0;
  let mut x315: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x314, &mut x315, x313, x284, (0x0 as u32));
  let mut x316: u32 = 0;
  let mut x317: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x316, &mut x317, x315, x286, (0x0 as u32));
  let mut x318: u32 = 0;
  let mut x319: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x318, &mut x319, x317, x294, (0x0 as u32));
  let mut x320: u32 = 0;
  let mut x321: u32 = 0;
  fiat_p384_mulx_u32(&mut x320, &mut x321, x296, 0xffffffff);
  let mut x322: u32 = 0;
  let mut x323: u32 = 0;
  fiat_p384_mulx_u32(&mut x322, &mut x323, x296, 0xffffffff);
  let mut x324: u32 = 0;
  let mut x325: u32 = 0;
  fiat_p384_mulx_u32(&mut x324, &mut x325, x296, 0xffffffff);
  let mut x326: u32 = 0;
  let mut x327: u32 = 0;
  fiat_p384_mulx_u32(&mut x326, &mut x327, x296, 0xffffffff);
  let mut x328: u32 = 0;
  let mut x329: u32 = 0;
  fiat_p384_mulx_u32(&mut x328, &mut x329, x296, 0xffffffff);
  let mut x330: u32 = 0;
  let mut x331: u32 = 0;
  fiat_p384_mulx_u32(&mut x330, &mut x331, x296, 0xffffffff);
  let mut x332: u32 = 0;
  let mut x333: u32 = 0;
  fiat_p384_mulx_u32(&mut x332, &mut x333, x296, 0xffffffff);
  let mut x334: u32 = 0;
  let mut x335: u32 = 0;
  fiat_p384_mulx_u32(&mut x334, &mut x335, x296, 0xfffffffe);
  let mut x336: u32 = 0;
  let mut x337: u32 = 0;
  fiat_p384_mulx_u32(&mut x336, &mut x337, x296, 0xffffffff);
  let mut x338: u32 = 0;
  let mut x339: u32 = 0;
  fiat_p384_mulx_u32(&mut x338, &mut x339, x296, 0xffffffff);
  let mut x340: u32 = 0;
  let mut x341: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x340, &mut x341, 0x0, x337, x334);
  let mut x342: u32 = 0;
  let mut x343: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x342, &mut x343, x341, x335, x332);
  let mut x344: u32 = 0;
  let mut x345: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x344, &mut x345, x343, x333, x330);
  let mut x346: u32 = 0;
  let mut x347: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x346, &mut x347, x345, x331, x328);
  let mut x348: u32 = 0;
  let mut x349: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x348, &mut x349, x347, x329, x326);
  let mut x350: u32 = 0;
  let mut x351: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x350, &mut x351, x349, x327, x324);
  let mut x352: u32 = 0;
  let mut x353: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x352, &mut x353, x351, x325, x322);
  let mut x354: u32 = 0;
  let mut x355: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x354, &mut x355, x353, x323, x320);
  let mut x356: u32 = 0;
  let mut x357: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x356, &mut x357, 0x0, x296, x338);
  let mut x358: u32 = 0;
  let mut x359: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x358, &mut x359, x357, x298, x339);
  let mut x360: u32 = 0;
  let mut x361: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x360, &mut x361, x359, x300, (0x0 as u32));
  let mut x362: u32 = 0;
  let mut x363: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x362, &mut x363, x361, x302, x336);
  let mut x364: u32 = 0;
  let mut x365: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x364, &mut x365, x363, x304, x340);
  let mut x366: u32 = 0;
  let mut x367: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x366, &mut x367, x365, x306, x342);
  let mut x368: u32 = 0;
  let mut x369: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x368, &mut x369, x367, x308, x344);
  let mut x370: u32 = 0;
  let mut x371: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x370, &mut x371, x369, x310, x346);
  let mut x372: u32 = 0;
  let mut x373: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x372, &mut x373, x371, x312, x348);
  let mut x374: u32 = 0;
  let mut x375: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x374, &mut x375, x373, x314, x350);
  let mut x376: u32 = 0;
  let mut x377: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x376, &mut x377, x375, x316, x352);
  let mut x378: u32 = 0;
  let mut x379: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x378, &mut x379, x377, x318, x354);
  let mut x380: u32 = 0;
  let mut x381: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x380, &mut x381, x355, x321, (0x0 as u32));
  let mut x382: u32 = 0;
  let mut x383: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x382, &mut x383, x295, (0x0 as u32), (0x0 as u32));
  let mut x384: u32 = 0;
  let mut x385: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x384, &mut x385, x319, ((x382 as fiat_p384_u1) as u32), (0x0 as u32));
  let mut x386: u32 = 0;
  let mut x387: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x386, &mut x387, x379, x384, x380);
  let mut x388: u32 = 0;
  let mut x389: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x388, &mut x389, 0x0, x358, (arg1[5]));
  let mut x390: u32 = 0;
  let mut x391: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x390, &mut x391, x389, x360, (0x0 as u32));
  let mut x392: u32 = 0;
  let mut x393: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x392, &mut x393, x391, x362, (0x0 as u32));
  let mut x394: u32 = 0;
  let mut x395: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x394, &mut x395, x393, x364, (0x0 as u32));
  let mut x396: u32 = 0;
  let mut x397: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x396, &mut x397, x395, x366, (0x0 as u32));
  let mut x398: u32 = 0;
  let mut x399: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x398, &mut x399, x397, x368, (0x0 as u32));
  let mut x400: u32 = 0;
  let mut x401: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x400, &mut x401, x399, x370, (0x0 as u32));
  let mut x402: u32 = 0;
  let mut x403: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x402, &mut x403, x401, x372, (0x0 as u32));
  let mut x404: u32 = 0;
  let mut x405: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x404, &mut x405, x403, x374, (0x0 as u32));
  let mut x406: u32 = 0;
  let mut x407: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x406, &mut x407, x405, x376, (0x0 as u32));
  let mut x408: u32 = 0;
  let mut x409: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x408, &mut x409, x407, x378, (0x0 as u32));
  let mut x410: u32 = 0;
  let mut x411: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x410, &mut x411, x409, x386, (0x0 as u32));
  let mut x412: u32 = 0;
  let mut x413: u32 = 0;
  fiat_p384_mulx_u32(&mut x412, &mut x413, x388, 0xffffffff);
  let mut x414: u32 = 0;
  let mut x415: u32 = 0;
  fiat_p384_mulx_u32(&mut x414, &mut x415, x388, 0xffffffff);
  let mut x416: u32 = 0;
  let mut x417: u32 = 0;
  fiat_p384_mulx_u32(&mut x416, &mut x417, x388, 0xffffffff);
  let mut x418: u32 = 0;
  let mut x419: u32 = 0;
  fiat_p384_mulx_u32(&mut x418, &mut x419, x388, 0xffffffff);
  let mut x420: u32 = 0;
  let mut x421: u32 = 0;
  fiat_p384_mulx_u32(&mut x420, &mut x421, x388, 0xffffffff);
  let mut x422: u32 = 0;
  let mut x423: u32 = 0;
  fiat_p384_mulx_u32(&mut x422, &mut x423, x388, 0xffffffff);
  let mut x424: u32 = 0;
  let mut x425: u32 = 0;
  fiat_p384_mulx_u32(&mut x424, &mut x425, x388, 0xffffffff);
  let mut x426: u32 = 0;
  let mut x427: u32 = 0;
  fiat_p384_mulx_u32(&mut x426, &mut x427, x388, 0xfffffffe);
  let mut x428: u32 = 0;
  let mut x429: u32 = 0;
  fiat_p384_mulx_u32(&mut x428, &mut x429, x388, 0xffffffff);
  let mut x430: u32 = 0;
  let mut x431: u32 = 0;
  fiat_p384_mulx_u32(&mut x430, &mut x431, x388, 0xffffffff);
  let mut x432: u32 = 0;
  let mut x433: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x432, &mut x433, 0x0, x429, x426);
  let mut x434: u32 = 0;
  let mut x435: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x434, &mut x435, x433, x427, x424);
  let mut x436: u32 = 0;
  let mut x437: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x436, &mut x437, x435, x425, x422);
  let mut x438: u32 = 0;
  let mut x439: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x438, &mut x439, x437, x423, x420);
  let mut x440: u32 = 0;
  let mut x441: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x440, &mut x441, x439, x421, x418);
  let mut x442: u32 = 0;
  let mut x443: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x442, &mut x443, x441, x419, x416);
  let mut x444: u32 = 0;
  let mut x445: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x444, &mut x445, x443, x417, x414);
  let mut x446: u32 = 0;
  let mut x447: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x446, &mut x447, x445, x415, x412);
  let mut x448: u32 = 0;
  let mut x449: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x448, &mut x449, 0x0, x388, x430);
  let mut x450: u32 = 0;
  let mut x451: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x450, &mut x451, x449, x390, x431);
  let mut x452: u32 = 0;
  let mut x453: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x452, &mut x453, x451, x392, (0x0 as u32));
  let mut x454: u32 = 0;
  let mut x455: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x454, &mut x455, x453, x394, x428);
  let mut x456: u32 = 0;
  let mut x457: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x456, &mut x457, x455, x396, x432);
  let mut x458: u32 = 0;
  let mut x459: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x458, &mut x459, x457, x398, x434);
  let mut x460: u32 = 0;
  let mut x461: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x460, &mut x461, x459, x400, x436);
  let mut x462: u32 = 0;
  let mut x463: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x462, &mut x463, x461, x402, x438);
  let mut x464: u32 = 0;
  let mut x465: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x464, &mut x465, x463, x404, x440);
  let mut x466: u32 = 0;
  let mut x467: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x466, &mut x467, x465, x406, x442);
  let mut x468: u32 = 0;
  let mut x469: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x468, &mut x469, x467, x408, x444);
  let mut x470: u32 = 0;
  let mut x471: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x470, &mut x471, x469, x410, x446);
  let mut x472: u32 = 0;
  let mut x473: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x472, &mut x473, x447, x413, (0x0 as u32));
  let mut x474: u32 = 0;
  let mut x475: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x474, &mut x475, x387, (0x0 as u32), (0x0 as u32));
  let mut x476: u32 = 0;
  let mut x477: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x476, &mut x477, x411, ((x474 as fiat_p384_u1) as u32), (0x0 as u32));
  let mut x478: u32 = 0;
  let mut x479: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x478, &mut x479, x471, x476, x472);
  let mut x480: u32 = 0;
  let mut x481: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x480, &mut x481, 0x0, x450, (arg1[6]));
  let mut x482: u32 = 0;
  let mut x483: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x482, &mut x483, x481, x452, (0x0 as u32));
  let mut x484: u32 = 0;
  let mut x485: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x484, &mut x485, x483, x454, (0x0 as u32));
  let mut x486: u32 = 0;
  let mut x487: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x486, &mut x487, x485, x456, (0x0 as u32));
  let mut x488: u32 = 0;
  let mut x489: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x488, &mut x489, x487, x458, (0x0 as u32));
  let mut x490: u32 = 0;
  let mut x491: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x490, &mut x491, x489, x460, (0x0 as u32));
  let mut x492: u32 = 0;
  let mut x493: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x492, &mut x493, x491, x462, (0x0 as u32));
  let mut x494: u32 = 0;
  let mut x495: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x494, &mut x495, x493, x464, (0x0 as u32));
  let mut x496: u32 = 0;
  let mut x497: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x496, &mut x497, x495, x466, (0x0 as u32));
  let mut x498: u32 = 0;
  let mut x499: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x498, &mut x499, x497, x468, (0x0 as u32));
  let mut x500: u32 = 0;
  let mut x501: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x500, &mut x501, x499, x470, (0x0 as u32));
  let mut x502: u32 = 0;
  let mut x503: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x502, &mut x503, x501, x478, (0x0 as u32));
  let mut x504: u32 = 0;
  let mut x505: u32 = 0;
  fiat_p384_mulx_u32(&mut x504, &mut x505, x480, 0xffffffff);
  let mut x506: u32 = 0;
  let mut x507: u32 = 0;
  fiat_p384_mulx_u32(&mut x506, &mut x507, x480, 0xffffffff);
  let mut x508: u32 = 0;
  let mut x509: u32 = 0;
  fiat_p384_mulx_u32(&mut x508, &mut x509, x480, 0xffffffff);
  let mut x510: u32 = 0;
  let mut x511: u32 = 0;
  fiat_p384_mulx_u32(&mut x510, &mut x511, x480, 0xffffffff);
  let mut x512: u32 = 0;
  let mut x513: u32 = 0;
  fiat_p384_mulx_u32(&mut x512, &mut x513, x480, 0xffffffff);
  let mut x514: u32 = 0;
  let mut x515: u32 = 0;
  fiat_p384_mulx_u32(&mut x514, &mut x515, x480, 0xffffffff);
  let mut x516: u32 = 0;
  let mut x517: u32 = 0;
  fiat_p384_mulx_u32(&mut x516, &mut x517, x480, 0xffffffff);
  let mut x518: u32 = 0;
  let mut x519: u32 = 0;
  fiat_p384_mulx_u32(&mut x518, &mut x519, x480, 0xfffffffe);
  let mut x520: u32 = 0;
  let mut x521: u32 = 0;
  fiat_p384_mulx_u32(&mut x520, &mut x521, x480, 0xffffffff);
  let mut x522: u32 = 0;
  let mut x523: u32 = 0;
  fiat_p384_mulx_u32(&mut x522, &mut x523, x480, 0xffffffff);
  let mut x524: u32 = 0;
  let mut x525: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x524, &mut x525, 0x0, x521, x518);
  let mut x526: u32 = 0;
  let mut x527: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x526, &mut x527, x525, x519, x516);
  let mut x528: u32 = 0;
  let mut x529: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x528, &mut x529, x527, x517, x514);
  let mut x530: u32 = 0;
  let mut x531: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x530, &mut x531, x529, x515, x512);
  let mut x532: u32 = 0;
  let mut x533: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x532, &mut x533, x531, x513, x510);
  let mut x534: u32 = 0;
  let mut x535: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x534, &mut x535, x533, x511, x508);
  let mut x536: u32 = 0;
  let mut x537: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x536, &mut x537, x535, x509, x506);
  let mut x538: u32 = 0;
  let mut x539: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x538, &mut x539, x537, x507, x504);
  let mut x540: u32 = 0;
  let mut x541: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x540, &mut x541, 0x0, x480, x522);
  let mut x542: u32 = 0;
  let mut x543: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x542, &mut x543, x541, x482, x523);
  let mut x544: u32 = 0;
  let mut x545: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x544, &mut x545, x543, x484, (0x0 as u32));
  let mut x546: u32 = 0;
  let mut x547: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x546, &mut x547, x545, x486, x520);
  let mut x548: u32 = 0;
  let mut x549: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x548, &mut x549, x547, x488, x524);
  let mut x550: u32 = 0;
  let mut x551: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x550, &mut x551, x549, x490, x526);
  let mut x552: u32 = 0;
  let mut x553: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x552, &mut x553, x551, x492, x528);
  let mut x554: u32 = 0;
  let mut x555: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x554, &mut x555, x553, x494, x530);
  let mut x556: u32 = 0;
  let mut x557: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x556, &mut x557, x555, x496, x532);
  let mut x558: u32 = 0;
  let mut x559: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x558, &mut x559, x557, x498, x534);
  let mut x560: u32 = 0;
  let mut x561: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x560, &mut x561, x559, x500, x536);
  let mut x562: u32 = 0;
  let mut x563: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x562, &mut x563, x561, x502, x538);
  let mut x564: u32 = 0;
  let mut x565: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x564, &mut x565, x539, x505, (0x0 as u32));
  let mut x566: u32 = 0;
  let mut x567: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x566, &mut x567, x479, (0x0 as u32), (0x0 as u32));
  let mut x568: u32 = 0;
  let mut x569: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x568, &mut x569, x503, ((x566 as fiat_p384_u1) as u32), (0x0 as u32));
  let mut x570: u32 = 0;
  let mut x571: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x570, &mut x571, x563, x568, x564);
  let mut x572: u32 = 0;
  let mut x573: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x572, &mut x573, 0x0, x542, (arg1[7]));
  let mut x574: u32 = 0;
  let mut x575: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x574, &mut x575, x573, x544, (0x0 as u32));
  let mut x576: u32 = 0;
  let mut x577: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x576, &mut x577, x575, x546, (0x0 as u32));
  let mut x578: u32 = 0;
  let mut x579: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x578, &mut x579, x577, x548, (0x0 as u32));
  let mut x580: u32 = 0;
  let mut x581: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x580, &mut x581, x579, x550, (0x0 as u32));
  let mut x582: u32 = 0;
  let mut x583: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x582, &mut x583, x581, x552, (0x0 as u32));
  let mut x584: u32 = 0;
  let mut x585: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x584, &mut x585, x583, x554, (0x0 as u32));
  let mut x586: u32 = 0;
  let mut x587: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x586, &mut x587, x585, x556, (0x0 as u32));
  let mut x588: u32 = 0;
  let mut x589: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x588, &mut x589, x587, x558, (0x0 as u32));
  let mut x590: u32 = 0;
  let mut x591: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x590, &mut x591, x589, x560, (0x0 as u32));
  let mut x592: u32 = 0;
  let mut x593: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x592, &mut x593, x591, x562, (0x0 as u32));
  let mut x594: u32 = 0;
  let mut x595: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x594, &mut x595, x593, x570, (0x0 as u32));
  let mut x596: u32 = 0;
  let mut x597: u32 = 0;
  fiat_p384_mulx_u32(&mut x596, &mut x597, x572, 0xffffffff);
  let mut x598: u32 = 0;
  let mut x599: u32 = 0;
  fiat_p384_mulx_u32(&mut x598, &mut x599, x572, 0xffffffff);
  let mut x600: u32 = 0;
  let mut x601: u32 = 0;
  fiat_p384_mulx_u32(&mut x600, &mut x601, x572, 0xffffffff);
  let mut x602: u32 = 0;
  let mut x603: u32 = 0;
  fiat_p384_mulx_u32(&mut x602, &mut x603, x572, 0xffffffff);
  let mut x604: u32 = 0;
  let mut x605: u32 = 0;
  fiat_p384_mulx_u32(&mut x604, &mut x605, x572, 0xffffffff);
  let mut x606: u32 = 0;
  let mut x607: u32 = 0;
  fiat_p384_mulx_u32(&mut x606, &mut x607, x572, 0xffffffff);
  let mut x608: u32 = 0;
  let mut x609: u32 = 0;
  fiat_p384_mulx_u32(&mut x608, &mut x609, x572, 0xffffffff);
  let mut x610: u32 = 0;
  let mut x611: u32 = 0;
  fiat_p384_mulx_u32(&mut x610, &mut x611, x572, 0xfffffffe);
  let mut x612: u32 = 0;
  let mut x613: u32 = 0;
  fiat_p384_mulx_u32(&mut x612, &mut x613, x572, 0xffffffff);
  let mut x614: u32 = 0;
  let mut x615: u32 = 0;
  fiat_p384_mulx_u32(&mut x614, &mut x615, x572, 0xffffffff);
  let mut x616: u32 = 0;
  let mut x617: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x616, &mut x617, 0x0, x613, x610);
  let mut x618: u32 = 0;
  let mut x619: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x618, &mut x619, x617, x611, x608);
  let mut x620: u32 = 0;
  let mut x621: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x620, &mut x621, x619, x609, x606);
  let mut x622: u32 = 0;
  let mut x623: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x622, &mut x623, x621, x607, x604);
  let mut x624: u32 = 0;
  let mut x625: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x624, &mut x625, x623, x605, x602);
  let mut x626: u32 = 0;
  let mut x627: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x626, &mut x627, x625, x603, x600);
  let mut x628: u32 = 0;
  let mut x629: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x628, &mut x629, x627, x601, x598);
  let mut x630: u32 = 0;
  let mut x631: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x630, &mut x631, x629, x599, x596);
  let mut x632: u32 = 0;
  let mut x633: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x632, &mut x633, 0x0, x572, x614);
  let mut x634: u32 = 0;
  let mut x635: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x634, &mut x635, x633, x574, x615);
  let mut x636: u32 = 0;
  let mut x637: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x636, &mut x637, x635, x576, (0x0 as u32));
  let mut x638: u32 = 0;
  let mut x639: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x638, &mut x639, x637, x578, x612);
  let mut x640: u32 = 0;
  let mut x641: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x640, &mut x641, x639, x580, x616);
  let mut x642: u32 = 0;
  let mut x643: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x642, &mut x643, x641, x582, x618);
  let mut x644: u32 = 0;
  let mut x645: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x644, &mut x645, x643, x584, x620);
  let mut x646: u32 = 0;
  let mut x647: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x646, &mut x647, x645, x586, x622);
  let mut x648: u32 = 0;
  let mut x649: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x648, &mut x649, x647, x588, x624);
  let mut x650: u32 = 0;
  let mut x651: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x650, &mut x651, x649, x590, x626);
  let mut x652: u32 = 0;
  let mut x653: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x652, &mut x653, x651, x592, x628);
  let mut x654: u32 = 0;
  let mut x655: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x654, &mut x655, x653, x594, x630);
  let mut x656: u32 = 0;
  let mut x657: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x656, &mut x657, x631, x597, (0x0 as u32));
  let mut x658: u32 = 0;
  let mut x659: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x658, &mut x659, x571, (0x0 as u32), (0x0 as u32));
  let mut x660: u32 = 0;
  let mut x661: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x660, &mut x661, x595, ((x658 as fiat_p384_u1) as u32), (0x0 as u32));
  let mut x662: u32 = 0;
  let mut x663: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x662, &mut x663, x655, x660, x656);
  let mut x664: u32 = 0;
  let mut x665: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x664, &mut x665, 0x0, x634, (arg1[8]));
  let mut x666: u32 = 0;
  let mut x667: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x666, &mut x667, x665, x636, (0x0 as u32));
  let mut x668: u32 = 0;
  let mut x669: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x668, &mut x669, x667, x638, (0x0 as u32));
  let mut x670: u32 = 0;
  let mut x671: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x670, &mut x671, x669, x640, (0x0 as u32));
  let mut x672: u32 = 0;
  let mut x673: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x672, &mut x673, x671, x642, (0x0 as u32));
  let mut x674: u32 = 0;
  let mut x675: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x674, &mut x675, x673, x644, (0x0 as u32));
  let mut x676: u32 = 0;
  let mut x677: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x676, &mut x677, x675, x646, (0x0 as u32));
  let mut x678: u32 = 0;
  let mut x679: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x678, &mut x679, x677, x648, (0x0 as u32));
  let mut x680: u32 = 0;
  let mut x681: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x680, &mut x681, x679, x650, (0x0 as u32));
  let mut x682: u32 = 0;
  let mut x683: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x682, &mut x683, x681, x652, (0x0 as u32));
  let mut x684: u32 = 0;
  let mut x685: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x684, &mut x685, x683, x654, (0x0 as u32));
  let mut x686: u32 = 0;
  let mut x687: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x686, &mut x687, x685, x662, (0x0 as u32));
  let mut x688: u32 = 0;
  let mut x689: u32 = 0;
  fiat_p384_mulx_u32(&mut x688, &mut x689, x664, 0xffffffff);
  let mut x690: u32 = 0;
  let mut x691: u32 = 0;
  fiat_p384_mulx_u32(&mut x690, &mut x691, x664, 0xffffffff);
  let mut x692: u32 = 0;
  let mut x693: u32 = 0;
  fiat_p384_mulx_u32(&mut x692, &mut x693, x664, 0xffffffff);
  let mut x694: u32 = 0;
  let mut x695: u32 = 0;
  fiat_p384_mulx_u32(&mut x694, &mut x695, x664, 0xffffffff);
  let mut x696: u32 = 0;
  let mut x697: u32 = 0;
  fiat_p384_mulx_u32(&mut x696, &mut x697, x664, 0xffffffff);
  let mut x698: u32 = 0;
  let mut x699: u32 = 0;
  fiat_p384_mulx_u32(&mut x698, &mut x699, x664, 0xffffffff);
  let mut x700: u32 = 0;
  let mut x701: u32 = 0;
  fiat_p384_mulx_u32(&mut x700, &mut x701, x664, 0xffffffff);
  let mut x702: u32 = 0;
  let mut x703: u32 = 0;
  fiat_p384_mulx_u32(&mut x702, &mut x703, x664, 0xfffffffe);
  let mut x704: u32 = 0;
  let mut x705: u32 = 0;
  fiat_p384_mulx_u32(&mut x704, &mut x705, x664, 0xffffffff);
  let mut x706: u32 = 0;
  let mut x707: u32 = 0;
  fiat_p384_mulx_u32(&mut x706, &mut x707, x664, 0xffffffff);
  let mut x708: u32 = 0;
  let mut x709: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x708, &mut x709, 0x0, x705, x702);
  let mut x710: u32 = 0;
  let mut x711: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x710, &mut x711, x709, x703, x700);
  let mut x712: u32 = 0;
  let mut x713: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x712, &mut x713, x711, x701, x698);
  let mut x714: u32 = 0;
  let mut x715: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x714, &mut x715, x713, x699, x696);
  let mut x716: u32 = 0;
  let mut x717: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x716, &mut x717, x715, x697, x694);
  let mut x718: u32 = 0;
  let mut x719: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x718, &mut x719, x717, x695, x692);
  let mut x720: u32 = 0;
  let mut x721: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x720, &mut x721, x719, x693, x690);
  let mut x722: u32 = 0;
  let mut x723: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x722, &mut x723, x721, x691, x688);
  let mut x724: u32 = 0;
  let mut x725: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x724, &mut x725, 0x0, x664, x706);
  let mut x726: u32 = 0;
  let mut x727: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x726, &mut x727, x725, x666, x707);
  let mut x728: u32 = 0;
  let mut x729: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x728, &mut x729, x727, x668, (0x0 as u32));
  let mut x730: u32 = 0;
  let mut x731: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x730, &mut x731, x729, x670, x704);
  let mut x732: u32 = 0;
  let mut x733: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x732, &mut x733, x731, x672, x708);
  let mut x734: u32 = 0;
  let mut x735: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x734, &mut x735, x733, x674, x710);
  let mut x736: u32 = 0;
  let mut x737: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x736, &mut x737, x735, x676, x712);
  let mut x738: u32 = 0;
  let mut x739: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x738, &mut x739, x737, x678, x714);
  let mut x740: u32 = 0;
  let mut x741: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x740, &mut x741, x739, x680, x716);
  let mut x742: u32 = 0;
  let mut x743: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x742, &mut x743, x741, x682, x718);
  let mut x744: u32 = 0;
  let mut x745: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x744, &mut x745, x743, x684, x720);
  let mut x746: u32 = 0;
  let mut x747: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x746, &mut x747, x745, x686, x722);
  let mut x748: u32 = 0;
  let mut x749: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x748, &mut x749, x723, x689, (0x0 as u32));
  let mut x750: u32 = 0;
  let mut x751: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x750, &mut x751, x663, (0x0 as u32), (0x0 as u32));
  let mut x752: u32 = 0;
  let mut x753: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x752, &mut x753, x687, ((x750 as fiat_p384_u1) as u32), (0x0 as u32));
  let mut x754: u32 = 0;
  let mut x755: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x754, &mut x755, x747, x752, x748);
  let mut x756: u32 = 0;
  let mut x757: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x756, &mut x757, 0x0, x726, (arg1[9]));
  let mut x758: u32 = 0;
  let mut x759: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x758, &mut x759, x757, x728, (0x0 as u32));
  let mut x760: u32 = 0;
  let mut x761: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x760, &mut x761, x759, x730, (0x0 as u32));
  let mut x762: u32 = 0;
  let mut x763: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x762, &mut x763, x761, x732, (0x0 as u32));
  let mut x764: u32 = 0;
  let mut x765: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x764, &mut x765, x763, x734, (0x0 as u32));
  let mut x766: u32 = 0;
  let mut x767: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x766, &mut x767, x765, x736, (0x0 as u32));
  let mut x768: u32 = 0;
  let mut x769: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x768, &mut x769, x767, x738, (0x0 as u32));
  let mut x770: u32 = 0;
  let mut x771: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x770, &mut x771, x769, x740, (0x0 as u32));
  let mut x772: u32 = 0;
  let mut x773: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x772, &mut x773, x771, x742, (0x0 as u32));
  let mut x774: u32 = 0;
  let mut x775: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x774, &mut x775, x773, x744, (0x0 as u32));
  let mut x776: u32 = 0;
  let mut x777: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x776, &mut x777, x775, x746, (0x0 as u32));
  let mut x778: u32 = 0;
  let mut x779: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x778, &mut x779, x777, x754, (0x0 as u32));
  let mut x780: u32 = 0;
  let mut x781: u32 = 0;
  fiat_p384_mulx_u32(&mut x780, &mut x781, x756, 0xffffffff);
  let mut x782: u32 = 0;
  let mut x783: u32 = 0;
  fiat_p384_mulx_u32(&mut x782, &mut x783, x756, 0xffffffff);
  let mut x784: u32 = 0;
  let mut x785: u32 = 0;
  fiat_p384_mulx_u32(&mut x784, &mut x785, x756, 0xffffffff);
  let mut x786: u32 = 0;
  let mut x787: u32 = 0;
  fiat_p384_mulx_u32(&mut x786, &mut x787, x756, 0xffffffff);
  let mut x788: u32 = 0;
  let mut x789: u32 = 0;
  fiat_p384_mulx_u32(&mut x788, &mut x789, x756, 0xffffffff);
  let mut x790: u32 = 0;
  let mut x791: u32 = 0;
  fiat_p384_mulx_u32(&mut x790, &mut x791, x756, 0xffffffff);
  let mut x792: u32 = 0;
  let mut x793: u32 = 0;
  fiat_p384_mulx_u32(&mut x792, &mut x793, x756, 0xffffffff);
  let mut x794: u32 = 0;
  let mut x795: u32 = 0;
  fiat_p384_mulx_u32(&mut x794, &mut x795, x756, 0xfffffffe);
  let mut x796: u32 = 0;
  let mut x797: u32 = 0;
  fiat_p384_mulx_u32(&mut x796, &mut x797, x756, 0xffffffff);
  let mut x798: u32 = 0;
  let mut x799: u32 = 0;
  fiat_p384_mulx_u32(&mut x798, &mut x799, x756, 0xffffffff);
  let mut x800: u32 = 0;
  let mut x801: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x800, &mut x801, 0x0, x797, x794);
  let mut x802: u32 = 0;
  let mut x803: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x802, &mut x803, x801, x795, x792);
  let mut x804: u32 = 0;
  let mut x805: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x804, &mut x805, x803, x793, x790);
  let mut x806: u32 = 0;
  let mut x807: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x806, &mut x807, x805, x791, x788);
  let mut x808: u32 = 0;
  let mut x809: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x808, &mut x809, x807, x789, x786);
  let mut x810: u32 = 0;
  let mut x811: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x810, &mut x811, x809, x787, x784);
  let mut x812: u32 = 0;
  let mut x813: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x812, &mut x813, x811, x785, x782);
  let mut x814: u32 = 0;
  let mut x815: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x814, &mut x815, x813, x783, x780);
  let mut x816: u32 = 0;
  let mut x817: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x816, &mut x817, 0x0, x756, x798);
  let mut x818: u32 = 0;
  let mut x819: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x818, &mut x819, x817, x758, x799);
  let mut x820: u32 = 0;
  let mut x821: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x820, &mut x821, x819, x760, (0x0 as u32));
  let mut x822: u32 = 0;
  let mut x823: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x822, &mut x823, x821, x762, x796);
  let mut x824: u32 = 0;
  let mut x825: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x824, &mut x825, x823, x764, x800);
  let mut x826: u32 = 0;
  let mut x827: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x826, &mut x827, x825, x766, x802);
  let mut x828: u32 = 0;
  let mut x829: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x828, &mut x829, x827, x768, x804);
  let mut x830: u32 = 0;
  let mut x831: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x830, &mut x831, x829, x770, x806);
  let mut x832: u32 = 0;
  let mut x833: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x832, &mut x833, x831, x772, x808);
  let mut x834: u32 = 0;
  let mut x835: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x834, &mut x835, x833, x774, x810);
  let mut x836: u32 = 0;
  let mut x837: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x836, &mut x837, x835, x776, x812);
  let mut x838: u32 = 0;
  let mut x839: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x838, &mut x839, x837, x778, x814);
  let mut x840: u32 = 0;
  let mut x841: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x840, &mut x841, x815, x781, (0x0 as u32));
  let mut x842: u32 = 0;
  let mut x843: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x842, &mut x843, x755, (0x0 as u32), (0x0 as u32));
  let mut x844: u32 = 0;
  let mut x845: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x844, &mut x845, x779, ((x842 as fiat_p384_u1) as u32), (0x0 as u32));
  let mut x846: u32 = 0;
  let mut x847: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x846, &mut x847, x839, x844, x840);
  let mut x848: u32 = 0;
  let mut x849: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x848, &mut x849, 0x0, x818, (arg1[10]));
  let mut x850: u32 = 0;
  let mut x851: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x850, &mut x851, x849, x820, (0x0 as u32));
  let mut x852: u32 = 0;
  let mut x853: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x852, &mut x853, x851, x822, (0x0 as u32));
  let mut x854: u32 = 0;
  let mut x855: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x854, &mut x855, x853, x824, (0x0 as u32));
  let mut x856: u32 = 0;
  let mut x857: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x856, &mut x857, x855, x826, (0x0 as u32));
  let mut x858: u32 = 0;
  let mut x859: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x858, &mut x859, x857, x828, (0x0 as u32));
  let mut x860: u32 = 0;
  let mut x861: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x860, &mut x861, x859, x830, (0x0 as u32));
  let mut x862: u32 = 0;
  let mut x863: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x862, &mut x863, x861, x832, (0x0 as u32));
  let mut x864: u32 = 0;
  let mut x865: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x864, &mut x865, x863, x834, (0x0 as u32));
  let mut x866: u32 = 0;
  let mut x867: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x866, &mut x867, x865, x836, (0x0 as u32));
  let mut x868: u32 = 0;
  let mut x869: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x868, &mut x869, x867, x838, (0x0 as u32));
  let mut x870: u32 = 0;
  let mut x871: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x870, &mut x871, x869, x846, (0x0 as u32));
  let mut x872: u32 = 0;
  let mut x873: u32 = 0;
  fiat_p384_mulx_u32(&mut x872, &mut x873, x848, 0xffffffff);
  let mut x874: u32 = 0;
  let mut x875: u32 = 0;
  fiat_p384_mulx_u32(&mut x874, &mut x875, x848, 0xffffffff);
  let mut x876: u32 = 0;
  let mut x877: u32 = 0;
  fiat_p384_mulx_u32(&mut x876, &mut x877, x848, 0xffffffff);
  let mut x878: u32 = 0;
  let mut x879: u32 = 0;
  fiat_p384_mulx_u32(&mut x878, &mut x879, x848, 0xffffffff);
  let mut x880: u32 = 0;
  let mut x881: u32 = 0;
  fiat_p384_mulx_u32(&mut x880, &mut x881, x848, 0xffffffff);
  let mut x882: u32 = 0;
  let mut x883: u32 = 0;
  fiat_p384_mulx_u32(&mut x882, &mut x883, x848, 0xffffffff);
  let mut x884: u32 = 0;
  let mut x885: u32 = 0;
  fiat_p384_mulx_u32(&mut x884, &mut x885, x848, 0xffffffff);
  let mut x886: u32 = 0;
  let mut x887: u32 = 0;
  fiat_p384_mulx_u32(&mut x886, &mut x887, x848, 0xfffffffe);
  let mut x888: u32 = 0;
  let mut x889: u32 = 0;
  fiat_p384_mulx_u32(&mut x888, &mut x889, x848, 0xffffffff);
  let mut x890: u32 = 0;
  let mut x891: u32 = 0;
  fiat_p384_mulx_u32(&mut x890, &mut x891, x848, 0xffffffff);
  let mut x892: u32 = 0;
  let mut x893: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x892, &mut x893, 0x0, x889, x886);
  let mut x894: u32 = 0;
  let mut x895: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x894, &mut x895, x893, x887, x884);
  let mut x896: u32 = 0;
  let mut x897: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x896, &mut x897, x895, x885, x882);
  let mut x898: u32 = 0;
  let mut x899: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x898, &mut x899, x897, x883, x880);
  let mut x900: u32 = 0;
  let mut x901: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x900, &mut x901, x899, x881, x878);
  let mut x902: u32 = 0;
  let mut x903: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x902, &mut x903, x901, x879, x876);
  let mut x904: u32 = 0;
  let mut x905: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x904, &mut x905, x903, x877, x874);
  let mut x906: u32 = 0;
  let mut x907: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x906, &mut x907, x905, x875, x872);
  let mut x908: u32 = 0;
  let mut x909: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x908, &mut x909, 0x0, x848, x890);
  let mut x910: u32 = 0;
  let mut x911: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x910, &mut x911, x909, x850, x891);
  let mut x912: u32 = 0;
  let mut x913: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x912, &mut x913, x911, x852, (0x0 as u32));
  let mut x914: u32 = 0;
  let mut x915: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x914, &mut x915, x913, x854, x888);
  let mut x916: u32 = 0;
  let mut x917: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x916, &mut x917, x915, x856, x892);
  let mut x918: u32 = 0;
  let mut x919: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x918, &mut x919, x917, x858, x894);
  let mut x920: u32 = 0;
  let mut x921: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x920, &mut x921, x919, x860, x896);
  let mut x922: u32 = 0;
  let mut x923: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x922, &mut x923, x921, x862, x898);
  let mut x924: u32 = 0;
  let mut x925: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x924, &mut x925, x923, x864, x900);
  let mut x926: u32 = 0;
  let mut x927: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x926, &mut x927, x925, x866, x902);
  let mut x928: u32 = 0;
  let mut x929: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x928, &mut x929, x927, x868, x904);
  let mut x930: u32 = 0;
  let mut x931: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x930, &mut x931, x929, x870, x906);
  let mut x932: u32 = 0;
  let mut x933: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x932, &mut x933, x907, x873, (0x0 as u32));
  let mut x934: u32 = 0;
  let mut x935: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x934, &mut x935, x847, (0x0 as u32), (0x0 as u32));
  let mut x936: u32 = 0;
  let mut x937: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x936, &mut x937, x871, ((x934 as fiat_p384_u1) as u32), (0x0 as u32));
  let mut x938: u32 = 0;
  let mut x939: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x938, &mut x939, x931, x936, x932);
  let mut x940: u32 = 0;
  let mut x941: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x940, &mut x941, 0x0, x910, (arg1[11]));
  let mut x942: u32 = 0;
  let mut x943: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x942, &mut x943, x941, x912, (0x0 as u32));
  let mut x944: u32 = 0;
  let mut x945: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x944, &mut x945, x943, x914, (0x0 as u32));
  let mut x946: u32 = 0;
  let mut x947: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x946, &mut x947, x945, x916, (0x0 as u32));
  let mut x948: u32 = 0;
  let mut x949: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x948, &mut x949, x947, x918, (0x0 as u32));
  let mut x950: u32 = 0;
  let mut x951: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x950, &mut x951, x949, x920, (0x0 as u32));
  let mut x952: u32 = 0;
  let mut x953: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x952, &mut x953, x951, x922, (0x0 as u32));
  let mut x954: u32 = 0;
  let mut x955: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x954, &mut x955, x953, x924, (0x0 as u32));
  let mut x956: u32 = 0;
  let mut x957: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x956, &mut x957, x955, x926, (0x0 as u32));
  let mut x958: u32 = 0;
  let mut x959: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x958, &mut x959, x957, x928, (0x0 as u32));
  let mut x960: u32 = 0;
  let mut x961: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x960, &mut x961, x959, x930, (0x0 as u32));
  let mut x962: u32 = 0;
  let mut x963: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x962, &mut x963, x961, x938, (0x0 as u32));
  let mut x964: u32 = 0;
  let mut x965: u32 = 0;
  fiat_p384_mulx_u32(&mut x964, &mut x965, x940, 0xffffffff);
  let mut x966: u32 = 0;
  let mut x967: u32 = 0;
  fiat_p384_mulx_u32(&mut x966, &mut x967, x940, 0xffffffff);
  let mut x968: u32 = 0;
  let mut x969: u32 = 0;
  fiat_p384_mulx_u32(&mut x968, &mut x969, x940, 0xffffffff);
  let mut x970: u32 = 0;
  let mut x971: u32 = 0;
  fiat_p384_mulx_u32(&mut x970, &mut x971, x940, 0xffffffff);
  let mut x972: u32 = 0;
  let mut x973: u32 = 0;
  fiat_p384_mulx_u32(&mut x972, &mut x973, x940, 0xffffffff);
  let mut x974: u32 = 0;
  let mut x975: u32 = 0;
  fiat_p384_mulx_u32(&mut x974, &mut x975, x940, 0xffffffff);
  let mut x976: u32 = 0;
  let mut x977: u32 = 0;
  fiat_p384_mulx_u32(&mut x976, &mut x977, x940, 0xffffffff);
  let mut x978: u32 = 0;
  let mut x979: u32 = 0;
  fiat_p384_mulx_u32(&mut x978, &mut x979, x940, 0xfffffffe);
  let mut x980: u32 = 0;
  let mut x981: u32 = 0;
  fiat_p384_mulx_u32(&mut x980, &mut x981, x940, 0xffffffff);
  let mut x982: u32 = 0;
  let mut x983: u32 = 0;
  fiat_p384_mulx_u32(&mut x982, &mut x983, x940, 0xffffffff);
  let mut x984: u32 = 0;
  let mut x985: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x984, &mut x985, 0x0, x981, x978);
  let mut x986: u32 = 0;
  let mut x987: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x986, &mut x987, x985, x979, x976);
  let mut x988: u32 = 0;
  let mut x989: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x988, &mut x989, x987, x977, x974);
  let mut x990: u32 = 0;
  let mut x991: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x990, &mut x991, x989, x975, x972);
  let mut x992: u32 = 0;
  let mut x993: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x992, &mut x993, x991, x973, x970);
  let mut x994: u32 = 0;
  let mut x995: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x994, &mut x995, x993, x971, x968);
  let mut x996: u32 = 0;
  let mut x997: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x996, &mut x997, x995, x969, x966);
  let mut x998: u32 = 0;
  let mut x999: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x998, &mut x999, x997, x967, x964);
  let mut x1000: u32 = 0;
  let mut x1001: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1000, &mut x1001, 0x0, x940, x982);
  let mut x1002: u32 = 0;
  let mut x1003: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1002, &mut x1003, x1001, x942, x983);
  let mut x1004: u32 = 0;
  let mut x1005: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1004, &mut x1005, x1003, x944, (0x0 as u32));
  let mut x1006: u32 = 0;
  let mut x1007: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1006, &mut x1007, x1005, x946, x980);
  let mut x1008: u32 = 0;
  let mut x1009: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1008, &mut x1009, x1007, x948, x984);
  let mut x1010: u32 = 0;
  let mut x1011: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1010, &mut x1011, x1009, x950, x986);
  let mut x1012: u32 = 0;
  let mut x1013: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1012, &mut x1013, x1011, x952, x988);
  let mut x1014: u32 = 0;
  let mut x1015: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1014, &mut x1015, x1013, x954, x990);
  let mut x1016: u32 = 0;
  let mut x1017: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1016, &mut x1017, x1015, x956, x992);
  let mut x1018: u32 = 0;
  let mut x1019: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1018, &mut x1019, x1017, x958, x994);
  let mut x1020: u32 = 0;
  let mut x1021: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1020, &mut x1021, x1019, x960, x996);
  let mut x1022: u32 = 0;
  let mut x1023: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1022, &mut x1023, x1021, x962, x998);
  let mut x1024: u32 = 0;
  let mut x1025: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1024, &mut x1025, x999, x965, (0x0 as u32));
  let mut x1026: u32 = 0;
  let mut x1027: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1026, &mut x1027, x939, (0x0 as u32), (0x0 as u32));
  let mut x1028: u32 = 0;
  let mut x1029: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1028, &mut x1029, x963, ((x1026 as fiat_p384_u1) as u32), (0x0 as u32));
  let mut x1030: u32 = 0;
  let mut x1031: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1030, &mut x1031, x1023, x1028, x1024);
  let mut x1032: u32 = 0;
  let mut x1033: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1032, &mut x1033, 0x0, x1002, 0xffffffff);
  let mut x1034: u32 = 0;
  let mut x1035: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1034, &mut x1035, x1033, x1004, (0x0 as u32));
  let mut x1036: u32 = 0;
  let mut x1037: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1036, &mut x1037, x1035, x1006, (0x0 as u32));
  let mut x1038: u32 = 0;
  let mut x1039: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1038, &mut x1039, x1037, x1008, 0xffffffff);
  let mut x1040: u32 = 0;
  let mut x1041: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1040, &mut x1041, x1039, x1010, 0xfffffffe);
  let mut x1042: u32 = 0;
  let mut x1043: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1042, &mut x1043, x1041, x1012, 0xffffffff);
  let mut x1044: u32 = 0;
  let mut x1045: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1044, &mut x1045, x1043, x1014, 0xffffffff);
  let mut x1046: u32 = 0;
  let mut x1047: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1046, &mut x1047, x1045, x1016, 0xffffffff);
  let mut x1048: u32 = 0;
  let mut x1049: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1048, &mut x1049, x1047, x1018, 0xffffffff);
  let mut x1050: u32 = 0;
  let mut x1051: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1050, &mut x1051, x1049, x1020, 0xffffffff);
  let mut x1052: u32 = 0;
  let mut x1053: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1052, &mut x1053, x1051, x1022, 0xffffffff);
  let mut x1054: u32 = 0;
  let mut x1055: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1054, &mut x1055, x1053, x1030, 0xffffffff);
  let mut x1056: u32 = 0;
  let mut x1057: fiat_p384_u1 = 0;
  fiat_p384_addcarryx_u32(&mut x1056, &mut x1057, x1031, (0x0 as u32), (0x0 as u32));
  let mut x1058: u32 = 0;
  let mut x1059: fiat_p384_u1 = 0;
  fiat_p384_subborrowx_u32(&mut x1058, &mut x1059, x1055, ((x1056 as fiat_p384_u1) as u32), (0x0 as u32));
  let mut x1060: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1060, x1059, x1032, x1002);
  let mut x1061: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1061, x1059, x1034, x1004);
  let mut x1062: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1062, x1059, x1036, x1006);
  let mut x1063: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1063, x1059, x1038, x1008);
  let mut x1064: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1064, x1059, x1040, x1010);
  let mut x1065: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1065, x1059, x1042, x1012);
  let mut x1066: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1066, x1059, x1044, x1014);
  let mut x1067: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1067, x1059, x1046, x1016);
  let mut x1068: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1068, x1059, x1048, x1018);
  let mut x1069: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1069, x1059, x1050, x1020);
  let mut x1070: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1070, x1059, x1052, x1022);
  let mut x1071: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1071, x1059, x1054, x1030);
  out1[0] = x1060;
  out1[1] = x1061;
  out1[2] = x1062;
  out1[3] = x1063;
  out1[4] = x1064;
  out1[5] = x1065;
  out1[6] = x1066;
  out1[7] = x1067;
  out1[8] = x1068;
  out1[9] = x1069;
  out1[10] = x1070;
  out1[11] = x1071;
}

/*
 * The function fiat_p384_nonzero outputs a single non-zero word if the input is non-zero and zero otherwise.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   out1 = 0 ↔ eval (from_montgomery arg1) mod m = 0
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffff]
 */
#[inline]
pub fn fiat_p384_nonzero(out1: &mut u32, arg1: &[u32; 12]) -> () {
  let x1: u32 = ((arg1[0]) | ((arg1[1]) | ((arg1[2]) | ((arg1[3]) | ((arg1[4]) | ((arg1[5]) | ((arg1[6]) | ((arg1[7]) | ((arg1[8]) | ((arg1[9]) | ((arg1[10]) | ((arg1[11]) | (0x0 as u32)))))))))))));
  *out1 = x1;
}

/*
 * The function fiat_p384_selectznz is a multi-limb conditional select.
 * Postconditions:
 *   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 *   arg3: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p384_selectznz(out1: &mut [u32; 12], arg1: fiat_p384_u1, arg2: &[u32; 12], arg3: &[u32; 12]) -> () {
  let mut x1: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x1, arg1, (arg2[0]), (arg3[0]));
  let mut x2: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x2, arg1, (arg2[1]), (arg3[1]));
  let mut x3: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x3, arg1, (arg2[2]), (arg3[2]));
  let mut x4: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x4, arg1, (arg2[3]), (arg3[3]));
  let mut x5: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x5, arg1, (arg2[4]), (arg3[4]));
  let mut x6: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x6, arg1, (arg2[5]), (arg3[5]));
  let mut x7: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x7, arg1, (arg2[6]), (arg3[6]));
  let mut x8: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x8, arg1, (arg2[7]), (arg3[7]));
  let mut x9: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x9, arg1, (arg2[8]), (arg3[8]));
  let mut x10: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x10, arg1, (arg2[9]), (arg3[9]));
  let mut x11: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x11, arg1, (arg2[10]), (arg3[10]));
  let mut x12: u32 = 0;
  fiat_p384_cmovznz_u32(&mut x12, arg1, (arg2[11]), (arg3[11]));
  out1[0] = x1;
  out1[1] = x2;
  out1[2] = x3;
  out1[3] = x4;
  out1[4] = x5;
  out1[5] = x6;
  out1[6] = x7;
  out1[7] = x8;
  out1[8] = x9;
  out1[9] = x10;
  out1[10] = x11;
  out1[11] = x12;
}

/*
 * The function fiat_p384_to_bytes serializes a field element in the Montgomery domain to bytes in little-endian order.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..47]
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
 */
#[inline]
pub fn fiat_p384_to_bytes(out1: &mut [u8; 48], arg1: &[u32; 12]) -> () {
  let x1: u32 = (arg1[11]);
  let x2: u32 = (arg1[10]);
  let x3: u32 = (arg1[9]);
  let x4: u32 = (arg1[8]);
  let x5: u32 = (arg1[7]);
  let x6: u32 = (arg1[6]);
  let x7: u32 = (arg1[5]);
  let x8: u32 = (arg1[4]);
  let x9: u32 = (arg1[3]);
  let x10: u32 = (arg1[2]);
  let x11: u32 = (arg1[1]);
  let x12: u32 = (arg1[0]);
  let x13: u32 = (x12 >> 8);
  let x14: u8 = ((x12 & (0xff as u32)) as u8);
  let x15: u32 = (x13 >> 8);
  let x16: u8 = ((x13 & (0xff as u32)) as u8);
  let x17: u8 = ((x15 >> 8) as u8);
  let x18: u8 = ((x15 & (0xff as u32)) as u8);
  let x19: u8 = (x17 & 0xff);
  let x20: u32 = (x11 >> 8);
  let x21: u8 = ((x11 & (0xff as u32)) as u8);
  let x22: u32 = (x20 >> 8);
  let x23: u8 = ((x20 & (0xff as u32)) as u8);
  let x24: u8 = ((x22 >> 8) as u8);
  let x25: u8 = ((x22 & (0xff as u32)) as u8);
  let x26: u8 = (x24 & 0xff);
  let x27: u32 = (x10 >> 8);
  let x28: u8 = ((x10 & (0xff as u32)) as u8);
  let x29: u32 = (x27 >> 8);
  let x30: u8 = ((x27 & (0xff as u32)) as u8);
  let x31: u8 = ((x29 >> 8) as u8);
  let x32: u8 = ((x29 & (0xff as u32)) as u8);
  let x33: u8 = (x31 & 0xff);
  let x34: u32 = (x9 >> 8);
  let x35: u8 = ((x9 & (0xff as u32)) as u8);
  let x36: u32 = (x34 >> 8);
  let x37: u8 = ((x34 & (0xff as u32)) as u8);
  let x38: u8 = ((x36 >> 8) as u8);
  let x39: u8 = ((x36 & (0xff as u32)) as u8);
  let x40: u8 = (x38 & 0xff);
  let x41: u32 = (x8 >> 8);
  let x42: u8 = ((x8 & (0xff as u32)) as u8);
  let x43: u32 = (x41 >> 8);
  let x44: u8 = ((x41 & (0xff as u32)) as u8);
  let x45: u8 = ((x43 >> 8) as u8);
  let x46: u8 = ((x43 & (0xff as u32)) as u8);
  let x47: u8 = (x45 & 0xff);
  let x48: u32 = (x7 >> 8);
  let x49: u8 = ((x7 & (0xff as u32)) as u8);
  let x50: u32 = (x48 >> 8);
  let x51: u8 = ((x48 & (0xff as u32)) as u8);
  let x52: u8 = ((x50 >> 8) as u8);
  let x53: u8 = ((x50 & (0xff as u32)) as u8);
  let x54: u8 = (x52 & 0xff);
  let x55: u32 = (x6 >> 8);
  let x56: u8 = ((x6 & (0xff as u32)) as u8);
  let x57: u32 = (x55 >> 8);
  let x58: u8 = ((x55 & (0xff as u32)) as u8);
  let x59: u8 = ((x57 >> 8) as u8);
  let x60: u8 = ((x57 & (0xff as u32)) as u8);
  let x61: u8 = (x59 & 0xff);
  let x62: u32 = (x5 >> 8);
  let x63: u8 = ((x5 & (0xff as u32)) as u8);
  let x64: u32 = (x62 >> 8);
  let x65: u8 = ((x62 & (0xff as u32)) as u8);
  let x66: u8 = ((x64 >> 8) as u8);
  let x67: u8 = ((x64 & (0xff as u32)) as u8);
  let x68: u8 = (x66 & 0xff);
  let x69: u32 = (x4 >> 8);
  let x70: u8 = ((x4 & (0xff as u32)) as u8);
  let x71: u32 = (x69 >> 8);
  let x72: u8 = ((x69 & (0xff as u32)) as u8);
  let x73: u8 = ((x71 >> 8) as u8);
  let x74: u8 = ((x71 & (0xff as u32)) as u8);
  let x75: u8 = (x73 & 0xff);
  let x76: u32 = (x3 >> 8);
  let x77: u8 = ((x3 & (0xff as u32)) as u8);
  let x78: u32 = (x76 >> 8);
  let x79: u8 = ((x76 & (0xff as u32)) as u8);
  let x80: u8 = ((x78 >> 8) as u8);
  let x81: u8 = ((x78 & (0xff as u32)) as u8);
  let x82: u8 = (x80 & 0xff);
  let x83: u32 = (x2 >> 8);
  let x84: u8 = ((x2 & (0xff as u32)) as u8);
  let x85: u32 = (x83 >> 8);
  let x86: u8 = ((x83 & (0xff as u32)) as u8);
  let x87: u8 = ((x85 >> 8) as u8);
  let x88: u8 = ((x85 & (0xff as u32)) as u8);
  let x89: u8 = (x87 & 0xff);
  let x90: u32 = (x1 >> 8);
  let x91: u8 = ((x1 & (0xff as u32)) as u8);
  let x92: u32 = (x90 >> 8);
  let x93: u8 = ((x90 & (0xff as u32)) as u8);
  let x94: u8 = ((x92 >> 8) as u8);
  let x95: u8 = ((x92 & (0xff as u32)) as u8);
  out1[0] = x14;
  out1[1] = x16;
  out1[2] = x18;
  out1[3] = x19;
  out1[4] = x21;
  out1[5] = x23;
  out1[6] = x25;
  out1[7] = x26;
  out1[8] = x28;
  out1[9] = x30;
  out1[10] = x32;
  out1[11] = x33;
  out1[12] = x35;
  out1[13] = x37;
  out1[14] = x39;
  out1[15] = x40;
  out1[16] = x42;
  out1[17] = x44;
  out1[18] = x46;
  out1[19] = x47;
  out1[20] = x49;
  out1[21] = x51;
  out1[22] = x53;
  out1[23] = x54;
  out1[24] = x56;
  out1[25] = x58;
  out1[26] = x60;
  out1[27] = x61;
  out1[28] = x63;
  out1[29] = x65;
  out1[30] = x67;
  out1[31] = x68;
  out1[32] = x70;
  out1[33] = x72;
  out1[34] = x74;
  out1[35] = x75;
  out1[36] = x77;
  out1[37] = x79;
  out1[38] = x81;
  out1[39] = x82;
  out1[40] = x84;
  out1[41] = x86;
  out1[42] = x88;
  out1[43] = x89;
  out1[44] = x91;
  out1[45] = x93;
  out1[46] = x95;
  out1[47] = x94;
}

/*
 * The function fiat_p384_from_bytes deserializes a field element in the Montgomery domain from bytes in little-endian order.
 * Preconditions:
 *   0 ≤ bytes_eval arg1 < m
 * Postconditions:
 *   eval out1 mod m = bytes_eval arg1 mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff], [0x0 ~> 0xffffffff]]
 */
#[inline]
pub fn fiat_p384_from_bytes(out1: &mut [u32; 12], arg1: &[u8; 48]) -> () {
  let x1: u32 = (((arg1[47]) as u32) << 24);
  let x2: u32 = (((arg1[46]) as u32) << 16);
  let x3: u32 = (((arg1[45]) as u32) << 8);
  let x4: u8 = (arg1[44]);
  let x5: u32 = (((arg1[43]) as u32) << 24);
  let x6: u32 = (((arg1[42]) as u32) << 16);
  let x7: u32 = (((arg1[41]) as u32) << 8);
  let x8: u8 = (arg1[40]);
  let x9: u32 = (((arg1[39]) as u32) << 24);
  let x10: u32 = (((arg1[38]) as u32) << 16);
  let x11: u32 = (((arg1[37]) as u32) << 8);
  let x12: u8 = (arg1[36]);
  let x13: u32 = (((arg1[35]) as u32) << 24);
  let x14: u32 = (((arg1[34]) as u32) << 16);
  let x15: u32 = (((arg1[33]) as u32) << 8);
  let x16: u8 = (arg1[32]);
  let x17: u32 = (((arg1[31]) as u32) << 24);
  let x18: u32 = (((arg1[30]) as u32) << 16);
  let x19: u32 = (((arg1[29]) as u32) << 8);
  let x20: u8 = (arg1[28]);
  let x21: u32 = (((arg1[27]) as u32) << 24);
  let x22: u32 = (((arg1[26]) as u32) << 16);
  let x23: u32 = (((arg1[25]) as u32) << 8);
  let x24: u8 = (arg1[24]);
  let x25: u32 = (((arg1[23]) as u32) << 24);
  let x26: u32 = (((arg1[22]) as u32) << 16);
  let x27: u32 = (((arg1[21]) as u32) << 8);
  let x28: u8 = (arg1[20]);
  let x29: u32 = (((arg1[19]) as u32) << 24);
  let x30: u32 = (((arg1[18]) as u32) << 16);
  let x31: u32 = (((arg1[17]) as u32) << 8);
  let x32: u8 = (arg1[16]);
  let x33: u32 = (((arg1[15]) as u32) << 24);
  let x34: u32 = (((arg1[14]) as u32) << 16);
  let x35: u32 = (((arg1[13]) as u32) << 8);
  let x36: u8 = (arg1[12]);
  let x37: u32 = (((arg1[11]) as u32) << 24);
  let x38: u32 = (((arg1[10]) as u32) << 16);
  let x39: u32 = (((arg1[9]) as u32) << 8);
  let x40: u8 = (arg1[8]);
  let x41: u32 = (((arg1[7]) as u32) << 24);
  let x42: u32 = (((arg1[6]) as u32) << 16);
  let x43: u32 = (((arg1[5]) as u32) << 8);
  let x44: u8 = (arg1[4]);
  let x45: u32 = (((arg1[3]) as u32) << 24);
  let x46: u32 = (((arg1[2]) as u32) << 16);
  let x47: u32 = (((arg1[1]) as u32) << 8);
  let x48: u8 = (arg1[0]);
  let x49: u32 = ((x48 as u32) + (x47 + (x46 + x45)));
  let x50: u32 = (x49 & 0xffffffff);
  let x51: u32 = ((x4 as u32) + (x3 + (x2 + x1)));
  let x52: u32 = ((x8 as u32) + (x7 + (x6 + x5)));
  let x53: u32 = ((x12 as u32) + (x11 + (x10 + x9)));
  let x54: u32 = ((x16 as u32) + (x15 + (x14 + x13)));
  let x55: u32 = ((x20 as u32) + (x19 + (x18 + x17)));
  let x56: u32 = ((x24 as u32) + (x23 + (x22 + x21)));
  let x57: u32 = ((x28 as u32) + (x27 + (x26 + x25)));
  let x58: u32 = ((x32 as u32) + (x31 + (x30 + x29)));
  let x59: u32 = ((x36 as u32) + (x35 + (x34 + x33)));
  let x60: u32 = ((x40 as u32) + (x39 + (x38 + x37)));
  let x61: u32 = ((x44 as u32) + (x43 + (x42 + x41)));
  let x62: u32 = (x61 & 0xffffffff);
  let x63: u32 = (x60 & 0xffffffff);
  let x64: u32 = (x59 & 0xffffffff);
  let x65: u32 = (x58 & 0xffffffff);
  let x66: u32 = (x57 & 0xffffffff);
  let x67: u32 = (x56 & 0xffffffff);
  let x68: u32 = (x55 & 0xffffffff);
  let x69: u32 = (x54 & 0xffffffff);
  let x70: u32 = (x53 & 0xffffffff);
  let x71: u32 = (x52 & 0xffffffff);
  out1[0] = x50;
  out1[1] = x62;
  out1[2] = x63;
  out1[3] = x64;
  out1[4] = x65;
  out1[5] = x66;
  out1[6] = x67;
  out1[7] = x68;
  out1[8] = x69;
  out1[9] = x70;
  out1[10] = x71;
  out1[11] = x51;
}

