name: CI (Coq)

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        env:
        - { COQ_VERSION: "8.11.0", COQ_PACKAGE: "coq-8.11.0 libcoq-8.11.0-ocaml-dev", SKIP_BEDROCK2: "" , PPA: "ppa:jgross-h/many-coq-versions-ocaml-4-05" }
        - { COQ_VERSION: "8.10.2", COQ_PACKAGE: "coq-8.10.2 libcoq-8.10.2-ocaml-dev", SKIP_BEDROCK2: "" , PPA: "ppa:jgross-h/many-coq-versions-ocaml-4-05" }
        - { COQ_VERSION: "8.9.1" , COQ_PACKAGE: "coq-8.9.1 libcoq-8.9.1-ocaml-dev"  , SKIP_BEDROCK2: "1", PPA: "ppa:jgross-h/many-coq-versions" }
        - { COQ_VERSION: "master", COQ_PACKAGE: "coq libcoq-ocaml-dev"              , SKIP_BEDROCK2: "" , PPA: "ppa:jgross-h/coq-master-daily" }
        - { COQ_VERSION: "v8.11" , COQ_PACKAGE: "coq libcoq-ocaml-dev"              , SKIP_BEDROCK2: "" , PPA: "ppa:jgross-h/coq-8.11-daily" }
        - { COQ_VERSION: "v8.10" , COQ_PACKAGE: "coq libcoq-ocaml-dev"              , SKIP_BEDROCK2: "" , PPA: "ppa:jgross-h/coq-8.10-daily" }
        - { COQ_VERSION: "v8.9"  , COQ_PACKAGE: "coq libcoq-ocaml-dev"              , SKIP_BEDROCK2: "1", PPA: "ppa:jgross-h/coq-8.9-daily" }
        ghc: [ '8.2.2' ]
        cabal: [ '3.0' ]

    env: ${{ matrix.env }}

    steps:
    - name: install Coq
      run: |
        sudo sed -i 's/azure\.//' /etc/apt/sources.list
        if [ ! -z "$PPA" ]; then sudo add-apt-repository "$PPA" -y; fi
        sudo apt-get -o Acquire::Retries=30 update -q
        sudo apt-get -o Acquire::Retries=30 install ocaml-findlib $COQ_PACKAGE -y --allow-unauthenticated
    - name: echo build params
      run: |
        set -e
        lscpu
        uname -a
        lsb_release -a
        ocamlc -config
        coqc --version
        echo | coqtop
    - uses: actions/checkout@v2
    - name: submodules-init
      uses: snickerbockers/submodules-init@v4
    - uses: actions/setup-haskell@v1
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
    - name: add Coq matcher
      run: echo "::add-matcher::.github/coq.json"
    - name: deps
      run: etc/ci/github-actions-make.sh -j2 deps
    - name: all
      run: etc/ci/github-actions-make.sh -j2 all
    - name: upload OCaml files
      uses: actions/upload-artifact@v1
      with:
        name: ExtractionOCaml
        path: src/ExtractionOCaml
    - name: standalone-haskell
      run: etc/ci/github-actions-make.sh -j2 standalone-haskell
    - name: upload Haskell files
      uses: actions/upload-artifact@v1
      with:
        name: ExtractionHaskell
        path: src/ExtractionHaskell
    - name: display timing info
      run: cat time-of-build-pretty.log
