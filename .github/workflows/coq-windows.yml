name: CI (Coq, Windows)

# Note that we must split up each command into a separate step for Windows, because otherwise we don't get error code
# See also https://github.com/avsm/setup-ocaml/issues/72

on:
  push:
    branches: [ master , sp2019latest , v8.6 , v8.8 , v8.10 ]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build-windows:

    runs-on: windows-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true

    env:
      NJOBS: "2"
      COQ_VERSION: "8.15.2" # https://packages.debian.org/testing/coq
      COQEXTRAFLAGS: "-async-proofs-j 1"
      COQCHKEXTRAFLAGS: ""
      OPAMYES: "true"
      OPAMCONFIRMLEVEL: "unsafe-yes"

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x
    - name: Set up OCaml
      uses: ocaml/setup-ocaml@v2
      with:
        ocaml-compiler: 4.11.1
    - run: opam depext coq.${{ env.COQ_VERSION }}
    - run: opam pin add --kind=version coq ${{ env.COQ_VERSION }}

    - name: Install System Dependencies
      run: |
        %CYGWIN_ROOT%\setup-x86_64.exe -qnNdO -P time
      shell: cmd

    - name: Work around https://github.com/actions/checkout/issues/766
      run: |
        %CYGWIN_ROOT%\bin\bash.exe -l -c 'git config --global --add safe.directory "*"'
      shell: cmd

    - name: echo build params
      run: etc/ci/describe-system-config-win.bat
      shell: cmd
    - name: deps
      run: |
        %CYGWIN_ROOT%\bin\bash.exe -l -c 'cd "%cd%"; opam exec -- etc/ci/github-actions-make.sh -j${NJOBS} deps'
      shell: cmd
    - name: standalone-ocaml
      run: |
        %CYGWIN_ROOT%\bin\bash.exe -l -c 'cd "%cd%"; opam exec -- etc/ci/github-actions-make.sh -j${NJOBS} standalone-ocaml'
      shell: cmd
    - name: coq
      run: |
        %CYGWIN_ROOT%\bin\bash.exe -l -c 'cd "%cd%"; opam exec -- etc/ci/github-actions-make.sh -j1 coq'
      shell: cmd
    - name: all-except-generated
      run: |
        %CYGWIN_ROOT%\bin\bash.exe -l -c 'cd "%cd%"; opam exec -- etc/ci/github-actions-make.sh -j1 all-except-generated'
      shell: cmd
    - name: c-files lite-generated-files
      run: |
        %CYGWIN_ROOT%\bin\bash.exe -l -c 'cd "%cd%"; opam exec -- etc/ci/github-actions-make.sh -j${NJOBS} c-files lite-generated-files'
      shell: cmd
    - name: only-test-amd64-files-lite
      run: |
        %CYGWIN_ROOT%\bin\bash.exe -l -c 'cd "%cd%"; opam exec -- etc/ci/github-actions-make.sh -j${NJOBS} only-test-amd64-files-lite SLOWEST_FIRST=1'
      shell: cmd
    - name: upload OCaml files
      uses: actions/upload-artifact@v3
      with:
        name: ExtractionOCaml
        path: src/ExtractionOCaml
    - name: display timing info
      run: type time-of-build-pretty.log
      shell: cmd
    - name: display per-line timing info
      run: |
        %CYGWIN_ROOT%\bin\bash.exe -l -c 'cd "%cd%"; etc/ci/github-actions-display-per-line-timing.sh'
      shell: cmd
#    - name: upload timing and .vo info
#      uses: actions/upload-artifact@v3
#      with:
#        name: build-outputs
#        path: .
#      if: always ()
#    - name: validate
#      run: |
#        %CYGWIN_ROOT%\bin\bash.exe -l -c 'cd "%cd%"; opam exec -- make TIMED=1 validate COQCHKFLAGS="-o ${COQCHKEXTRAFLAGS}"'
#      shell: cmd
#      if: github.event_name != 'pull_request'
