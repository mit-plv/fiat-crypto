Barrett256.barrett_red256 = 
fun var : API.type -> Type =>
Î» x x0 : var (type.base (base.type.type_base Z)),
expr_let v := #ident_Z_cast @ ###uint256 @ (#ident_fancy_selm @ (###256, (#ident_Z_cast @ ###uint256 @ $$x0, ###0, ###26959946667150639793205513449348445388433292963828203772348655992835))) in
expr_let v0 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_rshi @ (###256, ###255, (#ident_Z_cast @ ###uint256 @ $$x0, #ident_Z_cast @ ###uint256 @ $$x))) in
expr_let v1 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_rshi @ (###256, ###255, (###0, #ident_Z_cast @ ###uint256 @ $$x0))) in
expr_let v2 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_mulhh @ (###256, (###26959946667150639793205513449348445388433292963828203772348655992835, #ident_Z_cast @ ###uint256 @ $$v0))) in
expr_let v3 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_mulhl @ (###256, (###26959946667150639793205513449348445388433292963828203772348655992835, #ident_Z_cast @ ###uint256 @ $$v0))) in
expr_let v4 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_mullh @ (###256, (###26959946667150639793205513449348445388433292963828203772348655992835, #ident_Z_cast @ ###uint256 @ $$v0))) in
expr_let v5 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_mulll @ (###256, (###26959946667150639793205513449348445388433292963828203772348655992835, #ident_Z_cast @ ###uint256 @ $$v0))) in
expr_let v6 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_add @ (###256, ###128, (#ident_Z_cast @ ###uint256 @ $$v5, #ident_Z_cast @ ###uint256 @ $$v4))) in
expr_let v7 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_addc @ (###256, ###(-128), (#ident_Z_cast @ ###r[0 ~> 1] @ (#ident_snd @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v6)), #ident_Z_cast @ ###uint256 @ $$v2, #ident_Z_cast @ ###uint256 @ $$v4))) in
expr_let v8 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_add @ (###256, ###128, (#ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v6)), #ident_Z_cast @ ###uint256 @ $$v3))) in
expr_let v9 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_addc @ (###256, ###(-128), (#ident_Z_cast @ ###r[0 ~> 1] @ (#ident_snd @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v8)), #ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v7)), #ident_Z_cast @ ###uint256 @ $$v3))) in
expr_let v10 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_add @ (###256, ###0, (#ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v9)), #ident_Z_cast @ ###uint256 @ $$v0))) in
expr_let v11 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_addc @ (###256, ###0, (#ident_Z_cast @ ###r[0 ~> 1] @ (#ident_snd @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v10)), #ident_Z_cast @ ###uint256 @ $$v1, ###0))) in
expr_let v12 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_add @ (###256, ###0, (#ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v10)), #ident_Z_cast @ ###uint256 @ $$v))) in
expr_let v13 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_addc @ (###256, ###0, (#ident_Z_cast @ ###r[0 ~> 1] @ (#ident_snd @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v12)), #ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v11)), ###0))) in
expr_let v14 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_rshi @ (###256, ###1, (#ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v13)), #ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v12))))) in
expr_let v15 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_mulhh @ (###256, (#ident_Z_cast @ ###uint256 @ $$v14, ###115792089210356248762697446949407573530086143415290314195533631308867097853951))) in
expr_let v16 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_mulhl @ (###256, (#ident_Z_cast @ ###uint256 @ $$v14, ###115792089210356248762697446949407573530086143415290314195533631308867097853951))) in
expr_let v17 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_mullh @ (###256, (#ident_Z_cast @ ###uint256 @ $$v14, ###115792089210356248762697446949407573530086143415290314195533631308867097853951))) in
expr_let v18 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_mulll @ (###256, (#ident_Z_cast @ ###uint256 @ $$v14, ###115792089210356248762697446949407573530086143415290314195533631308867097853951))) in
expr_let v19 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_add @ (###256, ###128, (#ident_Z_cast @ ###uint256 @ $$v18, #ident_Z_cast @ ###uint256 @ $$v17))) in
expr_let v20 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_addc @ (###256, ###(-128), (#ident_Z_cast @ ###r[0 ~> 1] @ (#ident_snd @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v19)), #ident_Z_cast @ ###uint256 @ $$v15, #ident_Z_cast @ ###uint256 @ $$v17))) in
expr_let v21 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_add @ (###256, ###128, (#ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v19)), #ident_Z_cast @ ###uint256 @ $$v16))) in
expr_let v22 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_addc @ (###256, ###(-128), (#ident_Z_cast @ ###r[0 ~> 1] @ (#ident_snd @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v21)), #ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v20)), #ident_Z_cast @ ###uint256 @ $$v16))) in
expr_let v23 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_sub @ (###256, ###0, (#ident_Z_cast @ ###uint256 @ $$x, #ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v21))))) in
expr_let v24 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_subb @ (###256, ###0, (#ident_Z_cast @ ###r[0 ~> 1] @ (#ident_snd @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v23)), #ident_Z_cast @ ###uint256 @ $$x0, #ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v22))))) in
expr_let v25 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_sell @ (#ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v24)), ###0, ###115792089210356248762697446949407573530086143415290314195533631308867097853951)) in
expr_let v26 := #ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ (#ident_fancy_sub @ (###256, ###0, (#ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v23)), #ident_Z_cast @ ###uint256 @ $$v25))) in
expr_let v27 := #ident_Z_cast @ ###uint256 @ (#ident_fancy_addm @ (#ident_Z_cast @ ###uint256 @ (#ident_fst @ (#ident_Z_cast2 @ (###uint256, ###r[0 ~> 1]) @ $$v26)), ###0, ###115792089210356248762697446949407573530086143415290314195533631308867097853951)) in
#ident_Z_cast @ ###uint256 @ $$v27
     : API.Expr (type.base (base.type.type_base Z) -> type.base (base.type.type_base Z) -> type.base (base.type.type_base Z))

Arguments Barrett256.barrett_red256 var
