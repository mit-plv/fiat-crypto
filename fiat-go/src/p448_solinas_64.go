/* Autogenerated: src/ExtractionOCaml/unsaturated_solinas --lang Go --no-wide-int --cmovznz-by-mul p448 64 8 '2^448 - 2^224 - 1' carry_mul carry_square carry add sub opp selectznz to_bytes from_bytes */
/* curve description: p448 */
/* machine_wordsize = 64 (from "64") */
/* requested operations: carry_mul, carry_square, carry, add, sub, opp, selectznz, to_bytes, from_bytes */
/* n = 8 (from "8") */
/* s-c = 2^448 - [(2^224, 1), (1, 1)] (from "2^448 - 2^224 - 1") */
/* tight_bounds_multiplier = 1.1 (from "") */
/*  */
/* Computed values: */
/* carry_chain = [3, 7, 4, 0, 5, 1, 6, 2, 7, 3, 4, 0] */
/* eval z = z[0] + (z[1] << 56) + (z[2] << 112) + (z[3] << 168) + (z[4] << 224) + (z[5] << 0x118) + (z[6] << 0x150) + (z[7] << 0x188) */
/* bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) + (z[28] << 224) + (z[29] << 232) + (z[30] << 240) + (z[31] << 248) + (z[32] << 256) + (z[33] << 0x108) + (z[34] << 0x110) + (z[35] << 0x118) + (z[36] << 0x120) + (z[37] << 0x128) + (z[38] << 0x130) + (z[39] << 0x138) + (z[40] << 0x140) + (z[41] << 0x148) + (z[42] << 0x150) + (z[43] << 0x158) + (z[44] << 0x160) + (z[45] << 0x168) + (z[46] << 0x170) + (z[47] << 0x178) + (z[48] << 0x180) + (z[49] << 0x188) + (z[50] << 0x190) + (z[51] << 0x198) + (z[52] << 0x1a0) + (z[53] << 0x1a8) + (z[54] << 0x1b0) + (z[55] << 0x1b8) */
/* balance = [0x1fffffffffffffe, 0x1fffffffffffffe, 0x1fffffffffffffe, 0x1fffffffffffffe, 0x1fffffffffffffc, 0x1fffffffffffffe, 0x1fffffffffffffe, 0x1fffffffffffffe] */

package fiat_p448

import "math/bits"
type fiat_p448_uint1 uint8
type fiat_p448_int1 int8

/* The function fiat_p448_addcarryx_u64 is a thin wrapper around bits.Add64 that uses fiat_p448_uint1 rather than uint64 */
func fiat_p448_addcarryx_u64(x uint64, y uint64, carry fiat_p448_uint1) (uint64, fiat_p448_uint1) {
  var sum uint64
  var carryOut uint64
  sum, carryOut = bits.Add64(x, y, uint64(carry))
  return sum, fiat_p448_uint1(carryOut)
}

/* The function fiat_p448_subborrowx_u64 is a thin wrapper around bits.Sub64 that uses fiat_p448_uint1 rather than uint64 */
func fiat_p448_subborrowx_u64(x uint64, y uint64, carry fiat_p448_uint1) (uint64, fiat_p448_uint1) {
  var sum uint64
  var carryOut uint64
  sum, carryOut = bits.Sub64(x, y, uint64(carry))
  return sum, fiat_p448_uint1(carryOut)
}


/*
 * The function fiat_p448_addcarryx_u56 is an addition with carry.
 * Postconditions:
 *   out1 = (arg1 + arg2 + arg3) mod 2^56
 *   out2 = ⌊(arg1 + arg2 + arg3) / 2^56⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffffffffff]
 *   arg3: [0x0 ~> 0xffffffffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffffffffff]
 *   out2: [0x0 ~> 0x1]
 */
/*inline*/
func fiat_p448_addcarryx_u56(out1 *uint64, out2 *fiat_p448_uint1, arg1 fiat_p448_uint1, arg2 uint64, arg3 uint64) {
  var x1 uint64 = ((uint64(arg1) + arg2) + arg3)
  var x2 uint64 = (x1 & 0xffffffffffffff)
  var x3 fiat_p448_uint1 = fiat_p448_uint1((x1 >> 56))
  *out1 = x2
  *out2 = x3
}

/*
 * The function fiat_p448_subborrowx_u56 is a subtraction with borrow.
 * Postconditions:
 *   out1 = (-arg1 + arg2 + -arg3) mod 2^56
 *   out2 = -⌊(-arg1 + arg2 + -arg3) / 2^56⌋
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffffffffff]
 *   arg3: [0x0 ~> 0xffffffffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffffffffff]
 *   out2: [0x0 ~> 0x1]
 */
/*inline*/
func fiat_p448_subborrowx_u56(out1 *uint64, out2 *fiat_p448_uint1, arg1 fiat_p448_uint1, arg2 uint64, arg3 uint64) {
  var x1 int64 = ((int64(arg2) - int64(arg1)) - int64(arg3))
  var x2 fiat_p448_int1 = fiat_p448_int1((x1 >> 56))
  var x3 uint64 = (uint64(x1) & 0xffffffffffffff)
  *out1 = x3
  *out2 = (0x0 - fiat_p448_uint1(x2))
}

/*
 * The function fiat_p448_cmovznz_u64 is a single-word conditional move.
 * Postconditions:
 *   out1 = (if arg1 = 0 then arg2 else arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffffffffffff]
 *   arg3: [0x0 ~> 0xffffffffffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffffffffffff]
 */
/*inline*/
func fiat_p448_cmovznz_u64(out1 *uint64, arg1 fiat_p448_uint1, arg2 uint64, arg3 uint64) {
  var x1 uint64 = (uint64(arg1) * 0xffffffffffffffff)
  var x2 uint64 = ((x1 & arg3) | ((^x1) & arg2))
  *out1 = x2
}

/*
 * The function fiat_p448_carry_mul multiplies two field elements and reduces the result.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 * eval arg2) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb]]
 *   arg2: [[0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999]]
 */
/*inline*/
func fiat_p448_carry_mul(out1 *[8]uint64, arg1 *[8]uint64, arg2 *[8]uint64) {
  var x1 uint64
  var x2 uint64
  x2, x1 = bits.Mul64((arg1[7]), (arg2[7]))
  var x3 uint64
  var x4 uint64
  x4, x3 = bits.Mul64((arg1[7]), (arg2[6]))
  var x5 uint64
  var x6 uint64
  x6, x5 = bits.Mul64((arg1[7]), (arg2[5]))
  var x7 uint64
  var x8 uint64
  x8, x7 = bits.Mul64((arg1[6]), (arg2[7]))
  var x9 uint64
  var x10 uint64
  x10, x9 = bits.Mul64((arg1[6]), (arg2[6]))
  var x11 uint64
  var x12 uint64
  x12, x11 = bits.Mul64((arg1[5]), (arg2[7]))
  var x13 uint64
  var x14 uint64
  x14, x13 = bits.Mul64((arg1[7]), (arg2[7]))
  var x15 uint64
  var x16 uint64
  x16, x15 = bits.Mul64((arg1[7]), (arg2[6]))
  var x17 uint64
  var x18 uint64
  x18, x17 = bits.Mul64((arg1[7]), (arg2[5]))
  var x19 uint64
  var x20 uint64
  x20, x19 = bits.Mul64((arg1[6]), (arg2[7]))
  var x21 uint64
  var x22 uint64
  x22, x21 = bits.Mul64((arg1[6]), (arg2[6]))
  var x23 uint64
  var x24 uint64
  x24, x23 = bits.Mul64((arg1[5]), (arg2[7]))
  var x25 uint64
  var x26 uint64
  x26, x25 = bits.Mul64((arg1[7]), (arg2[7]))
  var x27 uint64
  var x28 uint64
  x28, x27 = bits.Mul64((arg1[7]), (arg2[6]))
  var x29 uint64
  var x30 uint64
  x30, x29 = bits.Mul64((arg1[7]), (arg2[5]))
  var x31 uint64
  var x32 uint64
  x32, x31 = bits.Mul64((arg1[7]), (arg2[4]))
  var x33 uint64
  var x34 uint64
  x34, x33 = bits.Mul64((arg1[7]), (arg2[3]))
  var x35 uint64
  var x36 uint64
  x36, x35 = bits.Mul64((arg1[7]), (arg2[2]))
  var x37 uint64
  var x38 uint64
  x38, x37 = bits.Mul64((arg1[7]), (arg2[1]))
  var x39 uint64
  var x40 uint64
  x40, x39 = bits.Mul64((arg1[6]), (arg2[7]))
  var x41 uint64
  var x42 uint64
  x42, x41 = bits.Mul64((arg1[6]), (arg2[6]))
  var x43 uint64
  var x44 uint64
  x44, x43 = bits.Mul64((arg1[6]), (arg2[5]))
  var x45 uint64
  var x46 uint64
  x46, x45 = bits.Mul64((arg1[6]), (arg2[4]))
  var x47 uint64
  var x48 uint64
  x48, x47 = bits.Mul64((arg1[6]), (arg2[3]))
  var x49 uint64
  var x50 uint64
  x50, x49 = bits.Mul64((arg1[6]), (arg2[2]))
  var x51 uint64
  var x52 uint64
  x52, x51 = bits.Mul64((arg1[5]), (arg2[7]))
  var x53 uint64
  var x54 uint64
  x54, x53 = bits.Mul64((arg1[5]), (arg2[6]))
  var x55 uint64
  var x56 uint64
  x56, x55 = bits.Mul64((arg1[5]), (arg2[5]))
  var x57 uint64
  var x58 uint64
  x58, x57 = bits.Mul64((arg1[5]), (arg2[4]))
  var x59 uint64
  var x60 uint64
  x60, x59 = bits.Mul64((arg1[5]), (arg2[3]))
  var x61 uint64
  var x62 uint64
  x62, x61 = bits.Mul64((arg1[4]), (arg2[7]))
  var x63 uint64
  var x64 uint64
  x64, x63 = bits.Mul64((arg1[4]), (arg2[6]))
  var x65 uint64
  var x66 uint64
  x66, x65 = bits.Mul64((arg1[4]), (arg2[5]))
  var x67 uint64
  var x68 uint64
  x68, x67 = bits.Mul64((arg1[4]), (arg2[4]))
  var x69 uint64
  var x70 uint64
  x70, x69 = bits.Mul64((arg1[3]), (arg2[7]))
  var x71 uint64
  var x72 uint64
  x72, x71 = bits.Mul64((arg1[3]), (arg2[6]))
  var x73 uint64
  var x74 uint64
  x74, x73 = bits.Mul64((arg1[3]), (arg2[5]))
  var x75 uint64
  var x76 uint64
  x76, x75 = bits.Mul64((arg1[2]), (arg2[7]))
  var x77 uint64
  var x78 uint64
  x78, x77 = bits.Mul64((arg1[2]), (arg2[6]))
  var x79 uint64
  var x80 uint64
  x80, x79 = bits.Mul64((arg1[1]), (arg2[7]))
  var x81 uint64
  var x82 uint64
  x82, x81 = bits.Mul64((arg1[7]), (arg2[4]))
  var x83 uint64
  var x84 uint64
  x84, x83 = bits.Mul64((arg1[7]), (arg2[3]))
  var x85 uint64
  var x86 uint64
  x86, x85 = bits.Mul64((arg1[7]), (arg2[2]))
  var x87 uint64
  var x88 uint64
  x88, x87 = bits.Mul64((arg1[7]), (arg2[1]))
  var x89 uint64
  var x90 uint64
  x90, x89 = bits.Mul64((arg1[6]), (arg2[5]))
  var x91 uint64
  var x92 uint64
  x92, x91 = bits.Mul64((arg1[6]), (arg2[4]))
  var x93 uint64
  var x94 uint64
  x94, x93 = bits.Mul64((arg1[6]), (arg2[3]))
  var x95 uint64
  var x96 uint64
  x96, x95 = bits.Mul64((arg1[6]), (arg2[2]))
  var x97 uint64
  var x98 uint64
  x98, x97 = bits.Mul64((arg1[5]), (arg2[6]))
  var x99 uint64
  var x100 uint64
  x100, x99 = bits.Mul64((arg1[5]), (arg2[5]))
  var x101 uint64
  var x102 uint64
  x102, x101 = bits.Mul64((arg1[5]), (arg2[4]))
  var x103 uint64
  var x104 uint64
  x104, x103 = bits.Mul64((arg1[5]), (arg2[3]))
  var x105 uint64
  var x106 uint64
  x106, x105 = bits.Mul64((arg1[4]), (arg2[7]))
  var x107 uint64
  var x108 uint64
  x108, x107 = bits.Mul64((arg1[4]), (arg2[6]))
  var x109 uint64
  var x110 uint64
  x110, x109 = bits.Mul64((arg1[4]), (arg2[5]))
  var x111 uint64
  var x112 uint64
  x112, x111 = bits.Mul64((arg1[4]), (arg2[4]))
  var x113 uint64
  var x114 uint64
  x114, x113 = bits.Mul64((arg1[3]), (arg2[7]))
  var x115 uint64
  var x116 uint64
  x116, x115 = bits.Mul64((arg1[3]), (arg2[6]))
  var x117 uint64
  var x118 uint64
  x118, x117 = bits.Mul64((arg1[3]), (arg2[5]))
  var x119 uint64
  var x120 uint64
  x120, x119 = bits.Mul64((arg1[2]), (arg2[7]))
  var x121 uint64
  var x122 uint64
  x122, x121 = bits.Mul64((arg1[2]), (arg2[6]))
  var x123 uint64
  var x124 uint64
  x124, x123 = bits.Mul64((arg1[1]), (arg2[7]))
  var x125 uint64
  var x126 uint64
  x126, x125 = bits.Mul64((arg1[7]), (arg2[0]))
  var x127 uint64
  var x128 uint64
  x128, x127 = bits.Mul64((arg1[6]), (arg2[1]))
  var x129 uint64
  var x130 uint64
  x130, x129 = bits.Mul64((arg1[6]), (arg2[0]))
  var x131 uint64
  var x132 uint64
  x132, x131 = bits.Mul64((arg1[5]), (arg2[2]))
  var x133 uint64
  var x134 uint64
  x134, x133 = bits.Mul64((arg1[5]), (arg2[1]))
  var x135 uint64
  var x136 uint64
  x136, x135 = bits.Mul64((arg1[5]), (arg2[0]))
  var x137 uint64
  var x138 uint64
  x138, x137 = bits.Mul64((arg1[4]), (arg2[3]))
  var x139 uint64
  var x140 uint64
  x140, x139 = bits.Mul64((arg1[4]), (arg2[2]))
  var x141 uint64
  var x142 uint64
  x142, x141 = bits.Mul64((arg1[4]), (arg2[1]))
  var x143 uint64
  var x144 uint64
  x144, x143 = bits.Mul64((arg1[4]), (arg2[0]))
  var x145 uint64
  var x146 uint64
  x146, x145 = bits.Mul64((arg1[3]), (arg2[4]))
  var x147 uint64
  var x148 uint64
  x148, x147 = bits.Mul64((arg1[3]), (arg2[3]))
  var x149 uint64
  var x150 uint64
  x150, x149 = bits.Mul64((arg1[3]), (arg2[2]))
  var x151 uint64
  var x152 uint64
  x152, x151 = bits.Mul64((arg1[3]), (arg2[1]))
  var x153 uint64
  var x154 uint64
  x154, x153 = bits.Mul64((arg1[3]), (arg2[0]))
  var x155 uint64
  var x156 uint64
  x156, x155 = bits.Mul64((arg1[2]), (arg2[5]))
  var x157 uint64
  var x158 uint64
  x158, x157 = bits.Mul64((arg1[2]), (arg2[4]))
  var x159 uint64
  var x160 uint64
  x160, x159 = bits.Mul64((arg1[2]), (arg2[3]))
  var x161 uint64
  var x162 uint64
  x162, x161 = bits.Mul64((arg1[2]), (arg2[2]))
  var x163 uint64
  var x164 uint64
  x164, x163 = bits.Mul64((arg1[2]), (arg2[1]))
  var x165 uint64
  var x166 uint64
  x166, x165 = bits.Mul64((arg1[2]), (arg2[0]))
  var x167 uint64
  var x168 uint64
  x168, x167 = bits.Mul64((arg1[1]), (arg2[6]))
  var x169 uint64
  var x170 uint64
  x170, x169 = bits.Mul64((arg1[1]), (arg2[5]))
  var x171 uint64
  var x172 uint64
  x172, x171 = bits.Mul64((arg1[1]), (arg2[4]))
  var x173 uint64
  var x174 uint64
  x174, x173 = bits.Mul64((arg1[1]), (arg2[3]))
  var x175 uint64
  var x176 uint64
  x176, x175 = bits.Mul64((arg1[1]), (arg2[2]))
  var x177 uint64
  var x178 uint64
  x178, x177 = bits.Mul64((arg1[1]), (arg2[1]))
  var x179 uint64
  var x180 uint64
  x180, x179 = bits.Mul64((arg1[1]), (arg2[0]))
  var x181 uint64
  var x182 uint64
  x182, x181 = bits.Mul64((arg1[0]), (arg2[7]))
  var x183 uint64
  var x184 uint64
  x184, x183 = bits.Mul64((arg1[0]), (arg2[6]))
  var x185 uint64
  var x186 uint64
  x186, x185 = bits.Mul64((arg1[0]), (arg2[5]))
  var x187 uint64
  var x188 uint64
  x188, x187 = bits.Mul64((arg1[0]), (arg2[4]))
  var x189 uint64
  var x190 uint64
  x190, x189 = bits.Mul64((arg1[0]), (arg2[3]))
  var x191 uint64
  var x192 uint64
  x192, x191 = bits.Mul64((arg1[0]), (arg2[2]))
  var x193 uint64
  var x194 uint64
  x194, x193 = bits.Mul64((arg1[0]), (arg2[1]))
  var x195 uint64
  var x196 uint64
  x196, x195 = bits.Mul64((arg1[0]), (arg2[0]))
  var x197 uint64
  var x198 fiat_p448_uint1
  x197, x198 = fiat_p448_addcarryx_u64(x43, x31, 0x0)
  var x199 uint64
  x199, _ = fiat_p448_addcarryx_u64(x44, x32, x198)
  var x201 uint64
  var x202 fiat_p448_uint1
  x201, x202 = fiat_p448_addcarryx_u64(x53, x197, 0x0)
  var x203 uint64
  x203, _ = fiat_p448_addcarryx_u64(x54, x199, x202)
  var x205 uint64
  var x206 fiat_p448_uint1
  x205, x206 = fiat_p448_addcarryx_u64(x61, x201, 0x0)
  var x207 uint64
  x207, _ = fiat_p448_addcarryx_u64(x62, x203, x206)
  var x209 uint64
  var x210 fiat_p448_uint1
  x209, x210 = fiat_p448_addcarryx_u64(x153, x205, 0x0)
  var x211 uint64
  x211, _ = fiat_p448_addcarryx_u64(x154, x207, x210)
  var x213 uint64
  var x214 fiat_p448_uint1
  x213, x214 = fiat_p448_addcarryx_u64(x163, x209, 0x0)
  var x215 uint64
  x215, _ = fiat_p448_addcarryx_u64(x164, x211, x214)
  var x217 uint64
  var x218 fiat_p448_uint1
  x217, x218 = fiat_p448_addcarryx_u64(x175, x213, 0x0)
  var x219 uint64
  x219, _ = fiat_p448_addcarryx_u64(x176, x215, x218)
  var x221 uint64
  var x222 fiat_p448_uint1
  x221, x222 = fiat_p448_addcarryx_u64(x189, x217, 0x0)
  var x223 uint64
  x223, _ = fiat_p448_addcarryx_u64(x190, x219, x222)
  var x225 uint64 = ((x221 >> 56) | ((x223 << 8) & 0xffffffffffffffff))
  var x226 uint64 = (x221 & 0xffffffffffffff)
  var x227 uint64
  var x228 fiat_p448_uint1
  x227, x228 = fiat_p448_addcarryx_u64(x89, x81, 0x0)
  var x229 uint64
  x229, _ = fiat_p448_addcarryx_u64(x90, x82, x228)
  var x231 uint64
  var x232 fiat_p448_uint1
  x231, x232 = fiat_p448_addcarryx_u64(x97, x227, 0x0)
  var x233 uint64
  x233, _ = fiat_p448_addcarryx_u64(x98, x229, x232)
  var x235 uint64
  var x236 fiat_p448_uint1
  x235, x236 = fiat_p448_addcarryx_u64(x105, x231, 0x0)
  var x237 uint64
  x237, _ = fiat_p448_addcarryx_u64(x106, x233, x236)
  var x239 uint64
  var x240 fiat_p448_uint1
  x239, x240 = fiat_p448_addcarryx_u64(x125, x235, 0x0)
  var x241 uint64
  x241, _ = fiat_p448_addcarryx_u64(x126, x237, x240)
  var x243 uint64
  var x244 fiat_p448_uint1
  x243, x244 = fiat_p448_addcarryx_u64(x127, x239, 0x0)
  var x245 uint64
  x245, _ = fiat_p448_addcarryx_u64(x128, x241, x244)
  var x247 uint64
  var x248 fiat_p448_uint1
  x247, x248 = fiat_p448_addcarryx_u64(x131, x243, 0x0)
  var x249 uint64
  x249, _ = fiat_p448_addcarryx_u64(x132, x245, x248)
  var x251 uint64
  var x252 fiat_p448_uint1
  x251, x252 = fiat_p448_addcarryx_u64(x137, x247, 0x0)
  var x253 uint64
  x253, _ = fiat_p448_addcarryx_u64(x138, x249, x252)
  var x255 uint64
  var x256 fiat_p448_uint1
  x255, x256 = fiat_p448_addcarryx_u64(x145, x251, 0x0)
  var x257 uint64
  x257, _ = fiat_p448_addcarryx_u64(x146, x253, x256)
  var x259 uint64
  var x260 fiat_p448_uint1
  x259, x260 = fiat_p448_addcarryx_u64(x155, x255, 0x0)
  var x261 uint64
  x261, _ = fiat_p448_addcarryx_u64(x156, x257, x260)
  var x263 uint64
  var x264 fiat_p448_uint1
  x263, x264 = fiat_p448_addcarryx_u64(x167, x259, 0x0)
  var x265 uint64
  x265, _ = fiat_p448_addcarryx_u64(x168, x261, x264)
  var x267 uint64
  var x268 fiat_p448_uint1
  x267, x268 = fiat_p448_addcarryx_u64(x181, x263, 0x0)
  var x269 uint64
  x269, _ = fiat_p448_addcarryx_u64(x182, x265, x268)
  var x271 uint64
  var x272 fiat_p448_uint1
  x271, x272 = fiat_p448_addcarryx_u64(x25, x13, 0x0)
  var x273 uint64
  x273, _ = fiat_p448_addcarryx_u64(x26, x14, x272)
  var x275 uint64
  var x276 fiat_p448_uint1
  x275, x276 = fiat_p448_addcarryx_u64(x83, x271, 0x0)
  var x277 uint64
  x277, _ = fiat_p448_addcarryx_u64(x84, x273, x276)
  var x279 uint64
  var x280 fiat_p448_uint1
  x279, x280 = fiat_p448_addcarryx_u64(x91, x275, 0x0)
  var x281 uint64
  x281, _ = fiat_p448_addcarryx_u64(x92, x277, x280)
  var x283 uint64
  var x284 fiat_p448_uint1
  x283, x284 = fiat_p448_addcarryx_u64(x99, x279, 0x0)
  var x285 uint64
  x285, _ = fiat_p448_addcarryx_u64(x100, x281, x284)
  var x287 uint64
  var x288 fiat_p448_uint1
  x287, x288 = fiat_p448_addcarryx_u64(x107, x283, 0x0)
  var x289 uint64
  x289, _ = fiat_p448_addcarryx_u64(x108, x285, x288)
  var x291 uint64
  var x292 fiat_p448_uint1
  x291, x292 = fiat_p448_addcarryx_u64(x113, x287, 0x0)
  var x293 uint64
  x293, _ = fiat_p448_addcarryx_u64(x114, x289, x292)
  var x295 uint64
  var x296 fiat_p448_uint1
  x295, x296 = fiat_p448_addcarryx_u64(x129, x291, 0x0)
  var x297 uint64
  x297, _ = fiat_p448_addcarryx_u64(x130, x293, x296)
  var x299 uint64
  var x300 fiat_p448_uint1
  x299, x300 = fiat_p448_addcarryx_u64(x133, x295, 0x0)
  var x301 uint64
  x301, _ = fiat_p448_addcarryx_u64(x134, x297, x300)
  var x303 uint64
  var x304 fiat_p448_uint1
  x303, x304 = fiat_p448_addcarryx_u64(x139, x299, 0x0)
  var x305 uint64
  x305, _ = fiat_p448_addcarryx_u64(x140, x301, x304)
  var x307 uint64
  var x308 fiat_p448_uint1
  x307, x308 = fiat_p448_addcarryx_u64(x147, x303, 0x0)
  var x309 uint64
  x309, _ = fiat_p448_addcarryx_u64(x148, x305, x308)
  var x311 uint64
  var x312 fiat_p448_uint1
  x311, x312 = fiat_p448_addcarryx_u64(x157, x307, 0x0)
  var x313 uint64
  x313, _ = fiat_p448_addcarryx_u64(x158, x309, x312)
  var x315 uint64
  var x316 fiat_p448_uint1
  x315, x316 = fiat_p448_addcarryx_u64(x169, x311, 0x0)
  var x317 uint64
  x317, _ = fiat_p448_addcarryx_u64(x170, x313, x316)
  var x319 uint64
  var x320 fiat_p448_uint1
  x319, x320 = fiat_p448_addcarryx_u64(x183, x315, 0x0)
  var x321 uint64
  x321, _ = fiat_p448_addcarryx_u64(x184, x317, x320)
  var x323 uint64
  var x324 fiat_p448_uint1
  x323, x324 = fiat_p448_addcarryx_u64(x19, x15, 0x0)
  var x325 uint64
  x325, _ = fiat_p448_addcarryx_u64(x20, x16, x324)
  var x327 uint64
  var x328 fiat_p448_uint1
  x327, x328 = fiat_p448_addcarryx_u64(x27, x323, 0x0)
  var x329 uint64
  x329, _ = fiat_p448_addcarryx_u64(x28, x325, x328)
  var x331 uint64
  var x332 fiat_p448_uint1
  x331, x332 = fiat_p448_addcarryx_u64(x39, x327, 0x0)
  var x333 uint64
  x333, _ = fiat_p448_addcarryx_u64(x40, x329, x332)
  var x335 uint64
  var x336 fiat_p448_uint1
  x335, x336 = fiat_p448_addcarryx_u64(x85, x331, 0x0)
  var x337 uint64
  x337, _ = fiat_p448_addcarryx_u64(x86, x333, x336)
  var x339 uint64
  var x340 fiat_p448_uint1
  x339, x340 = fiat_p448_addcarryx_u64(x93, x335, 0x0)
  var x341 uint64
  x341, _ = fiat_p448_addcarryx_u64(x94, x337, x340)
  var x343 uint64
  var x344 fiat_p448_uint1
  x343, x344 = fiat_p448_addcarryx_u64(x101, x339, 0x0)
  var x345 uint64
  x345, _ = fiat_p448_addcarryx_u64(x102, x341, x344)
  var x347 uint64
  var x348 fiat_p448_uint1
  x347, x348 = fiat_p448_addcarryx_u64(x109, x343, 0x0)
  var x349 uint64
  x349, _ = fiat_p448_addcarryx_u64(x110, x345, x348)
  var x351 uint64
  var x352 fiat_p448_uint1
  x351, x352 = fiat_p448_addcarryx_u64(x115, x347, 0x0)
  var x353 uint64
  x353, _ = fiat_p448_addcarryx_u64(x116, x349, x352)
  var x355 uint64
  var x356 fiat_p448_uint1
  x355, x356 = fiat_p448_addcarryx_u64(x119, x351, 0x0)
  var x357 uint64
  x357, _ = fiat_p448_addcarryx_u64(x120, x353, x356)
  var x359 uint64
  var x360 fiat_p448_uint1
  x359, x360 = fiat_p448_addcarryx_u64(x135, x355, 0x0)
  var x361 uint64
  x361, _ = fiat_p448_addcarryx_u64(x136, x357, x360)
  var x363 uint64
  var x364 fiat_p448_uint1
  x363, x364 = fiat_p448_addcarryx_u64(x141, x359, 0x0)
  var x365 uint64
  x365, _ = fiat_p448_addcarryx_u64(x142, x361, x364)
  var x367 uint64
  var x368 fiat_p448_uint1
  x367, x368 = fiat_p448_addcarryx_u64(x149, x363, 0x0)
  var x369 uint64
  x369, _ = fiat_p448_addcarryx_u64(x150, x365, x368)
  var x371 uint64
  var x372 fiat_p448_uint1
  x371, x372 = fiat_p448_addcarryx_u64(x159, x367, 0x0)
  var x373 uint64
  x373, _ = fiat_p448_addcarryx_u64(x160, x369, x372)
  var x375 uint64
  var x376 fiat_p448_uint1
  x375, x376 = fiat_p448_addcarryx_u64(x171, x371, 0x0)
  var x377 uint64
  x377, _ = fiat_p448_addcarryx_u64(x172, x373, x376)
  var x379 uint64
  var x380 fiat_p448_uint1
  x379, x380 = fiat_p448_addcarryx_u64(x185, x375, 0x0)
  var x381 uint64
  x381, _ = fiat_p448_addcarryx_u64(x186, x377, x380)
  var x383 uint64
  var x384 fiat_p448_uint1
  x383, x384 = fiat_p448_addcarryx_u64(x21, x17, 0x0)
  var x385 uint64
  x385, _ = fiat_p448_addcarryx_u64(x22, x18, x384)
  var x387 uint64
  var x388 fiat_p448_uint1
  x387, x388 = fiat_p448_addcarryx_u64(x23, x383, 0x0)
  var x389 uint64
  x389, _ = fiat_p448_addcarryx_u64(x24, x385, x388)
  var x391 uint64
  var x392 fiat_p448_uint1
  x391, x392 = fiat_p448_addcarryx_u64(x29, x387, 0x0)
  var x393 uint64
  x393, _ = fiat_p448_addcarryx_u64(x30, x389, x392)
  var x395 uint64
  var x396 fiat_p448_uint1
  x395, x396 = fiat_p448_addcarryx_u64(x41, x391, 0x0)
  var x397 uint64
  x397, _ = fiat_p448_addcarryx_u64(x42, x393, x396)
  var x399 uint64
  var x400 fiat_p448_uint1
  x399, x400 = fiat_p448_addcarryx_u64(x51, x395, 0x0)
  var x401 uint64
  x401, _ = fiat_p448_addcarryx_u64(x52, x397, x400)
  var x403 uint64
  var x404 fiat_p448_uint1
  x403, x404 = fiat_p448_addcarryx_u64(x87, x399, 0x0)
  var x405 uint64
  x405, _ = fiat_p448_addcarryx_u64(x88, x401, x404)
  var x407 uint64
  var x408 fiat_p448_uint1
  x407, x408 = fiat_p448_addcarryx_u64(x95, x403, 0x0)
  var x409 uint64
  x409, _ = fiat_p448_addcarryx_u64(x96, x405, x408)
  var x411 uint64
  var x412 fiat_p448_uint1
  x411, x412 = fiat_p448_addcarryx_u64(x103, x407, 0x0)
  var x413 uint64
  x413, _ = fiat_p448_addcarryx_u64(x104, x409, x412)
  var x415 uint64
  var x416 fiat_p448_uint1
  x415, x416 = fiat_p448_addcarryx_u64(x111, x411, 0x0)
  var x417 uint64
  x417, _ = fiat_p448_addcarryx_u64(x112, x413, x416)
  var x419 uint64
  var x420 fiat_p448_uint1
  x419, x420 = fiat_p448_addcarryx_u64(x117, x415, 0x0)
  var x421 uint64
  x421, _ = fiat_p448_addcarryx_u64(x118, x417, x420)
  var x423 uint64
  var x424 fiat_p448_uint1
  x423, x424 = fiat_p448_addcarryx_u64(x121, x419, 0x0)
  var x425 uint64
  x425, _ = fiat_p448_addcarryx_u64(x122, x421, x424)
  var x427 uint64
  var x428 fiat_p448_uint1
  x427, x428 = fiat_p448_addcarryx_u64(x123, x423, 0x0)
  var x429 uint64
  x429, _ = fiat_p448_addcarryx_u64(x124, x425, x428)
  var x431 uint64
  var x432 fiat_p448_uint1
  x431, x432 = fiat_p448_addcarryx_u64(x143, x427, 0x0)
  var x433 uint64
  x433, _ = fiat_p448_addcarryx_u64(x144, x429, x432)
  var x435 uint64
  var x436 fiat_p448_uint1
  x435, x436 = fiat_p448_addcarryx_u64(x151, x431, 0x0)
  var x437 uint64
  x437, _ = fiat_p448_addcarryx_u64(x152, x433, x436)
  var x439 uint64
  var x440 fiat_p448_uint1
  x439, x440 = fiat_p448_addcarryx_u64(x161, x435, 0x0)
  var x441 uint64
  x441, _ = fiat_p448_addcarryx_u64(x162, x437, x440)
  var x443 uint64
  var x444 fiat_p448_uint1
  x443, x444 = fiat_p448_addcarryx_u64(x173, x439, 0x0)
  var x445 uint64
  x445, _ = fiat_p448_addcarryx_u64(x174, x441, x444)
  var x447 uint64
  var x448 fiat_p448_uint1
  x447, x448 = fiat_p448_addcarryx_u64(x187, x443, 0x0)
  var x449 uint64
  x449, _ = fiat_p448_addcarryx_u64(x188, x445, x448)
  var x451 uint64
  var x452 fiat_p448_uint1
  x451, x452 = fiat_p448_addcarryx_u64(x33, x1, 0x0)
  var x453 uint64
  x453, _ = fiat_p448_addcarryx_u64(x34, x2, x452)
  var x455 uint64
  var x456 fiat_p448_uint1
  x455, x456 = fiat_p448_addcarryx_u64(x45, x451, 0x0)
  var x457 uint64
  x457, _ = fiat_p448_addcarryx_u64(x46, x453, x456)
  var x459 uint64
  var x460 fiat_p448_uint1
  x459, x460 = fiat_p448_addcarryx_u64(x55, x455, 0x0)
  var x461 uint64
  x461, _ = fiat_p448_addcarryx_u64(x56, x457, x460)
  var x463 uint64
  var x464 fiat_p448_uint1
  x463, x464 = fiat_p448_addcarryx_u64(x63, x459, 0x0)
  var x465 uint64
  x465, _ = fiat_p448_addcarryx_u64(x64, x461, x464)
  var x467 uint64
  var x468 fiat_p448_uint1
  x467, x468 = fiat_p448_addcarryx_u64(x69, x463, 0x0)
  var x469 uint64
  x469, _ = fiat_p448_addcarryx_u64(x70, x465, x468)
  var x471 uint64
  var x472 fiat_p448_uint1
  x471, x472 = fiat_p448_addcarryx_u64(x165, x467, 0x0)
  var x473 uint64
  x473, _ = fiat_p448_addcarryx_u64(x166, x469, x472)
  var x475 uint64
  var x476 fiat_p448_uint1
  x475, x476 = fiat_p448_addcarryx_u64(x177, x471, 0x0)
  var x477 uint64
  x477, _ = fiat_p448_addcarryx_u64(x178, x473, x476)
  var x479 uint64
  var x480 fiat_p448_uint1
  x479, x480 = fiat_p448_addcarryx_u64(x191, x475, 0x0)
  var x481 uint64
  x481, _ = fiat_p448_addcarryx_u64(x192, x477, x480)
  var x483 uint64
  var x484 fiat_p448_uint1
  x483, x484 = fiat_p448_addcarryx_u64(x7, x3, 0x0)
  var x485 uint64
  x485, _ = fiat_p448_addcarryx_u64(x8, x4, x484)
  var x487 uint64
  var x488 fiat_p448_uint1
  x487, x488 = fiat_p448_addcarryx_u64(x35, x483, 0x0)
  var x489 uint64
  x489, _ = fiat_p448_addcarryx_u64(x36, x485, x488)
  var x491 uint64
  var x492 fiat_p448_uint1
  x491, x492 = fiat_p448_addcarryx_u64(x47, x487, 0x0)
  var x493 uint64
  x493, _ = fiat_p448_addcarryx_u64(x48, x489, x492)
  var x495 uint64
  var x496 fiat_p448_uint1
  x495, x496 = fiat_p448_addcarryx_u64(x57, x491, 0x0)
  var x497 uint64
  x497, _ = fiat_p448_addcarryx_u64(x58, x493, x496)
  var x499 uint64
  var x500 fiat_p448_uint1
  x499, x500 = fiat_p448_addcarryx_u64(x65, x495, 0x0)
  var x501 uint64
  x501, _ = fiat_p448_addcarryx_u64(x66, x497, x500)
  var x503 uint64
  var x504 fiat_p448_uint1
  x503, x504 = fiat_p448_addcarryx_u64(x71, x499, 0x0)
  var x505 uint64
  x505, _ = fiat_p448_addcarryx_u64(x72, x501, x504)
  var x507 uint64
  var x508 fiat_p448_uint1
  x507, x508 = fiat_p448_addcarryx_u64(x75, x503, 0x0)
  var x509 uint64
  x509, _ = fiat_p448_addcarryx_u64(x76, x505, x508)
  var x511 uint64
  var x512 fiat_p448_uint1
  x511, x512 = fiat_p448_addcarryx_u64(x179, x507, 0x0)
  var x513 uint64
  x513, _ = fiat_p448_addcarryx_u64(x180, x509, x512)
  var x515 uint64
  var x516 fiat_p448_uint1
  x515, x516 = fiat_p448_addcarryx_u64(x193, x511, 0x0)
  var x517 uint64
  x517, _ = fiat_p448_addcarryx_u64(x194, x513, x516)
  var x519 uint64
  var x520 fiat_p448_uint1
  x519, x520 = fiat_p448_addcarryx_u64(x9, x5, 0x0)
  var x521 uint64
  x521, _ = fiat_p448_addcarryx_u64(x10, x6, x520)
  var x523 uint64
  var x524 fiat_p448_uint1
  x523, x524 = fiat_p448_addcarryx_u64(x11, x519, 0x0)
  var x525 uint64
  x525, _ = fiat_p448_addcarryx_u64(x12, x521, x524)
  var x527 uint64
  var x528 fiat_p448_uint1
  x527, x528 = fiat_p448_addcarryx_u64(x37, x523, 0x0)
  var x529 uint64
  x529, _ = fiat_p448_addcarryx_u64(x38, x525, x528)
  var x531 uint64
  var x532 fiat_p448_uint1
  x531, x532 = fiat_p448_addcarryx_u64(x49, x527, 0x0)
  var x533 uint64
  x533, _ = fiat_p448_addcarryx_u64(x50, x529, x532)
  var x535 uint64
  var x536 fiat_p448_uint1
  x535, x536 = fiat_p448_addcarryx_u64(x59, x531, 0x0)
  var x537 uint64
  x537, _ = fiat_p448_addcarryx_u64(x60, x533, x536)
  var x539 uint64
  var x540 fiat_p448_uint1
  x539, x540 = fiat_p448_addcarryx_u64(x67, x535, 0x0)
  var x541 uint64
  x541, _ = fiat_p448_addcarryx_u64(x68, x537, x540)
  var x543 uint64
  var x544 fiat_p448_uint1
  x543, x544 = fiat_p448_addcarryx_u64(x73, x539, 0x0)
  var x545 uint64
  x545, _ = fiat_p448_addcarryx_u64(x74, x541, x544)
  var x547 uint64
  var x548 fiat_p448_uint1
  x547, x548 = fiat_p448_addcarryx_u64(x77, x543, 0x0)
  var x549 uint64
  x549, _ = fiat_p448_addcarryx_u64(x78, x545, x548)
  var x551 uint64
  var x552 fiat_p448_uint1
  x551, x552 = fiat_p448_addcarryx_u64(x79, x547, 0x0)
  var x553 uint64
  x553, _ = fiat_p448_addcarryx_u64(x80, x549, x552)
  var x555 uint64
  var x556 fiat_p448_uint1
  x555, x556 = fiat_p448_addcarryx_u64(x195, x551, 0x0)
  var x557 uint64
  x557, _ = fiat_p448_addcarryx_u64(x196, x553, x556)
  var x559 uint64
  var x560 fiat_p448_uint1
  x559, x560 = fiat_p448_addcarryx_u64(x225, x447, 0x0)
  var x561 uint64 = (uint64(x560) + x449)
  var x562 uint64 = ((x267 >> 56) | ((x269 << 8) & 0xffffffffffffffff))
  var x563 uint64 = (x267 & 0xffffffffffffff)
  var x564 uint64
  var x565 fiat_p448_uint1
  x564, x565 = fiat_p448_addcarryx_u64(x559, x562, 0x0)
  var x566 uint64 = (uint64(x565) + x561)
  var x567 uint64 = ((x564 >> 56) | ((x566 << 8) & 0xffffffffffffffff))
  var x568 uint64 = (x564 & 0xffffffffffffff)
  var x569 uint64
  var x570 fiat_p448_uint1
  x569, x570 = fiat_p448_addcarryx_u64(x555, x562, 0x0)
  var x571 uint64 = (uint64(x570) + x557)
  var x572 uint64
  var x573 fiat_p448_uint1
  x572, x573 = fiat_p448_addcarryx_u64(x567, x379, 0x0)
  var x574 uint64 = (uint64(x573) + x381)
  var x575 uint64 = ((x569 >> 56) | ((x571 << 8) & 0xffffffffffffffff))
  var x576 uint64 = (x569 & 0xffffffffffffff)
  var x577 uint64
  var x578 fiat_p448_uint1
  x577, x578 = fiat_p448_addcarryx_u64(x575, x515, 0x0)
  var x579 uint64 = (uint64(x578) + x517)
  var x580 uint64 = ((x572 >> 56) | ((x574 << 8) & 0xffffffffffffffff))
  var x581 uint64 = (x572 & 0xffffffffffffff)
  var x582 uint64
  var x583 fiat_p448_uint1
  x582, x583 = fiat_p448_addcarryx_u64(x580, x319, 0x0)
  var x584 uint64 = (uint64(x583) + x321)
  var x585 uint64 = ((x577 >> 56) | ((x579 << 8) & 0xffffffffffffffff))
  var x586 uint64 = (x577 & 0xffffffffffffff)
  var x587 uint64
  var x588 fiat_p448_uint1
  x587, x588 = fiat_p448_addcarryx_u64(x585, x479, 0x0)
  var x589 uint64 = (uint64(x588) + x481)
  var x590 uint64 = ((x582 >> 56) | ((x584 << 8) & 0xffffffffffffffff))
  var x591 uint64 = (x582 & 0xffffffffffffff)
  var x592 uint64 = (x590 + x563)
  var x593 uint64 = ((x587 >> 56) | ((x589 << 8) & 0xffffffffffffffff))
  var x594 uint64 = (x587 & 0xffffffffffffff)
  var x595 uint64 = (x593 + x226)
  var x596 uint64 = (x592 >> 56)
  var x597 uint64 = (x592 & 0xffffffffffffff)
  var x598 uint64 = (x595 >> 56)
  var x599 uint64 = (x595 & 0xffffffffffffff)
  var x600 uint64 = (x568 + x596)
  var x601 uint64 = (x576 + x596)
  var x602 uint64 = (x598 + x600)
  var x603 fiat_p448_uint1 = fiat_p448_uint1((x602 >> 56))
  var x604 uint64 = (x602 & 0xffffffffffffff)
  var x605 uint64 = (uint64(x603) + x581)
  var x606 fiat_p448_uint1 = fiat_p448_uint1((x601 >> 56))
  var x607 uint64 = (x601 & 0xffffffffffffff)
  var x608 uint64 = (uint64(x606) + x586)
  out1[0] = x607
  out1[1] = x608
  out1[2] = x594
  out1[3] = x599
  out1[4] = x604
  out1[5] = x605
  out1[6] = x591
  out1[7] = x597
}

/*
 * The function fiat_p448_carry_square squares a field element and reduces the result.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 * eval arg1) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999]]
 */
/*inline*/
func fiat_p448_carry_square(out1 *[8]uint64, arg1 *[8]uint64) {
  var x1 uint64 = (arg1[7])
  var x2 uint64 = (arg1[7])
  var x3 uint64 = (x1 * 0x2)
  var x4 uint64 = (x2 * 0x2)
  var x5 uint64 = ((arg1[7]) * 0x2)
  var x6 uint64 = (arg1[6])
  var x7 uint64 = (arg1[6])
  var x8 uint64 = (x6 * 0x2)
  var x9 uint64 = (x7 * 0x2)
  var x10 uint64 = ((arg1[6]) * 0x2)
  var x11 uint64 = (arg1[5])
  var x12 uint64 = (arg1[5])
  var x13 uint64 = (x11 * 0x2)
  var x14 uint64 = (x12 * 0x2)
  var x15 uint64 = ((arg1[5]) * 0x2)
  var x16 uint64 = (arg1[4])
  var x17 uint64 = (arg1[4])
  var x18 uint64 = ((arg1[4]) * 0x2)
  var x19 uint64 = ((arg1[3]) * 0x2)
  var x20 uint64 = ((arg1[2]) * 0x2)
  var x21 uint64 = ((arg1[1]) * 0x2)
  var x22 uint64
  var x23 uint64
  x23, x22 = bits.Mul64((arg1[7]), x1)
  var x24 uint64
  var x25 uint64
  x25, x24 = bits.Mul64((arg1[6]), x3)
  var x26 uint64
  var x27 uint64
  x27, x26 = bits.Mul64((arg1[6]), x6)
  var x28 uint64
  var x29 uint64
  x29, x28 = bits.Mul64((arg1[5]), x3)
  var x30 uint64
  var x31 uint64
  x31, x30 = bits.Mul64((arg1[7]), x1)
  var x32 uint64
  var x33 uint64
  x33, x32 = bits.Mul64((arg1[6]), x3)
  var x34 uint64
  var x35 uint64
  x35, x34 = bits.Mul64((arg1[6]), x6)
  var x36 uint64
  var x37 uint64
  x37, x36 = bits.Mul64((arg1[5]), x3)
  var x38 uint64
  var x39 uint64
  x39, x38 = bits.Mul64((arg1[7]), x2)
  var x40 uint64
  var x41 uint64
  x41, x40 = bits.Mul64((arg1[6]), x4)
  var x42 uint64
  var x43 uint64
  x43, x42 = bits.Mul64((arg1[6]), x7)
  var x44 uint64
  var x45 uint64
  x45, x44 = bits.Mul64((arg1[5]), x4)
  var x46 uint64
  var x47 uint64
  x47, x46 = bits.Mul64((arg1[5]), x9)
  var x48 uint64
  var x49 uint64
  x49, x48 = bits.Mul64((arg1[5]), x8)
  var x50 uint64
  var x51 uint64
  x51, x50 = bits.Mul64((arg1[5]), x12)
  var x52 uint64
  var x53 uint64
  x53, x52 = bits.Mul64((arg1[5]), x11)
  var x54 uint64
  var x55 uint64
  x55, x54 = bits.Mul64((arg1[4]), x4)
  var x56 uint64
  var x57 uint64
  x57, x56 = bits.Mul64((arg1[4]), x3)
  var x58 uint64
  var x59 uint64
  x59, x58 = bits.Mul64((arg1[4]), x9)
  var x60 uint64
  var x61 uint64
  x61, x60 = bits.Mul64((arg1[4]), x8)
  var x62 uint64
  var x63 uint64
  x63, x62 = bits.Mul64((arg1[4]), x14)
  var x64 uint64
  var x65 uint64
  x65, x64 = bits.Mul64((arg1[4]), x13)
  var x66 uint64
  var x67 uint64
  x67, x66 = bits.Mul64((arg1[4]), x17)
  var x68 uint64
  var x69 uint64
  x69, x68 = bits.Mul64((arg1[4]), x16)
  var x70 uint64
  var x71 uint64
  x71, x70 = bits.Mul64((arg1[3]), x4)
  var x72 uint64
  var x73 uint64
  x73, x72 = bits.Mul64((arg1[3]), x3)
  var x74 uint64
  var x75 uint64
  x75, x74 = bits.Mul64((arg1[3]), x9)
  var x76 uint64
  var x77 uint64
  x77, x76 = bits.Mul64((arg1[3]), x8)
  var x78 uint64
  var x79 uint64
  x79, x78 = bits.Mul64((arg1[3]), x14)
  var x80 uint64
  var x81 uint64
  x81, x80 = bits.Mul64((arg1[3]), x13)
  var x82 uint64
  var x83 uint64
  x83, x82 = bits.Mul64((arg1[3]), x18)
  var x84 uint64
  var x85 uint64
  x85, x84 = bits.Mul64((arg1[3]), (arg1[3]))
  var x86 uint64
  var x87 uint64
  x87, x86 = bits.Mul64((arg1[2]), x4)
  var x88 uint64
  var x89 uint64
  x89, x88 = bits.Mul64((arg1[2]), x3)
  var x90 uint64
  var x91 uint64
  x91, x90 = bits.Mul64((arg1[2]), x9)
  var x92 uint64
  var x93 uint64
  x93, x92 = bits.Mul64((arg1[2]), x8)
  var x94 uint64
  var x95 uint64
  x95, x94 = bits.Mul64((arg1[2]), x15)
  var x96 uint64
  var x97 uint64
  x97, x96 = bits.Mul64((arg1[2]), x18)
  var x98 uint64
  var x99 uint64
  x99, x98 = bits.Mul64((arg1[2]), x19)
  var x100 uint64
  var x101 uint64
  x101, x100 = bits.Mul64((arg1[2]), (arg1[2]))
  var x102 uint64
  var x103 uint64
  x103, x102 = bits.Mul64((arg1[1]), x4)
  var x104 uint64
  var x105 uint64
  x105, x104 = bits.Mul64((arg1[1]), x3)
  var x106 uint64
  var x107 uint64
  x107, x106 = bits.Mul64((arg1[1]), x10)
  var x108 uint64
  var x109 uint64
  x109, x108 = bits.Mul64((arg1[1]), x15)
  var x110 uint64
  var x111 uint64
  x111, x110 = bits.Mul64((arg1[1]), x18)
  var x112 uint64
  var x113 uint64
  x113, x112 = bits.Mul64((arg1[1]), x19)
  var x114 uint64
  var x115 uint64
  x115, x114 = bits.Mul64((arg1[1]), x20)
  var x116 uint64
  var x117 uint64
  x117, x116 = bits.Mul64((arg1[1]), (arg1[1]))
  var x118 uint64
  var x119 uint64
  x119, x118 = bits.Mul64((arg1[0]), x5)
  var x120 uint64
  var x121 uint64
  x121, x120 = bits.Mul64((arg1[0]), x10)
  var x122 uint64
  var x123 uint64
  x123, x122 = bits.Mul64((arg1[0]), x15)
  var x124 uint64
  var x125 uint64
  x125, x124 = bits.Mul64((arg1[0]), x18)
  var x126 uint64
  var x127 uint64
  x127, x126 = bits.Mul64((arg1[0]), x19)
  var x128 uint64
  var x129 uint64
  x129, x128 = bits.Mul64((arg1[0]), x20)
  var x130 uint64
  var x131 uint64
  x131, x130 = bits.Mul64((arg1[0]), x21)
  var x132 uint64
  var x133 uint64
  x133, x132 = bits.Mul64((arg1[0]), (arg1[0]))
  var x134 uint64
  var x135 fiat_p448_uint1
  x134, x135 = fiat_p448_addcarryx_u64(x54, x46, 0x0)
  var x136 uint64
  x136, _ = fiat_p448_addcarryx_u64(x55, x47, x135)
  var x138 uint64
  var x139 fiat_p448_uint1
  x138, x139 = fiat_p448_addcarryx_u64(x114, x134, 0x0)
  var x140 uint64
  x140, _ = fiat_p448_addcarryx_u64(x115, x136, x139)
  var x142 uint64
  var x143 fiat_p448_uint1
  x142, x143 = fiat_p448_addcarryx_u64(x126, x138, 0x0)
  var x144 uint64
  x144, _ = fiat_p448_addcarryx_u64(x127, x140, x143)
  var x146 uint64 = ((x142 >> 56) | ((x144 << 8) & 0xffffffffffffffff))
  var x147 uint64 = (x142 & 0xffffffffffffff)
  var x148 uint64
  var x149 fiat_p448_uint1
  x148, x149 = fiat_p448_addcarryx_u64(x56, x48, 0x0)
  var x150 uint64
  x150, _ = fiat_p448_addcarryx_u64(x57, x49, x149)
  var x152 uint64
  var x153 fiat_p448_uint1
  x152, x153 = fiat_p448_addcarryx_u64(x82, x148, 0x0)
  var x154 uint64
  x154, _ = fiat_p448_addcarryx_u64(x83, x150, x153)
  var x156 uint64
  var x157 fiat_p448_uint1
  x156, x157 = fiat_p448_addcarryx_u64(x94, x152, 0x0)
  var x158 uint64
  x158, _ = fiat_p448_addcarryx_u64(x95, x154, x157)
  var x160 uint64
  var x161 fiat_p448_uint1
  x160, x161 = fiat_p448_addcarryx_u64(x106, x156, 0x0)
  var x162 uint64
  x162, _ = fiat_p448_addcarryx_u64(x107, x158, x161)
  var x164 uint64
  var x165 fiat_p448_uint1
  x164, x165 = fiat_p448_addcarryx_u64(x118, x160, 0x0)
  var x166 uint64
  x166, _ = fiat_p448_addcarryx_u64(x119, x162, x165)
  var x168 uint64
  var x169 fiat_p448_uint1
  x168, x169 = fiat_p448_addcarryx_u64(x38, x30, 0x0)
  var x170 uint64
  x170, _ = fiat_p448_addcarryx_u64(x39, x31, x169)
  var x172 uint64
  var x173 fiat_p448_uint1
  x172, x173 = fiat_p448_addcarryx_u64(x52, x168, 0x0)
  var x174 uint64
  x174, _ = fiat_p448_addcarryx_u64(x53, x170, x173)
  var x176 uint64
  var x177 fiat_p448_uint1
  x176, x177 = fiat_p448_addcarryx_u64(x60, x172, 0x0)
  var x178 uint64
  x178, _ = fiat_p448_addcarryx_u64(x61, x174, x177)
  var x180 uint64
  var x181 fiat_p448_uint1
  x180, x181 = fiat_p448_addcarryx_u64(x72, x176, 0x0)
  var x182 uint64
  x182, _ = fiat_p448_addcarryx_u64(x73, x178, x181)
  var x184 uint64
  var x185 fiat_p448_uint1
  x184, x185 = fiat_p448_addcarryx_u64(x84, x180, 0x0)
  var x186 uint64
  x186, _ = fiat_p448_addcarryx_u64(x85, x182, x185)
  var x188 uint64
  var x189 fiat_p448_uint1
  x188, x189 = fiat_p448_addcarryx_u64(x96, x184, 0x0)
  var x190 uint64
  x190, _ = fiat_p448_addcarryx_u64(x97, x186, x189)
  var x192 uint64
  var x193 fiat_p448_uint1
  x192, x193 = fiat_p448_addcarryx_u64(x108, x188, 0x0)
  var x194 uint64
  x194, _ = fiat_p448_addcarryx_u64(x109, x190, x193)
  var x196 uint64
  var x197 fiat_p448_uint1
  x196, x197 = fiat_p448_addcarryx_u64(x120, x192, 0x0)
  var x198 uint64
  x198, _ = fiat_p448_addcarryx_u64(x121, x194, x197)
  var x200 uint64
  var x201 fiat_p448_uint1
  x200, x201 = fiat_p448_addcarryx_u64(x40, x32, 0x0)
  var x202 uint64
  x202, _ = fiat_p448_addcarryx_u64(x41, x33, x201)
  var x204 uint64
  var x205 fiat_p448_uint1
  x204, x205 = fiat_p448_addcarryx_u64(x64, x200, 0x0)
  var x206 uint64
  x206, _ = fiat_p448_addcarryx_u64(x65, x202, x205)
  var x208 uint64
  var x209 fiat_p448_uint1
  x208, x209 = fiat_p448_addcarryx_u64(x76, x204, 0x0)
  var x210 uint64
  x210, _ = fiat_p448_addcarryx_u64(x77, x206, x209)
  var x212 uint64
  var x213 fiat_p448_uint1
  x212, x213 = fiat_p448_addcarryx_u64(x88, x208, 0x0)
  var x214 uint64
  x214, _ = fiat_p448_addcarryx_u64(x89, x210, x213)
  var x216 uint64
  var x217 fiat_p448_uint1
  x216, x217 = fiat_p448_addcarryx_u64(x98, x212, 0x0)
  var x218 uint64
  x218, _ = fiat_p448_addcarryx_u64(x99, x214, x217)
  var x220 uint64
  var x221 fiat_p448_uint1
  x220, x221 = fiat_p448_addcarryx_u64(x110, x216, 0x0)
  var x222 uint64
  x222, _ = fiat_p448_addcarryx_u64(x111, x218, x221)
  var x224 uint64
  var x225 fiat_p448_uint1
  x224, x225 = fiat_p448_addcarryx_u64(x122, x220, 0x0)
  var x226 uint64
  x226, _ = fiat_p448_addcarryx_u64(x123, x222, x225)
  var x228 uint64
  var x229 fiat_p448_uint1
  x228, x229 = fiat_p448_addcarryx_u64(x36, x34, 0x0)
  var x230 uint64
  x230, _ = fiat_p448_addcarryx_u64(x37, x35, x229)
  var x232 uint64
  var x233 fiat_p448_uint1
  x232, x233 = fiat_p448_addcarryx_u64(x42, x228, 0x0)
  var x234 uint64
  x234, _ = fiat_p448_addcarryx_u64(x43, x230, x233)
  var x236 uint64
  var x237 fiat_p448_uint1
  x236, x237 = fiat_p448_addcarryx_u64(x44, x232, 0x0)
  var x238 uint64
  x238, _ = fiat_p448_addcarryx_u64(x45, x234, x237)
  var x240 uint64
  var x241 fiat_p448_uint1
  x240, x241 = fiat_p448_addcarryx_u64(x68, x236, 0x0)
  var x242 uint64
  x242, _ = fiat_p448_addcarryx_u64(x69, x238, x241)
  var x244 uint64
  var x245 fiat_p448_uint1
  x244, x245 = fiat_p448_addcarryx_u64(x80, x240, 0x0)
  var x246 uint64
  x246, _ = fiat_p448_addcarryx_u64(x81, x242, x245)
  var x248 uint64
  var x249 fiat_p448_uint1
  x248, x249 = fiat_p448_addcarryx_u64(x92, x244, 0x0)
  var x250 uint64
  x250, _ = fiat_p448_addcarryx_u64(x93, x246, x249)
  var x252 uint64
  var x253 fiat_p448_uint1
  x252, x253 = fiat_p448_addcarryx_u64(x100, x248, 0x0)
  var x254 uint64
  x254, _ = fiat_p448_addcarryx_u64(x101, x250, x253)
  var x256 uint64
  var x257 fiat_p448_uint1
  x256, x257 = fiat_p448_addcarryx_u64(x104, x252, 0x0)
  var x258 uint64
  x258, _ = fiat_p448_addcarryx_u64(x105, x254, x257)
  var x260 uint64
  var x261 fiat_p448_uint1
  x260, x261 = fiat_p448_addcarryx_u64(x112, x256, 0x0)
  var x262 uint64
  x262, _ = fiat_p448_addcarryx_u64(x113, x258, x261)
  var x264 uint64
  var x265 fiat_p448_uint1
  x264, x265 = fiat_p448_addcarryx_u64(x124, x260, 0x0)
  var x266 uint64
  x266, _ = fiat_p448_addcarryx_u64(x125, x262, x265)
  var x268 uint64
  var x269 fiat_p448_uint1
  x268, x269 = fiat_p448_addcarryx_u64(x50, x22, 0x0)
  var x270 uint64
  x270, _ = fiat_p448_addcarryx_u64(x51, x23, x269)
  var x272 uint64
  var x273 fiat_p448_uint1
  x272, x273 = fiat_p448_addcarryx_u64(x58, x268, 0x0)
  var x274 uint64
  x274, _ = fiat_p448_addcarryx_u64(x59, x270, x273)
  var x276 uint64
  var x277 fiat_p448_uint1
  x276, x277 = fiat_p448_addcarryx_u64(x70, x272, 0x0)
  var x278 uint64
  x278, _ = fiat_p448_addcarryx_u64(x71, x274, x277)
  var x280 uint64
  var x281 fiat_p448_uint1
  x280, x281 = fiat_p448_addcarryx_u64(x116, x276, 0x0)
  var x282 uint64
  x282, _ = fiat_p448_addcarryx_u64(x117, x278, x281)
  var x284 uint64
  var x285 fiat_p448_uint1
  x284, x285 = fiat_p448_addcarryx_u64(x128, x280, 0x0)
  var x286 uint64
  x286, _ = fiat_p448_addcarryx_u64(x129, x282, x285)
  var x288 uint64
  var x289 fiat_p448_uint1
  x288, x289 = fiat_p448_addcarryx_u64(x62, x24, 0x0)
  var x290 uint64
  x290, _ = fiat_p448_addcarryx_u64(x63, x25, x289)
  var x292 uint64
  var x293 fiat_p448_uint1
  x292, x293 = fiat_p448_addcarryx_u64(x74, x288, 0x0)
  var x294 uint64
  x294, _ = fiat_p448_addcarryx_u64(x75, x290, x293)
  var x296 uint64
  var x297 fiat_p448_uint1
  x296, x297 = fiat_p448_addcarryx_u64(x86, x292, 0x0)
  var x298 uint64
  x298, _ = fiat_p448_addcarryx_u64(x87, x294, x297)
  var x300 uint64
  var x301 fiat_p448_uint1
  x300, x301 = fiat_p448_addcarryx_u64(x130, x296, 0x0)
  var x302 uint64
  x302, _ = fiat_p448_addcarryx_u64(x131, x298, x301)
  var x304 uint64
  var x305 fiat_p448_uint1
  x304, x305 = fiat_p448_addcarryx_u64(x28, x26, 0x0)
  var x306 uint64
  x306, _ = fiat_p448_addcarryx_u64(x29, x27, x305)
  var x308 uint64
  var x309 fiat_p448_uint1
  x308, x309 = fiat_p448_addcarryx_u64(x66, x304, 0x0)
  var x310 uint64
  x310, _ = fiat_p448_addcarryx_u64(x67, x306, x309)
  var x312 uint64
  var x313 fiat_p448_uint1
  x312, x313 = fiat_p448_addcarryx_u64(x78, x308, 0x0)
  var x314 uint64
  x314, _ = fiat_p448_addcarryx_u64(x79, x310, x313)
  var x316 uint64
  var x317 fiat_p448_uint1
  x316, x317 = fiat_p448_addcarryx_u64(x90, x312, 0x0)
  var x318 uint64
  x318, _ = fiat_p448_addcarryx_u64(x91, x314, x317)
  var x320 uint64
  var x321 fiat_p448_uint1
  x320, x321 = fiat_p448_addcarryx_u64(x102, x316, 0x0)
  var x322 uint64
  x322, _ = fiat_p448_addcarryx_u64(x103, x318, x321)
  var x324 uint64
  var x325 fiat_p448_uint1
  x324, x325 = fiat_p448_addcarryx_u64(x132, x320, 0x0)
  var x326 uint64
  x326, _ = fiat_p448_addcarryx_u64(x133, x322, x325)
  var x328 uint64
  var x329 fiat_p448_uint1
  x328, x329 = fiat_p448_addcarryx_u64(x146, x264, 0x0)
  var x330 uint64 = (uint64(x329) + x266)
  var x331 uint64 = ((x164 >> 56) | ((x166 << 8) & 0xffffffffffffffff))
  var x332 uint64 = (x164 & 0xffffffffffffff)
  var x333 uint64
  var x334 fiat_p448_uint1
  x333, x334 = fiat_p448_addcarryx_u64(x328, x331, 0x0)
  var x335 uint64 = (uint64(x334) + x330)
  var x336 uint64 = ((x333 >> 56) | ((x335 << 8) & 0xffffffffffffffff))
  var x337 uint64 = (x333 & 0xffffffffffffff)
  var x338 uint64
  var x339 fiat_p448_uint1
  x338, x339 = fiat_p448_addcarryx_u64(x324, x331, 0x0)
  var x340 uint64 = (uint64(x339) + x326)
  var x341 uint64
  var x342 fiat_p448_uint1
  x341, x342 = fiat_p448_addcarryx_u64(x336, x224, 0x0)
  var x343 uint64 = (uint64(x342) + x226)
  var x344 uint64 = ((x338 >> 56) | ((x340 << 8) & 0xffffffffffffffff))
  var x345 uint64 = (x338 & 0xffffffffffffff)
  var x346 uint64
  var x347 fiat_p448_uint1
  x346, x347 = fiat_p448_addcarryx_u64(x344, x300, 0x0)
  var x348 uint64 = (uint64(x347) + x302)
  var x349 uint64 = ((x341 >> 56) | ((x343 << 8) & 0xffffffffffffffff))
  var x350 uint64 = (x341 & 0xffffffffffffff)
  var x351 uint64
  var x352 fiat_p448_uint1
  x351, x352 = fiat_p448_addcarryx_u64(x349, x196, 0x0)
  var x353 uint64 = (uint64(x352) + x198)
  var x354 uint64 = ((x346 >> 56) | ((x348 << 8) & 0xffffffffffffffff))
  var x355 uint64 = (x346 & 0xffffffffffffff)
  var x356 uint64
  var x357 fiat_p448_uint1
  x356, x357 = fiat_p448_addcarryx_u64(x354, x284, 0x0)
  var x358 uint64 = (uint64(x357) + x286)
  var x359 uint64 = ((x351 >> 56) | ((x353 << 8) & 0xffffffffffffffff))
  var x360 uint64 = (x351 & 0xffffffffffffff)
  var x361 uint64 = (x359 + x332)
  var x362 uint64 = ((x356 >> 56) | ((x358 << 8) & 0xffffffffffffffff))
  var x363 uint64 = (x356 & 0xffffffffffffff)
  var x364 uint64 = (x362 + x147)
  var x365 uint64 = (x361 >> 56)
  var x366 uint64 = (x361 & 0xffffffffffffff)
  var x367 uint64 = (x364 >> 56)
  var x368 uint64 = (x364 & 0xffffffffffffff)
  var x369 uint64 = (x337 + x365)
  var x370 uint64 = (x345 + x365)
  var x371 uint64 = (x367 + x369)
  var x372 fiat_p448_uint1 = fiat_p448_uint1((x371 >> 56))
  var x373 uint64 = (x371 & 0xffffffffffffff)
  var x374 uint64 = (uint64(x372) + x350)
  var x375 fiat_p448_uint1 = fiat_p448_uint1((x370 >> 56))
  var x376 uint64 = (x370 & 0xffffffffffffff)
  var x377 uint64 = (uint64(x375) + x355)
  out1[0] = x376
  out1[1] = x377
  out1[2] = x363
  out1[3] = x368
  out1[4] = x373
  out1[5] = x374
  out1[6] = x360
  out1[7] = x366
}

/*
 * The function fiat_p448_carry reduces a field element.
 * Postconditions:
 *   eval out1 mod m = eval arg1 mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999]]
 */
/*inline*/
func fiat_p448_carry(out1 *[8]uint64, arg1 *[8]uint64) {
  var x1 uint64 = (arg1[3])
  var x2 uint64 = (arg1[7])
  var x3 uint64 = (x2 >> 56)
  var x4 uint64 = (((x1 >> 56) + (arg1[4])) + x3)
  var x5 uint64 = ((arg1[0]) + x3)
  var x6 uint64 = ((x4 >> 56) + (arg1[5]))
  var x7 uint64 = ((x5 >> 56) + (arg1[1]))
  var x8 uint64 = ((x6 >> 56) + (arg1[6]))
  var x9 uint64 = ((x7 >> 56) + (arg1[2]))
  var x10 uint64 = ((x8 >> 56) + (x2 & 0xffffffffffffff))
  var x11 uint64 = ((x9 >> 56) + (x1 & 0xffffffffffffff))
  var x12 fiat_p448_uint1 = fiat_p448_uint1((x10 >> 56))
  var x13 uint64 = ((x5 & 0xffffffffffffff) + uint64(x12))
  var x14 uint64 = (uint64(fiat_p448_uint1((x11 >> 56))) + ((x4 & 0xffffffffffffff) + uint64(x12)))
  var x15 uint64 = (x13 & 0xffffffffffffff)
  var x16 uint64 = (uint64(fiat_p448_uint1((x13 >> 56))) + (x7 & 0xffffffffffffff))
  var x17 uint64 = (x9 & 0xffffffffffffff)
  var x18 uint64 = (x11 & 0xffffffffffffff)
  var x19 uint64 = (x14 & 0xffffffffffffff)
  var x20 uint64 = (uint64(fiat_p448_uint1((x14 >> 56))) + (x6 & 0xffffffffffffff))
  var x21 uint64 = (x8 & 0xffffffffffffff)
  var x22 uint64 = (x10 & 0xffffffffffffff)
  out1[0] = x15
  out1[1] = x16
  out1[2] = x17
  out1[3] = x18
  out1[4] = x19
  out1[5] = x20
  out1[6] = x21
  out1[7] = x22
}

/*
 * The function fiat_p448_add adds two field elements.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 + eval arg2) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999]]
 *   arg2: [[0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb]]
 */
/*inline*/
func fiat_p448_add(out1 *[8]uint64, arg1 *[8]uint64, arg2 *[8]uint64) {
  var x1 uint64 = ((arg1[0]) + (arg2[0]))
  var x2 uint64 = ((arg1[1]) + (arg2[1]))
  var x3 uint64 = ((arg1[2]) + (arg2[2]))
  var x4 uint64 = ((arg1[3]) + (arg2[3]))
  var x5 uint64 = ((arg1[4]) + (arg2[4]))
  var x6 uint64 = ((arg1[5]) + (arg2[5]))
  var x7 uint64 = ((arg1[6]) + (arg2[6]))
  var x8 uint64 = ((arg1[7]) + (arg2[7]))
  out1[0] = x1
  out1[1] = x2
  out1[2] = x3
  out1[3] = x4
  out1[4] = x5
  out1[5] = x6
  out1[6] = x7
  out1[7] = x8
}

/*
 * The function fiat_p448_sub subtracts two field elements.
 * Postconditions:
 *   eval out1 mod m = (eval arg1 - eval arg2) mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999]]
 *   arg2: [[0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb]]
 */
/*inline*/
func fiat_p448_sub(out1 *[8]uint64, arg1 *[8]uint64, arg2 *[8]uint64) {
  var x1 uint64 = ((0x1fffffffffffffe + (arg1[0])) - (arg2[0]))
  var x2 uint64 = ((0x1fffffffffffffe + (arg1[1])) - (arg2[1]))
  var x3 uint64 = ((0x1fffffffffffffe + (arg1[2])) - (arg2[2]))
  var x4 uint64 = ((0x1fffffffffffffe + (arg1[3])) - (arg2[3]))
  var x5 uint64 = ((0x1fffffffffffffc + (arg1[4])) - (arg2[4]))
  var x6 uint64 = ((0x1fffffffffffffe + (arg1[5])) - (arg2[5]))
  var x7 uint64 = ((0x1fffffffffffffe + (arg1[6])) - (arg2[6]))
  var x8 uint64 = ((0x1fffffffffffffe + (arg1[7])) - (arg2[7]))
  out1[0] = x1
  out1[1] = x2
  out1[2] = x3
  out1[3] = x4
  out1[4] = x5
  out1[5] = x6
  out1[6] = x7
  out1[7] = x8
}

/*
 * The function fiat_p448_opp negates a field element.
 * Postconditions:
 *   eval out1 mod m = -eval arg1 mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb], [0x0 ~> 0x34ccccccccccccb]]
 */
/*inline*/
func fiat_p448_opp(out1 *[8]uint64, arg1 *[8]uint64) {
  var x1 uint64 = (0x1fffffffffffffe - (arg1[0]))
  var x2 uint64 = (0x1fffffffffffffe - (arg1[1]))
  var x3 uint64 = (0x1fffffffffffffe - (arg1[2]))
  var x4 uint64 = (0x1fffffffffffffe - (arg1[3]))
  var x5 uint64 = (0x1fffffffffffffc - (arg1[4]))
  var x6 uint64 = (0x1fffffffffffffe - (arg1[5]))
  var x7 uint64 = (0x1fffffffffffffe - (arg1[6]))
  var x8 uint64 = (0x1fffffffffffffe - (arg1[7]))
  out1[0] = x1
  out1[1] = x2
  out1[2] = x3
  out1[3] = x4
  out1[4] = x5
  out1[5] = x6
  out1[6] = x7
  out1[7] = x8
}

/*
 * The function fiat_p448_selectznz is a multi-limb conditional select.
 * Postconditions:
 *   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 *   arg3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 */
/*inline*/
func fiat_p448_selectznz(out1 *[8]uint64, arg1 fiat_p448_uint1, arg2 *[8]uint64, arg3 *[8]uint64) {
  var x1 uint64
  fiat_p448_cmovznz_u64(&x1, arg1, (arg2[0]), (arg3[0]))
  var x2 uint64
  fiat_p448_cmovznz_u64(&x2, arg1, (arg2[1]), (arg3[1]))
  var x3 uint64
  fiat_p448_cmovznz_u64(&x3, arg1, (arg2[2]), (arg3[2]))
  var x4 uint64
  fiat_p448_cmovznz_u64(&x4, arg1, (arg2[3]), (arg3[3]))
  var x5 uint64
  fiat_p448_cmovznz_u64(&x5, arg1, (arg2[4]), (arg3[4]))
  var x6 uint64
  fiat_p448_cmovznz_u64(&x6, arg1, (arg2[5]), (arg3[5]))
  var x7 uint64
  fiat_p448_cmovznz_u64(&x7, arg1, (arg2[6]), (arg3[6]))
  var x8 uint64
  fiat_p448_cmovznz_u64(&x8, arg1, (arg2[7]), (arg3[7]))
  out1[0] = x1
  out1[1] = x2
  out1[2] = x3
  out1[3] = x4
  out1[4] = x5
  out1[5] = x6
  out1[6] = x7
  out1[7] = x8
}

/*
 * The function fiat_p448_to_bytes serializes a field element to bytes in little-endian order.
 * Postconditions:
 *   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..55]
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
 */
/*inline*/
func fiat_p448_to_bytes(out1 *[56]uint8, arg1 *[8]uint64) {
  var x1 uint64
  var x2 fiat_p448_uint1
  fiat_p448_subborrowx_u56(&x1, &x2, 0x0, (arg1[0]), 0xffffffffffffff)
  var x3 uint64
  var x4 fiat_p448_uint1
  fiat_p448_subborrowx_u56(&x3, &x4, x2, (arg1[1]), 0xffffffffffffff)
  var x5 uint64
  var x6 fiat_p448_uint1
  fiat_p448_subborrowx_u56(&x5, &x6, x4, (arg1[2]), 0xffffffffffffff)
  var x7 uint64
  var x8 fiat_p448_uint1
  fiat_p448_subborrowx_u56(&x7, &x8, x6, (arg1[3]), 0xffffffffffffff)
  var x9 uint64
  var x10 fiat_p448_uint1
  fiat_p448_subborrowx_u56(&x9, &x10, x8, (arg1[4]), 0xfffffffffffffe)
  var x11 uint64
  var x12 fiat_p448_uint1
  fiat_p448_subborrowx_u56(&x11, &x12, x10, (arg1[5]), 0xffffffffffffff)
  var x13 uint64
  var x14 fiat_p448_uint1
  fiat_p448_subborrowx_u56(&x13, &x14, x12, (arg1[6]), 0xffffffffffffff)
  var x15 uint64
  var x16 fiat_p448_uint1
  fiat_p448_subborrowx_u56(&x15, &x16, x14, (arg1[7]), 0xffffffffffffff)
  var x17 uint64
  fiat_p448_cmovznz_u64(&x17, x16, uint64(0x0), 0xffffffffffffffff)
  var x18 uint64
  var x19 fiat_p448_uint1
  fiat_p448_addcarryx_u56(&x18, &x19, 0x0, x1, (x17 & 0xffffffffffffff))
  var x20 uint64
  var x21 fiat_p448_uint1
  fiat_p448_addcarryx_u56(&x20, &x21, x19, x3, (x17 & 0xffffffffffffff))
  var x22 uint64
  var x23 fiat_p448_uint1
  fiat_p448_addcarryx_u56(&x22, &x23, x21, x5, (x17 & 0xffffffffffffff))
  var x24 uint64
  var x25 fiat_p448_uint1
  fiat_p448_addcarryx_u56(&x24, &x25, x23, x7, (x17 & 0xffffffffffffff))
  var x26 uint64
  var x27 fiat_p448_uint1
  fiat_p448_addcarryx_u56(&x26, &x27, x25, x9, (x17 & 0xfffffffffffffe))
  var x28 uint64
  var x29 fiat_p448_uint1
  fiat_p448_addcarryx_u56(&x28, &x29, x27, x11, (x17 & 0xffffffffffffff))
  var x30 uint64
  var x31 fiat_p448_uint1
  fiat_p448_addcarryx_u56(&x30, &x31, x29, x13, (x17 & 0xffffffffffffff))
  var x32 uint64
  var x33 fiat_p448_uint1
  fiat_p448_addcarryx_u56(&x32, &x33, x31, x15, (x17 & 0xffffffffffffff))
  var x34 uint8 = (uint8(x18) & 0xff)
  var x35 uint64 = (x18 >> 8)
  var x36 uint8 = (uint8(x35) & 0xff)
  var x37 uint64 = (x35 >> 8)
  var x38 uint8 = (uint8(x37) & 0xff)
  var x39 uint64 = (x37 >> 8)
  var x40 uint8 = (uint8(x39) & 0xff)
  var x41 uint64 = (x39 >> 8)
  var x42 uint8 = (uint8(x41) & 0xff)
  var x43 uint64 = (x41 >> 8)
  var x44 uint8 = (uint8(x43) & 0xff)
  var x45 uint8 = uint8((x43 >> 8))
  var x46 uint8 = (uint8(x20) & 0xff)
  var x47 uint64 = (x20 >> 8)
  var x48 uint8 = (uint8(x47) & 0xff)
  var x49 uint64 = (x47 >> 8)
  var x50 uint8 = (uint8(x49) & 0xff)
  var x51 uint64 = (x49 >> 8)
  var x52 uint8 = (uint8(x51) & 0xff)
  var x53 uint64 = (x51 >> 8)
  var x54 uint8 = (uint8(x53) & 0xff)
  var x55 uint64 = (x53 >> 8)
  var x56 uint8 = (uint8(x55) & 0xff)
  var x57 uint8 = uint8((x55 >> 8))
  var x58 uint8 = (uint8(x22) & 0xff)
  var x59 uint64 = (x22 >> 8)
  var x60 uint8 = (uint8(x59) & 0xff)
  var x61 uint64 = (x59 >> 8)
  var x62 uint8 = (uint8(x61) & 0xff)
  var x63 uint64 = (x61 >> 8)
  var x64 uint8 = (uint8(x63) & 0xff)
  var x65 uint64 = (x63 >> 8)
  var x66 uint8 = (uint8(x65) & 0xff)
  var x67 uint64 = (x65 >> 8)
  var x68 uint8 = (uint8(x67) & 0xff)
  var x69 uint8 = uint8((x67 >> 8))
  var x70 uint8 = (uint8(x24) & 0xff)
  var x71 uint64 = (x24 >> 8)
  var x72 uint8 = (uint8(x71) & 0xff)
  var x73 uint64 = (x71 >> 8)
  var x74 uint8 = (uint8(x73) & 0xff)
  var x75 uint64 = (x73 >> 8)
  var x76 uint8 = (uint8(x75) & 0xff)
  var x77 uint64 = (x75 >> 8)
  var x78 uint8 = (uint8(x77) & 0xff)
  var x79 uint64 = (x77 >> 8)
  var x80 uint8 = (uint8(x79) & 0xff)
  var x81 uint8 = uint8((x79 >> 8))
  var x82 uint8 = (uint8(x26) & 0xff)
  var x83 uint64 = (x26 >> 8)
  var x84 uint8 = (uint8(x83) & 0xff)
  var x85 uint64 = (x83 >> 8)
  var x86 uint8 = (uint8(x85) & 0xff)
  var x87 uint64 = (x85 >> 8)
  var x88 uint8 = (uint8(x87) & 0xff)
  var x89 uint64 = (x87 >> 8)
  var x90 uint8 = (uint8(x89) & 0xff)
  var x91 uint64 = (x89 >> 8)
  var x92 uint8 = (uint8(x91) & 0xff)
  var x93 uint8 = uint8((x91 >> 8))
  var x94 uint8 = (uint8(x28) & 0xff)
  var x95 uint64 = (x28 >> 8)
  var x96 uint8 = (uint8(x95) & 0xff)
  var x97 uint64 = (x95 >> 8)
  var x98 uint8 = (uint8(x97) & 0xff)
  var x99 uint64 = (x97 >> 8)
  var x100 uint8 = (uint8(x99) & 0xff)
  var x101 uint64 = (x99 >> 8)
  var x102 uint8 = (uint8(x101) & 0xff)
  var x103 uint64 = (x101 >> 8)
  var x104 uint8 = (uint8(x103) & 0xff)
  var x105 uint8 = uint8((x103 >> 8))
  var x106 uint8 = (uint8(x30) & 0xff)
  var x107 uint64 = (x30 >> 8)
  var x108 uint8 = (uint8(x107) & 0xff)
  var x109 uint64 = (x107 >> 8)
  var x110 uint8 = (uint8(x109) & 0xff)
  var x111 uint64 = (x109 >> 8)
  var x112 uint8 = (uint8(x111) & 0xff)
  var x113 uint64 = (x111 >> 8)
  var x114 uint8 = (uint8(x113) & 0xff)
  var x115 uint64 = (x113 >> 8)
  var x116 uint8 = (uint8(x115) & 0xff)
  var x117 uint8 = uint8((x115 >> 8))
  var x118 uint8 = (uint8(x32) & 0xff)
  var x119 uint64 = (x32 >> 8)
  var x120 uint8 = (uint8(x119) & 0xff)
  var x121 uint64 = (x119 >> 8)
  var x122 uint8 = (uint8(x121) & 0xff)
  var x123 uint64 = (x121 >> 8)
  var x124 uint8 = (uint8(x123) & 0xff)
  var x125 uint64 = (x123 >> 8)
  var x126 uint8 = (uint8(x125) & 0xff)
  var x127 uint64 = (x125 >> 8)
  var x128 uint8 = (uint8(x127) & 0xff)
  var x129 uint8 = uint8((x127 >> 8))
  out1[0] = x34
  out1[1] = x36
  out1[2] = x38
  out1[3] = x40
  out1[4] = x42
  out1[5] = x44
  out1[6] = x45
  out1[7] = x46
  out1[8] = x48
  out1[9] = x50
  out1[10] = x52
  out1[11] = x54
  out1[12] = x56
  out1[13] = x57
  out1[14] = x58
  out1[15] = x60
  out1[16] = x62
  out1[17] = x64
  out1[18] = x66
  out1[19] = x68
  out1[20] = x69
  out1[21] = x70
  out1[22] = x72
  out1[23] = x74
  out1[24] = x76
  out1[25] = x78
  out1[26] = x80
  out1[27] = x81
  out1[28] = x82
  out1[29] = x84
  out1[30] = x86
  out1[31] = x88
  out1[32] = x90
  out1[33] = x92
  out1[34] = x93
  out1[35] = x94
  out1[36] = x96
  out1[37] = x98
  out1[38] = x100
  out1[39] = x102
  out1[40] = x104
  out1[41] = x105
  out1[42] = x106
  out1[43] = x108
  out1[44] = x110
  out1[45] = x112
  out1[46] = x114
  out1[47] = x116
  out1[48] = x117
  out1[49] = x118
  out1[50] = x120
  out1[51] = x122
  out1[52] = x124
  out1[53] = x126
  out1[54] = x128
  out1[55] = x129
}

/*
 * The function fiat_p448_from_bytes deserializes a field element from bytes in little-endian order.
 * Postconditions:
 *   eval out1 mod m = bytes_eval arg1 mod m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999], [0x0 ~> 0x119999999999999]]
 */
/*inline*/
func fiat_p448_from_bytes(out1 *[8]uint64, arg1 *[56]uint8) {
  var x1 uint64 = (uint64((arg1[55])) << 48)
  var x2 uint64 = (uint64((arg1[54])) << 40)
  var x3 uint64 = (uint64((arg1[53])) << 32)
  var x4 uint64 = (uint64((arg1[52])) << 24)
  var x5 uint64 = (uint64((arg1[51])) << 16)
  var x6 uint64 = (uint64((arg1[50])) << 8)
  var x7 uint8 = (arg1[49])
  var x8 uint64 = (uint64((arg1[48])) << 48)
  var x9 uint64 = (uint64((arg1[47])) << 40)
  var x10 uint64 = (uint64((arg1[46])) << 32)
  var x11 uint64 = (uint64((arg1[45])) << 24)
  var x12 uint64 = (uint64((arg1[44])) << 16)
  var x13 uint64 = (uint64((arg1[43])) << 8)
  var x14 uint8 = (arg1[42])
  var x15 uint64 = (uint64((arg1[41])) << 48)
  var x16 uint64 = (uint64((arg1[40])) << 40)
  var x17 uint64 = (uint64((arg1[39])) << 32)
  var x18 uint64 = (uint64((arg1[38])) << 24)
  var x19 uint64 = (uint64((arg1[37])) << 16)
  var x20 uint64 = (uint64((arg1[36])) << 8)
  var x21 uint8 = (arg1[35])
  var x22 uint64 = (uint64((arg1[34])) << 48)
  var x23 uint64 = (uint64((arg1[33])) << 40)
  var x24 uint64 = (uint64((arg1[32])) << 32)
  var x25 uint64 = (uint64((arg1[31])) << 24)
  var x26 uint64 = (uint64((arg1[30])) << 16)
  var x27 uint64 = (uint64((arg1[29])) << 8)
  var x28 uint8 = (arg1[28])
  var x29 uint64 = (uint64((arg1[27])) << 48)
  var x30 uint64 = (uint64((arg1[26])) << 40)
  var x31 uint64 = (uint64((arg1[25])) << 32)
  var x32 uint64 = (uint64((arg1[24])) << 24)
  var x33 uint64 = (uint64((arg1[23])) << 16)
  var x34 uint64 = (uint64((arg1[22])) << 8)
  var x35 uint8 = (arg1[21])
  var x36 uint64 = (uint64((arg1[20])) << 48)
  var x37 uint64 = (uint64((arg1[19])) << 40)
  var x38 uint64 = (uint64((arg1[18])) << 32)
  var x39 uint64 = (uint64((arg1[17])) << 24)
  var x40 uint64 = (uint64((arg1[16])) << 16)
  var x41 uint64 = (uint64((arg1[15])) << 8)
  var x42 uint8 = (arg1[14])
  var x43 uint64 = (uint64((arg1[13])) << 48)
  var x44 uint64 = (uint64((arg1[12])) << 40)
  var x45 uint64 = (uint64((arg1[11])) << 32)
  var x46 uint64 = (uint64((arg1[10])) << 24)
  var x47 uint64 = (uint64((arg1[9])) << 16)
  var x48 uint64 = (uint64((arg1[8])) << 8)
  var x49 uint8 = (arg1[7])
  var x50 uint64 = (uint64((arg1[6])) << 48)
  var x51 uint64 = (uint64((arg1[5])) << 40)
  var x52 uint64 = (uint64((arg1[4])) << 32)
  var x53 uint64 = (uint64((arg1[3])) << 24)
  var x54 uint64 = (uint64((arg1[2])) << 16)
  var x55 uint64 = (uint64((arg1[1])) << 8)
  var x56 uint8 = (arg1[0])
  var x57 uint64 = (x55 + uint64(x56))
  var x58 uint64 = (x54 + x57)
  var x59 uint64 = (x53 + x58)
  var x60 uint64 = (x52 + x59)
  var x61 uint64 = (x51 + x60)
  var x62 uint64 = (x50 + x61)
  var x63 uint64 = (x48 + uint64(x49))
  var x64 uint64 = (x47 + x63)
  var x65 uint64 = (x46 + x64)
  var x66 uint64 = (x45 + x65)
  var x67 uint64 = (x44 + x66)
  var x68 uint64 = (x43 + x67)
  var x69 uint64 = (x41 + uint64(x42))
  var x70 uint64 = (x40 + x69)
  var x71 uint64 = (x39 + x70)
  var x72 uint64 = (x38 + x71)
  var x73 uint64 = (x37 + x72)
  var x74 uint64 = (x36 + x73)
  var x75 uint64 = (x34 + uint64(x35))
  var x76 uint64 = (x33 + x75)
  var x77 uint64 = (x32 + x76)
  var x78 uint64 = (x31 + x77)
  var x79 uint64 = (x30 + x78)
  var x80 uint64 = (x29 + x79)
  var x81 uint64 = (x27 + uint64(x28))
  var x82 uint64 = (x26 + x81)
  var x83 uint64 = (x25 + x82)
  var x84 uint64 = (x24 + x83)
  var x85 uint64 = (x23 + x84)
  var x86 uint64 = (x22 + x85)
  var x87 uint64 = (x20 + uint64(x21))
  var x88 uint64 = (x19 + x87)
  var x89 uint64 = (x18 + x88)
  var x90 uint64 = (x17 + x89)
  var x91 uint64 = (x16 + x90)
  var x92 uint64 = (x15 + x91)
  var x93 uint64 = (x13 + uint64(x14))
  var x94 uint64 = (x12 + x93)
  var x95 uint64 = (x11 + x94)
  var x96 uint64 = (x10 + x95)
  var x97 uint64 = (x9 + x96)
  var x98 uint64 = (x8 + x97)
  var x99 uint64 = (x6 + uint64(x7))
  var x100 uint64 = (x5 + x99)
  var x101 uint64 = (x4 + x100)
  var x102 uint64 = (x3 + x101)
  var x103 uint64 = (x2 + x102)
  var x104 uint64 = (x1 + x103)
  out1[0] = x62
  out1[1] = x68
  out1[2] = x74
  out1[3] = x80
  out1[4] = x86
  out1[5] = x92
  out1[6] = x98
  out1[7] = x104
}

