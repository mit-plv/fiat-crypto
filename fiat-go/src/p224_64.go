/* Autogenerated: src/ExtractionOCaml/word_by_word_montgomery --lang Go --no-wide-int --cmovznz-by-mul p224 64 '2^224 - 2^96 + 1' mul square add sub opp from_montgomery to_montgomery nonzero selectznz to_bytes from_bytes */
/* curve description: p224 */
/* machine_wordsize = 64 (from "64") */
/* requested operations: mul, square, add, sub, opp, from_montgomery, to_montgomery, nonzero, selectznz, to_bytes, from_bytes */
/* m = 0xffffffffffffffffffffffffffffffff000000000000000000000001 (from "2^224 - 2^96 + 1") */
/*                                                                    */
/* NOTE: In addition to the bounds specified above each function, all */
/*   functions synthesized for this Montgomery arithmetic require the */
/*   input to be strictly less than the prime modulus (m), and also   */
/*   require the input to be in the unique saturated representation.  */
/*   All functions also ensure that these two properties are true of  */
/*   return values.                                                   */
/*  */
/* Computed values: */
/* eval z = z[0] + (z[1] << 64) + (z[2] << 128) + (z[3] << 192) */
/* bytes_eval z = z[0] + (z[1] << 8) + (z[2] << 16) + (z[3] << 24) + (z[4] << 32) + (z[5] << 40) + (z[6] << 48) + (z[7] << 56) + (z[8] << 64) + (z[9] << 72) + (z[10] << 80) + (z[11] << 88) + (z[12] << 96) + (z[13] << 104) + (z[14] << 112) + (z[15] << 120) + (z[16] << 128) + (z[17] << 136) + (z[18] << 144) + (z[19] << 152) + (z[20] << 160) + (z[21] << 168) + (z[22] << 176) + (z[23] << 184) + (z[24] << 192) + (z[25] << 200) + (z[26] << 208) + (z[27] << 216) */

package fiat_p224

import "math/bits"
type fiat_p224_uint1 uint8
type fiat_p224_int1 int8

/* The function fiat_p224_addcarryx_u64 is a thin wrapper around bits.Add64 that uses fiat_p224_uint1 rather than uint64 */
func fiat_p224_addcarryx_u64(x uint64, y uint64, carry fiat_p224_uint1) (uint64, fiat_p224_uint1) {
  var sum uint64
  var carryOut uint64
  sum, carryOut = bits.Add64(x, y, uint64(carry))
  return sum, fiat_p224_uint1(carryOut)
}

/* The function fiat_p224_subborrowx_u64 is a thin wrapper around bits.Sub64 that uses fiat_p224_uint1 rather than uint64 */
func fiat_p224_subborrowx_u64(x uint64, y uint64, carry fiat_p224_uint1) (uint64, fiat_p224_uint1) {
  var sum uint64
  var carryOut uint64
  sum, carryOut = bits.Sub64(x, y, uint64(carry))
  return sum, fiat_p224_uint1(carryOut)
}


/*
 * The function fiat_p224_cmovznz_u64 is a single-word conditional move.
 * Postconditions:
 *   out1 = (if arg1 = 0 then arg2 else arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [0x0 ~> 0xffffffffffffffff]
 *   arg3: [0x0 ~> 0xffffffffffffffff]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffffffffffff]
 */
/*inline*/
func fiat_p224_cmovznz_u64(out1 *uint64, arg1 fiat_p224_uint1, arg2 uint64, arg3 uint64) {
  var x1 uint64 = (uint64(arg1) * 0xffffffffffffffff)
  var x2 uint64 = ((x1 & arg3) | ((^x1) & arg2))
  *out1 = x2
}

/*
 * The function fiat_p224_mul multiplies two field elements in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 *   0 ≤ eval arg2 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg2)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 *   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 */
/*inline*/
func fiat_p224_mul(out1 *[4]uint64, arg1 *[4]uint64, arg2 *[4]uint64) {
  var x1 uint64 = (arg1[1])
  var x2 uint64 = (arg1[2])
  var x3 uint64 = (arg1[3])
  var x4 uint64 = (arg1[0])
  var x5 uint64
  var x6 uint64
  x6, x5 = bits.Mul64(x4, (arg2[3]))
  var x7 uint64
  var x8 uint64
  x8, x7 = bits.Mul64(x4, (arg2[2]))
  var x9 uint64
  var x10 uint64
  x10, x9 = bits.Mul64(x4, (arg2[1]))
  var x11 uint64
  var x12 uint64
  x12, x11 = bits.Mul64(x4, (arg2[0]))
  var x13 uint64
  var x14 fiat_p224_uint1
  x13, x14 = fiat_p224_addcarryx_u64(x12, x9, 0x0)
  var x15 uint64
  var x16 fiat_p224_uint1
  x15, x16 = fiat_p224_addcarryx_u64(x10, x7, x14)
  var x17 uint64
  var x18 fiat_p224_uint1
  x17, x18 = fiat_p224_addcarryx_u64(x8, x5, x16)
  var x19 uint64 = (uint64(x18) + x6)
  var x20 uint64
  _, x20 = bits.Mul64(x11, 0xffffffffffffffff)
  var x22 uint64
  var x23 uint64
  x23, x22 = bits.Mul64(x20, 0xffffffff)
  var x24 uint64
  var x25 uint64
  x25, x24 = bits.Mul64(x20, 0xffffffffffffffff)
  var x26 uint64
  var x27 uint64
  x27, x26 = bits.Mul64(x20, 0xffffffff00000000)
  var x28 uint64
  var x29 fiat_p224_uint1
  x28, x29 = fiat_p224_addcarryx_u64(x27, x24, 0x0)
  var x30 uint64
  var x31 fiat_p224_uint1
  x30, x31 = fiat_p224_addcarryx_u64(x25, x22, x29)
  var x32 uint64 = (uint64(x31) + x23)
  var x34 fiat_p224_uint1
  _, x34 = fiat_p224_addcarryx_u64(x11, x20, 0x0)
  var x35 uint64
  var x36 fiat_p224_uint1
  x35, x36 = fiat_p224_addcarryx_u64(x13, x26, x34)
  var x37 uint64
  var x38 fiat_p224_uint1
  x37, x38 = fiat_p224_addcarryx_u64(x15, x28, x36)
  var x39 uint64
  var x40 fiat_p224_uint1
  x39, x40 = fiat_p224_addcarryx_u64(x17, x30, x38)
  var x41 uint64
  var x42 fiat_p224_uint1
  x41, x42 = fiat_p224_addcarryx_u64(x19, x32, x40)
  var x43 uint64
  var x44 uint64
  x44, x43 = bits.Mul64(x1, (arg2[3]))
  var x45 uint64
  var x46 uint64
  x46, x45 = bits.Mul64(x1, (arg2[2]))
  var x47 uint64
  var x48 uint64
  x48, x47 = bits.Mul64(x1, (arg2[1]))
  var x49 uint64
  var x50 uint64
  x50, x49 = bits.Mul64(x1, (arg2[0]))
  var x51 uint64
  var x52 fiat_p224_uint1
  x51, x52 = fiat_p224_addcarryx_u64(x50, x47, 0x0)
  var x53 uint64
  var x54 fiat_p224_uint1
  x53, x54 = fiat_p224_addcarryx_u64(x48, x45, x52)
  var x55 uint64
  var x56 fiat_p224_uint1
  x55, x56 = fiat_p224_addcarryx_u64(x46, x43, x54)
  var x57 uint64 = (uint64(x56) + x44)
  var x58 uint64
  var x59 fiat_p224_uint1
  x58, x59 = fiat_p224_addcarryx_u64(x35, x49, 0x0)
  var x60 uint64
  var x61 fiat_p224_uint1
  x60, x61 = fiat_p224_addcarryx_u64(x37, x51, x59)
  var x62 uint64
  var x63 fiat_p224_uint1
  x62, x63 = fiat_p224_addcarryx_u64(x39, x53, x61)
  var x64 uint64
  var x65 fiat_p224_uint1
  x64, x65 = fiat_p224_addcarryx_u64(x41, x55, x63)
  var x66 uint64
  var x67 fiat_p224_uint1
  x66, x67 = fiat_p224_addcarryx_u64(uint64(x42), x57, x65)
  var x68 uint64
  _, x68 = bits.Mul64(x58, 0xffffffffffffffff)
  var x70 uint64
  var x71 uint64
  x71, x70 = bits.Mul64(x68, 0xffffffff)
  var x72 uint64
  var x73 uint64
  x73, x72 = bits.Mul64(x68, 0xffffffffffffffff)
  var x74 uint64
  var x75 uint64
  x75, x74 = bits.Mul64(x68, 0xffffffff00000000)
  var x76 uint64
  var x77 fiat_p224_uint1
  x76, x77 = fiat_p224_addcarryx_u64(x75, x72, 0x0)
  var x78 uint64
  var x79 fiat_p224_uint1
  x78, x79 = fiat_p224_addcarryx_u64(x73, x70, x77)
  var x80 uint64 = (uint64(x79) + x71)
  var x82 fiat_p224_uint1
  _, x82 = fiat_p224_addcarryx_u64(x58, x68, 0x0)
  var x83 uint64
  var x84 fiat_p224_uint1
  x83, x84 = fiat_p224_addcarryx_u64(x60, x74, x82)
  var x85 uint64
  var x86 fiat_p224_uint1
  x85, x86 = fiat_p224_addcarryx_u64(x62, x76, x84)
  var x87 uint64
  var x88 fiat_p224_uint1
  x87, x88 = fiat_p224_addcarryx_u64(x64, x78, x86)
  var x89 uint64
  var x90 fiat_p224_uint1
  x89, x90 = fiat_p224_addcarryx_u64(x66, x80, x88)
  var x91 uint64 = (uint64(x90) + uint64(x67))
  var x92 uint64
  var x93 uint64
  x93, x92 = bits.Mul64(x2, (arg2[3]))
  var x94 uint64
  var x95 uint64
  x95, x94 = bits.Mul64(x2, (arg2[2]))
  var x96 uint64
  var x97 uint64
  x97, x96 = bits.Mul64(x2, (arg2[1]))
  var x98 uint64
  var x99 uint64
  x99, x98 = bits.Mul64(x2, (arg2[0]))
  var x100 uint64
  var x101 fiat_p224_uint1
  x100, x101 = fiat_p224_addcarryx_u64(x99, x96, 0x0)
  var x102 uint64
  var x103 fiat_p224_uint1
  x102, x103 = fiat_p224_addcarryx_u64(x97, x94, x101)
  var x104 uint64
  var x105 fiat_p224_uint1
  x104, x105 = fiat_p224_addcarryx_u64(x95, x92, x103)
  var x106 uint64 = (uint64(x105) + x93)
  var x107 uint64
  var x108 fiat_p224_uint1
  x107, x108 = fiat_p224_addcarryx_u64(x83, x98, 0x0)
  var x109 uint64
  var x110 fiat_p224_uint1
  x109, x110 = fiat_p224_addcarryx_u64(x85, x100, x108)
  var x111 uint64
  var x112 fiat_p224_uint1
  x111, x112 = fiat_p224_addcarryx_u64(x87, x102, x110)
  var x113 uint64
  var x114 fiat_p224_uint1
  x113, x114 = fiat_p224_addcarryx_u64(x89, x104, x112)
  var x115 uint64
  var x116 fiat_p224_uint1
  x115, x116 = fiat_p224_addcarryx_u64(x91, x106, x114)
  var x117 uint64
  _, x117 = bits.Mul64(x107, 0xffffffffffffffff)
  var x119 uint64
  var x120 uint64
  x120, x119 = bits.Mul64(x117, 0xffffffff)
  var x121 uint64
  var x122 uint64
  x122, x121 = bits.Mul64(x117, 0xffffffffffffffff)
  var x123 uint64
  var x124 uint64
  x124, x123 = bits.Mul64(x117, 0xffffffff00000000)
  var x125 uint64
  var x126 fiat_p224_uint1
  x125, x126 = fiat_p224_addcarryx_u64(x124, x121, 0x0)
  var x127 uint64
  var x128 fiat_p224_uint1
  x127, x128 = fiat_p224_addcarryx_u64(x122, x119, x126)
  var x129 uint64 = (uint64(x128) + x120)
  var x131 fiat_p224_uint1
  _, x131 = fiat_p224_addcarryx_u64(x107, x117, 0x0)
  var x132 uint64
  var x133 fiat_p224_uint1
  x132, x133 = fiat_p224_addcarryx_u64(x109, x123, x131)
  var x134 uint64
  var x135 fiat_p224_uint1
  x134, x135 = fiat_p224_addcarryx_u64(x111, x125, x133)
  var x136 uint64
  var x137 fiat_p224_uint1
  x136, x137 = fiat_p224_addcarryx_u64(x113, x127, x135)
  var x138 uint64
  var x139 fiat_p224_uint1
  x138, x139 = fiat_p224_addcarryx_u64(x115, x129, x137)
  var x140 uint64 = (uint64(x139) + uint64(x116))
  var x141 uint64
  var x142 uint64
  x142, x141 = bits.Mul64(x3, (arg2[3]))
  var x143 uint64
  var x144 uint64
  x144, x143 = bits.Mul64(x3, (arg2[2]))
  var x145 uint64
  var x146 uint64
  x146, x145 = bits.Mul64(x3, (arg2[1]))
  var x147 uint64
  var x148 uint64
  x148, x147 = bits.Mul64(x3, (arg2[0]))
  var x149 uint64
  var x150 fiat_p224_uint1
  x149, x150 = fiat_p224_addcarryx_u64(x148, x145, 0x0)
  var x151 uint64
  var x152 fiat_p224_uint1
  x151, x152 = fiat_p224_addcarryx_u64(x146, x143, x150)
  var x153 uint64
  var x154 fiat_p224_uint1
  x153, x154 = fiat_p224_addcarryx_u64(x144, x141, x152)
  var x155 uint64 = (uint64(x154) + x142)
  var x156 uint64
  var x157 fiat_p224_uint1
  x156, x157 = fiat_p224_addcarryx_u64(x132, x147, 0x0)
  var x158 uint64
  var x159 fiat_p224_uint1
  x158, x159 = fiat_p224_addcarryx_u64(x134, x149, x157)
  var x160 uint64
  var x161 fiat_p224_uint1
  x160, x161 = fiat_p224_addcarryx_u64(x136, x151, x159)
  var x162 uint64
  var x163 fiat_p224_uint1
  x162, x163 = fiat_p224_addcarryx_u64(x138, x153, x161)
  var x164 uint64
  var x165 fiat_p224_uint1
  x164, x165 = fiat_p224_addcarryx_u64(x140, x155, x163)
  var x166 uint64
  _, x166 = bits.Mul64(x156, 0xffffffffffffffff)
  var x168 uint64
  var x169 uint64
  x169, x168 = bits.Mul64(x166, 0xffffffff)
  var x170 uint64
  var x171 uint64
  x171, x170 = bits.Mul64(x166, 0xffffffffffffffff)
  var x172 uint64
  var x173 uint64
  x173, x172 = bits.Mul64(x166, 0xffffffff00000000)
  var x174 uint64
  var x175 fiat_p224_uint1
  x174, x175 = fiat_p224_addcarryx_u64(x173, x170, 0x0)
  var x176 uint64
  var x177 fiat_p224_uint1
  x176, x177 = fiat_p224_addcarryx_u64(x171, x168, x175)
  var x178 uint64 = (uint64(x177) + x169)
  var x180 fiat_p224_uint1
  _, x180 = fiat_p224_addcarryx_u64(x156, x166, 0x0)
  var x181 uint64
  var x182 fiat_p224_uint1
  x181, x182 = fiat_p224_addcarryx_u64(x158, x172, x180)
  var x183 uint64
  var x184 fiat_p224_uint1
  x183, x184 = fiat_p224_addcarryx_u64(x160, x174, x182)
  var x185 uint64
  var x186 fiat_p224_uint1
  x185, x186 = fiat_p224_addcarryx_u64(x162, x176, x184)
  var x187 uint64
  var x188 fiat_p224_uint1
  x187, x188 = fiat_p224_addcarryx_u64(x164, x178, x186)
  var x189 uint64 = (uint64(x188) + uint64(x165))
  var x190 uint64
  var x191 fiat_p224_uint1
  x190, x191 = fiat_p224_subborrowx_u64(x181, uint64(0x1), 0x0)
  var x192 uint64
  var x193 fiat_p224_uint1
  x192, x193 = fiat_p224_subborrowx_u64(x183, 0xffffffff00000000, x191)
  var x194 uint64
  var x195 fiat_p224_uint1
  x194, x195 = fiat_p224_subborrowx_u64(x185, 0xffffffffffffffff, x193)
  var x196 uint64
  var x197 fiat_p224_uint1
  x196, x197 = fiat_p224_subborrowx_u64(x187, 0xffffffff, x195)
  var x199 fiat_p224_uint1
  _, x199 = fiat_p224_subborrowx_u64(x189, uint64(0x0), x197)
  var x200 uint64
  fiat_p224_cmovznz_u64(&x200, x199, x190, x181)
  var x201 uint64
  fiat_p224_cmovznz_u64(&x201, x199, x192, x183)
  var x202 uint64
  fiat_p224_cmovznz_u64(&x202, x199, x194, x185)
  var x203 uint64
  fiat_p224_cmovznz_u64(&x203, x199, x196, x187)
  out1[0] = x200
  out1[1] = x201
  out1[2] = x202
  out1[3] = x203
}

/*
 * The function fiat_p224_square squares a field element in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) * eval (from_montgomery arg1)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 */
/*inline*/
func fiat_p224_square(out1 *[4]uint64, arg1 *[4]uint64) {
  var x1 uint64 = (arg1[1])
  var x2 uint64 = (arg1[2])
  var x3 uint64 = (arg1[3])
  var x4 uint64 = (arg1[0])
  var x5 uint64
  var x6 uint64
  x6, x5 = bits.Mul64(x4, (arg1[3]))
  var x7 uint64
  var x8 uint64
  x8, x7 = bits.Mul64(x4, (arg1[2]))
  var x9 uint64
  var x10 uint64
  x10, x9 = bits.Mul64(x4, (arg1[1]))
  var x11 uint64
  var x12 uint64
  x12, x11 = bits.Mul64(x4, (arg1[0]))
  var x13 uint64
  var x14 fiat_p224_uint1
  x13, x14 = fiat_p224_addcarryx_u64(x12, x9, 0x0)
  var x15 uint64
  var x16 fiat_p224_uint1
  x15, x16 = fiat_p224_addcarryx_u64(x10, x7, x14)
  var x17 uint64
  var x18 fiat_p224_uint1
  x17, x18 = fiat_p224_addcarryx_u64(x8, x5, x16)
  var x19 uint64 = (uint64(x18) + x6)
  var x20 uint64
  _, x20 = bits.Mul64(x11, 0xffffffffffffffff)
  var x22 uint64
  var x23 uint64
  x23, x22 = bits.Mul64(x20, 0xffffffff)
  var x24 uint64
  var x25 uint64
  x25, x24 = bits.Mul64(x20, 0xffffffffffffffff)
  var x26 uint64
  var x27 uint64
  x27, x26 = bits.Mul64(x20, 0xffffffff00000000)
  var x28 uint64
  var x29 fiat_p224_uint1
  x28, x29 = fiat_p224_addcarryx_u64(x27, x24, 0x0)
  var x30 uint64
  var x31 fiat_p224_uint1
  x30, x31 = fiat_p224_addcarryx_u64(x25, x22, x29)
  var x32 uint64 = (uint64(x31) + x23)
  var x34 fiat_p224_uint1
  _, x34 = fiat_p224_addcarryx_u64(x11, x20, 0x0)
  var x35 uint64
  var x36 fiat_p224_uint1
  x35, x36 = fiat_p224_addcarryx_u64(x13, x26, x34)
  var x37 uint64
  var x38 fiat_p224_uint1
  x37, x38 = fiat_p224_addcarryx_u64(x15, x28, x36)
  var x39 uint64
  var x40 fiat_p224_uint1
  x39, x40 = fiat_p224_addcarryx_u64(x17, x30, x38)
  var x41 uint64
  var x42 fiat_p224_uint1
  x41, x42 = fiat_p224_addcarryx_u64(x19, x32, x40)
  var x43 uint64
  var x44 uint64
  x44, x43 = bits.Mul64(x1, (arg1[3]))
  var x45 uint64
  var x46 uint64
  x46, x45 = bits.Mul64(x1, (arg1[2]))
  var x47 uint64
  var x48 uint64
  x48, x47 = bits.Mul64(x1, (arg1[1]))
  var x49 uint64
  var x50 uint64
  x50, x49 = bits.Mul64(x1, (arg1[0]))
  var x51 uint64
  var x52 fiat_p224_uint1
  x51, x52 = fiat_p224_addcarryx_u64(x50, x47, 0x0)
  var x53 uint64
  var x54 fiat_p224_uint1
  x53, x54 = fiat_p224_addcarryx_u64(x48, x45, x52)
  var x55 uint64
  var x56 fiat_p224_uint1
  x55, x56 = fiat_p224_addcarryx_u64(x46, x43, x54)
  var x57 uint64 = (uint64(x56) + x44)
  var x58 uint64
  var x59 fiat_p224_uint1
  x58, x59 = fiat_p224_addcarryx_u64(x35, x49, 0x0)
  var x60 uint64
  var x61 fiat_p224_uint1
  x60, x61 = fiat_p224_addcarryx_u64(x37, x51, x59)
  var x62 uint64
  var x63 fiat_p224_uint1
  x62, x63 = fiat_p224_addcarryx_u64(x39, x53, x61)
  var x64 uint64
  var x65 fiat_p224_uint1
  x64, x65 = fiat_p224_addcarryx_u64(x41, x55, x63)
  var x66 uint64
  var x67 fiat_p224_uint1
  x66, x67 = fiat_p224_addcarryx_u64(uint64(x42), x57, x65)
  var x68 uint64
  _, x68 = bits.Mul64(x58, 0xffffffffffffffff)
  var x70 uint64
  var x71 uint64
  x71, x70 = bits.Mul64(x68, 0xffffffff)
  var x72 uint64
  var x73 uint64
  x73, x72 = bits.Mul64(x68, 0xffffffffffffffff)
  var x74 uint64
  var x75 uint64
  x75, x74 = bits.Mul64(x68, 0xffffffff00000000)
  var x76 uint64
  var x77 fiat_p224_uint1
  x76, x77 = fiat_p224_addcarryx_u64(x75, x72, 0x0)
  var x78 uint64
  var x79 fiat_p224_uint1
  x78, x79 = fiat_p224_addcarryx_u64(x73, x70, x77)
  var x80 uint64 = (uint64(x79) + x71)
  var x82 fiat_p224_uint1
  _, x82 = fiat_p224_addcarryx_u64(x58, x68, 0x0)
  var x83 uint64
  var x84 fiat_p224_uint1
  x83, x84 = fiat_p224_addcarryx_u64(x60, x74, x82)
  var x85 uint64
  var x86 fiat_p224_uint1
  x85, x86 = fiat_p224_addcarryx_u64(x62, x76, x84)
  var x87 uint64
  var x88 fiat_p224_uint1
  x87, x88 = fiat_p224_addcarryx_u64(x64, x78, x86)
  var x89 uint64
  var x90 fiat_p224_uint1
  x89, x90 = fiat_p224_addcarryx_u64(x66, x80, x88)
  var x91 uint64 = (uint64(x90) + uint64(x67))
  var x92 uint64
  var x93 uint64
  x93, x92 = bits.Mul64(x2, (arg1[3]))
  var x94 uint64
  var x95 uint64
  x95, x94 = bits.Mul64(x2, (arg1[2]))
  var x96 uint64
  var x97 uint64
  x97, x96 = bits.Mul64(x2, (arg1[1]))
  var x98 uint64
  var x99 uint64
  x99, x98 = bits.Mul64(x2, (arg1[0]))
  var x100 uint64
  var x101 fiat_p224_uint1
  x100, x101 = fiat_p224_addcarryx_u64(x99, x96, 0x0)
  var x102 uint64
  var x103 fiat_p224_uint1
  x102, x103 = fiat_p224_addcarryx_u64(x97, x94, x101)
  var x104 uint64
  var x105 fiat_p224_uint1
  x104, x105 = fiat_p224_addcarryx_u64(x95, x92, x103)
  var x106 uint64 = (uint64(x105) + x93)
  var x107 uint64
  var x108 fiat_p224_uint1
  x107, x108 = fiat_p224_addcarryx_u64(x83, x98, 0x0)
  var x109 uint64
  var x110 fiat_p224_uint1
  x109, x110 = fiat_p224_addcarryx_u64(x85, x100, x108)
  var x111 uint64
  var x112 fiat_p224_uint1
  x111, x112 = fiat_p224_addcarryx_u64(x87, x102, x110)
  var x113 uint64
  var x114 fiat_p224_uint1
  x113, x114 = fiat_p224_addcarryx_u64(x89, x104, x112)
  var x115 uint64
  var x116 fiat_p224_uint1
  x115, x116 = fiat_p224_addcarryx_u64(x91, x106, x114)
  var x117 uint64
  _, x117 = bits.Mul64(x107, 0xffffffffffffffff)
  var x119 uint64
  var x120 uint64
  x120, x119 = bits.Mul64(x117, 0xffffffff)
  var x121 uint64
  var x122 uint64
  x122, x121 = bits.Mul64(x117, 0xffffffffffffffff)
  var x123 uint64
  var x124 uint64
  x124, x123 = bits.Mul64(x117, 0xffffffff00000000)
  var x125 uint64
  var x126 fiat_p224_uint1
  x125, x126 = fiat_p224_addcarryx_u64(x124, x121, 0x0)
  var x127 uint64
  var x128 fiat_p224_uint1
  x127, x128 = fiat_p224_addcarryx_u64(x122, x119, x126)
  var x129 uint64 = (uint64(x128) + x120)
  var x131 fiat_p224_uint1
  _, x131 = fiat_p224_addcarryx_u64(x107, x117, 0x0)
  var x132 uint64
  var x133 fiat_p224_uint1
  x132, x133 = fiat_p224_addcarryx_u64(x109, x123, x131)
  var x134 uint64
  var x135 fiat_p224_uint1
  x134, x135 = fiat_p224_addcarryx_u64(x111, x125, x133)
  var x136 uint64
  var x137 fiat_p224_uint1
  x136, x137 = fiat_p224_addcarryx_u64(x113, x127, x135)
  var x138 uint64
  var x139 fiat_p224_uint1
  x138, x139 = fiat_p224_addcarryx_u64(x115, x129, x137)
  var x140 uint64 = (uint64(x139) + uint64(x116))
  var x141 uint64
  var x142 uint64
  x142, x141 = bits.Mul64(x3, (arg1[3]))
  var x143 uint64
  var x144 uint64
  x144, x143 = bits.Mul64(x3, (arg1[2]))
  var x145 uint64
  var x146 uint64
  x146, x145 = bits.Mul64(x3, (arg1[1]))
  var x147 uint64
  var x148 uint64
  x148, x147 = bits.Mul64(x3, (arg1[0]))
  var x149 uint64
  var x150 fiat_p224_uint1
  x149, x150 = fiat_p224_addcarryx_u64(x148, x145, 0x0)
  var x151 uint64
  var x152 fiat_p224_uint1
  x151, x152 = fiat_p224_addcarryx_u64(x146, x143, x150)
  var x153 uint64
  var x154 fiat_p224_uint1
  x153, x154 = fiat_p224_addcarryx_u64(x144, x141, x152)
  var x155 uint64 = (uint64(x154) + x142)
  var x156 uint64
  var x157 fiat_p224_uint1
  x156, x157 = fiat_p224_addcarryx_u64(x132, x147, 0x0)
  var x158 uint64
  var x159 fiat_p224_uint1
  x158, x159 = fiat_p224_addcarryx_u64(x134, x149, x157)
  var x160 uint64
  var x161 fiat_p224_uint1
  x160, x161 = fiat_p224_addcarryx_u64(x136, x151, x159)
  var x162 uint64
  var x163 fiat_p224_uint1
  x162, x163 = fiat_p224_addcarryx_u64(x138, x153, x161)
  var x164 uint64
  var x165 fiat_p224_uint1
  x164, x165 = fiat_p224_addcarryx_u64(x140, x155, x163)
  var x166 uint64
  _, x166 = bits.Mul64(x156, 0xffffffffffffffff)
  var x168 uint64
  var x169 uint64
  x169, x168 = bits.Mul64(x166, 0xffffffff)
  var x170 uint64
  var x171 uint64
  x171, x170 = bits.Mul64(x166, 0xffffffffffffffff)
  var x172 uint64
  var x173 uint64
  x173, x172 = bits.Mul64(x166, 0xffffffff00000000)
  var x174 uint64
  var x175 fiat_p224_uint1
  x174, x175 = fiat_p224_addcarryx_u64(x173, x170, 0x0)
  var x176 uint64
  var x177 fiat_p224_uint1
  x176, x177 = fiat_p224_addcarryx_u64(x171, x168, x175)
  var x178 uint64 = (uint64(x177) + x169)
  var x180 fiat_p224_uint1
  _, x180 = fiat_p224_addcarryx_u64(x156, x166, 0x0)
  var x181 uint64
  var x182 fiat_p224_uint1
  x181, x182 = fiat_p224_addcarryx_u64(x158, x172, x180)
  var x183 uint64
  var x184 fiat_p224_uint1
  x183, x184 = fiat_p224_addcarryx_u64(x160, x174, x182)
  var x185 uint64
  var x186 fiat_p224_uint1
  x185, x186 = fiat_p224_addcarryx_u64(x162, x176, x184)
  var x187 uint64
  var x188 fiat_p224_uint1
  x187, x188 = fiat_p224_addcarryx_u64(x164, x178, x186)
  var x189 uint64 = (uint64(x188) + uint64(x165))
  var x190 uint64
  var x191 fiat_p224_uint1
  x190, x191 = fiat_p224_subborrowx_u64(x181, uint64(0x1), 0x0)
  var x192 uint64
  var x193 fiat_p224_uint1
  x192, x193 = fiat_p224_subborrowx_u64(x183, 0xffffffff00000000, x191)
  var x194 uint64
  var x195 fiat_p224_uint1
  x194, x195 = fiat_p224_subborrowx_u64(x185, 0xffffffffffffffff, x193)
  var x196 uint64
  var x197 fiat_p224_uint1
  x196, x197 = fiat_p224_subborrowx_u64(x187, 0xffffffff, x195)
  var x199 fiat_p224_uint1
  _, x199 = fiat_p224_subborrowx_u64(x189, uint64(0x0), x197)
  var x200 uint64
  fiat_p224_cmovznz_u64(&x200, x199, x190, x181)
  var x201 uint64
  fiat_p224_cmovznz_u64(&x201, x199, x192, x183)
  var x202 uint64
  fiat_p224_cmovznz_u64(&x202, x199, x194, x185)
  var x203 uint64
  fiat_p224_cmovznz_u64(&x203, x199, x196, x187)
  out1[0] = x200
  out1[1] = x201
  out1[2] = x202
  out1[3] = x203
}

/*
 * The function fiat_p224_add adds two field elements in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 *   0 ≤ eval arg2 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) + eval (from_montgomery arg2)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 *   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 */
/*inline*/
func fiat_p224_add(out1 *[4]uint64, arg1 *[4]uint64, arg2 *[4]uint64) {
  var x1 uint64
  var x2 fiat_p224_uint1
  x1, x2 = fiat_p224_addcarryx_u64((arg1[0]), (arg2[0]), 0x0)
  var x3 uint64
  var x4 fiat_p224_uint1
  x3, x4 = fiat_p224_addcarryx_u64((arg1[1]), (arg2[1]), x2)
  var x5 uint64
  var x6 fiat_p224_uint1
  x5, x6 = fiat_p224_addcarryx_u64((arg1[2]), (arg2[2]), x4)
  var x7 uint64
  var x8 fiat_p224_uint1
  x7, x8 = fiat_p224_addcarryx_u64((arg1[3]), (arg2[3]), x6)
  var x9 uint64
  var x10 fiat_p224_uint1
  x9, x10 = fiat_p224_subborrowx_u64(x1, uint64(0x1), 0x0)
  var x11 uint64
  var x12 fiat_p224_uint1
  x11, x12 = fiat_p224_subborrowx_u64(x3, 0xffffffff00000000, x10)
  var x13 uint64
  var x14 fiat_p224_uint1
  x13, x14 = fiat_p224_subborrowx_u64(x5, 0xffffffffffffffff, x12)
  var x15 uint64
  var x16 fiat_p224_uint1
  x15, x16 = fiat_p224_subborrowx_u64(x7, 0xffffffff, x14)
  var x18 fiat_p224_uint1
  _, x18 = fiat_p224_subborrowx_u64(uint64(x8), uint64(0x0), x16)
  var x19 uint64
  fiat_p224_cmovznz_u64(&x19, x18, x9, x1)
  var x20 uint64
  fiat_p224_cmovznz_u64(&x20, x18, x11, x3)
  var x21 uint64
  fiat_p224_cmovznz_u64(&x21, x18, x13, x5)
  var x22 uint64
  fiat_p224_cmovznz_u64(&x22, x18, x15, x7)
  out1[0] = x19
  out1[1] = x20
  out1[2] = x21
  out1[3] = x22
}

/*
 * The function fiat_p224_sub subtracts two field elements in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 *   0 ≤ eval arg2 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = (eval (from_montgomery arg1) - eval (from_montgomery arg2)) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 *   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 */
/*inline*/
func fiat_p224_sub(out1 *[4]uint64, arg1 *[4]uint64, arg2 *[4]uint64) {
  var x1 uint64
  var x2 fiat_p224_uint1
  x1, x2 = fiat_p224_subborrowx_u64((arg1[0]), (arg2[0]), 0x0)
  var x3 uint64
  var x4 fiat_p224_uint1
  x3, x4 = fiat_p224_subborrowx_u64((arg1[1]), (arg2[1]), x2)
  var x5 uint64
  var x6 fiat_p224_uint1
  x5, x6 = fiat_p224_subborrowx_u64((arg1[2]), (arg2[2]), x4)
  var x7 uint64
  var x8 fiat_p224_uint1
  x7, x8 = fiat_p224_subborrowx_u64((arg1[3]), (arg2[3]), x6)
  var x9 uint64
  fiat_p224_cmovznz_u64(&x9, x8, uint64(0x0), 0xffffffffffffffff)
  var x10 uint64
  var x11 fiat_p224_uint1
  x10, x11 = fiat_p224_addcarryx_u64(x1, uint64((fiat_p224_uint1(x9) & 0x1)), 0x0)
  var x12 uint64
  var x13 fiat_p224_uint1
  x12, x13 = fiat_p224_addcarryx_u64(x3, (x9 & 0xffffffff00000000), x11)
  var x14 uint64
  var x15 fiat_p224_uint1
  x14, x15 = fiat_p224_addcarryx_u64(x5, x9, x13)
  var x16 uint64
  x16, _ = fiat_p224_addcarryx_u64(x7, (x9 & 0xffffffff), x15)
  out1[0] = x10
  out1[1] = x12
  out1[2] = x14
  out1[3] = x16
}

/*
 * The function fiat_p224_opp negates a field element in the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = -eval (from_montgomery arg1) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 */
/*inline*/
func fiat_p224_opp(out1 *[4]uint64, arg1 *[4]uint64) {
  var x1 uint64
  var x2 fiat_p224_uint1
  x1, x2 = fiat_p224_subborrowx_u64(uint64(0x0), (arg1[0]), 0x0)
  var x3 uint64
  var x4 fiat_p224_uint1
  x3, x4 = fiat_p224_subborrowx_u64(uint64(0x0), (arg1[1]), x2)
  var x5 uint64
  var x6 fiat_p224_uint1
  x5, x6 = fiat_p224_subborrowx_u64(uint64(0x0), (arg1[2]), x4)
  var x7 uint64
  var x8 fiat_p224_uint1
  x7, x8 = fiat_p224_subborrowx_u64(uint64(0x0), (arg1[3]), x6)
  var x9 uint64
  fiat_p224_cmovznz_u64(&x9, x8, uint64(0x0), 0xffffffffffffffff)
  var x10 uint64
  var x11 fiat_p224_uint1
  x10, x11 = fiat_p224_addcarryx_u64(x1, uint64((fiat_p224_uint1(x9) & 0x1)), 0x0)
  var x12 uint64
  var x13 fiat_p224_uint1
  x12, x13 = fiat_p224_addcarryx_u64(x3, (x9 & 0xffffffff00000000), x11)
  var x14 uint64
  var x15 fiat_p224_uint1
  x14, x15 = fiat_p224_addcarryx_u64(x5, x9, x13)
  var x16 uint64
  x16, _ = fiat_p224_addcarryx_u64(x7, (x9 & 0xffffffff), x15)
  out1[0] = x10
  out1[1] = x12
  out1[2] = x14
  out1[3] = x16
}

/*
 * The function fiat_p224_from_montgomery translates a field element out of the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval out1 mod m = (eval arg1 * ((2^64)⁻¹ mod m)^4) mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 */
/*inline*/
func fiat_p224_from_montgomery(out1 *[4]uint64, arg1 *[4]uint64) {
  var x1 uint64 = (arg1[0])
  var x2 uint64
  _, x2 = bits.Mul64(x1, 0xffffffffffffffff)
  var x4 uint64
  var x5 uint64
  x5, x4 = bits.Mul64(x2, 0xffffffff)
  var x6 uint64
  var x7 uint64
  x7, x6 = bits.Mul64(x2, 0xffffffffffffffff)
  var x8 uint64
  var x9 uint64
  x9, x8 = bits.Mul64(x2, 0xffffffff00000000)
  var x10 uint64
  var x11 fiat_p224_uint1
  x10, x11 = fiat_p224_addcarryx_u64(x9, x6, 0x0)
  var x12 uint64
  var x13 fiat_p224_uint1
  x12, x13 = fiat_p224_addcarryx_u64(x7, x4, x11)
  var x15 fiat_p224_uint1
  _, x15 = fiat_p224_addcarryx_u64(x1, x2, 0x0)
  var x16 uint64
  var x17 fiat_p224_uint1
  x16, x17 = fiat_p224_addcarryx_u64(uint64(0x0), x8, x15)
  var x18 uint64
  var x19 fiat_p224_uint1
  x18, x19 = fiat_p224_addcarryx_u64(uint64(0x0), x10, x17)
  var x20 uint64
  var x21 fiat_p224_uint1
  x20, x21 = fiat_p224_addcarryx_u64(uint64(0x0), x12, x19)
  var x22 uint64
  var x23 fiat_p224_uint1
  x22, x23 = fiat_p224_addcarryx_u64(x16, (arg1[1]), 0x0)
  var x24 uint64
  var x25 fiat_p224_uint1
  x24, x25 = fiat_p224_addcarryx_u64(x18, uint64(0x0), x23)
  var x26 uint64
  var x27 fiat_p224_uint1
  x26, x27 = fiat_p224_addcarryx_u64(x20, uint64(0x0), x25)
  var x28 uint64
  _, x28 = bits.Mul64(x22, 0xffffffffffffffff)
  var x30 uint64
  var x31 uint64
  x31, x30 = bits.Mul64(x28, 0xffffffff)
  var x32 uint64
  var x33 uint64
  x33, x32 = bits.Mul64(x28, 0xffffffffffffffff)
  var x34 uint64
  var x35 uint64
  x35, x34 = bits.Mul64(x28, 0xffffffff00000000)
  var x36 uint64
  var x37 fiat_p224_uint1
  x36, x37 = fiat_p224_addcarryx_u64(x35, x32, 0x0)
  var x38 uint64
  var x39 fiat_p224_uint1
  x38, x39 = fiat_p224_addcarryx_u64(x33, x30, x37)
  var x41 fiat_p224_uint1
  _, x41 = fiat_p224_addcarryx_u64(x22, x28, 0x0)
  var x42 uint64
  var x43 fiat_p224_uint1
  x42, x43 = fiat_p224_addcarryx_u64(x24, x34, x41)
  var x44 uint64
  var x45 fiat_p224_uint1
  x44, x45 = fiat_p224_addcarryx_u64(x26, x36, x43)
  var x46 uint64
  var x47 fiat_p224_uint1
  x46, x47 = fiat_p224_addcarryx_u64((uint64(x27) + (uint64(x21) + (uint64(x13) + x5))), x38, x45)
  var x48 uint64
  var x49 fiat_p224_uint1
  x48, x49 = fiat_p224_addcarryx_u64(x42, (arg1[2]), 0x0)
  var x50 uint64
  var x51 fiat_p224_uint1
  x50, x51 = fiat_p224_addcarryx_u64(x44, uint64(0x0), x49)
  var x52 uint64
  var x53 fiat_p224_uint1
  x52, x53 = fiat_p224_addcarryx_u64(x46, uint64(0x0), x51)
  var x54 uint64
  _, x54 = bits.Mul64(x48, 0xffffffffffffffff)
  var x56 uint64
  var x57 uint64
  x57, x56 = bits.Mul64(x54, 0xffffffff)
  var x58 uint64
  var x59 uint64
  x59, x58 = bits.Mul64(x54, 0xffffffffffffffff)
  var x60 uint64
  var x61 uint64
  x61, x60 = bits.Mul64(x54, 0xffffffff00000000)
  var x62 uint64
  var x63 fiat_p224_uint1
  x62, x63 = fiat_p224_addcarryx_u64(x61, x58, 0x0)
  var x64 uint64
  var x65 fiat_p224_uint1
  x64, x65 = fiat_p224_addcarryx_u64(x59, x56, x63)
  var x67 fiat_p224_uint1
  _, x67 = fiat_p224_addcarryx_u64(x48, x54, 0x0)
  var x68 uint64
  var x69 fiat_p224_uint1
  x68, x69 = fiat_p224_addcarryx_u64(x50, x60, x67)
  var x70 uint64
  var x71 fiat_p224_uint1
  x70, x71 = fiat_p224_addcarryx_u64(x52, x62, x69)
  var x72 uint64
  var x73 fiat_p224_uint1
  x72, x73 = fiat_p224_addcarryx_u64((uint64(x53) + (uint64(x47) + (uint64(x39) + x31))), x64, x71)
  var x74 uint64
  var x75 fiat_p224_uint1
  x74, x75 = fiat_p224_addcarryx_u64(x68, (arg1[3]), 0x0)
  var x76 uint64
  var x77 fiat_p224_uint1
  x76, x77 = fiat_p224_addcarryx_u64(x70, uint64(0x0), x75)
  var x78 uint64
  var x79 fiat_p224_uint1
  x78, x79 = fiat_p224_addcarryx_u64(x72, uint64(0x0), x77)
  var x80 uint64
  _, x80 = bits.Mul64(x74, 0xffffffffffffffff)
  var x82 uint64
  var x83 uint64
  x83, x82 = bits.Mul64(x80, 0xffffffff)
  var x84 uint64
  var x85 uint64
  x85, x84 = bits.Mul64(x80, 0xffffffffffffffff)
  var x86 uint64
  var x87 uint64
  x87, x86 = bits.Mul64(x80, 0xffffffff00000000)
  var x88 uint64
  var x89 fiat_p224_uint1
  x88, x89 = fiat_p224_addcarryx_u64(x87, x84, 0x0)
  var x90 uint64
  var x91 fiat_p224_uint1
  x90, x91 = fiat_p224_addcarryx_u64(x85, x82, x89)
  var x93 fiat_p224_uint1
  _, x93 = fiat_p224_addcarryx_u64(x74, x80, 0x0)
  var x94 uint64
  var x95 fiat_p224_uint1
  x94, x95 = fiat_p224_addcarryx_u64(x76, x86, x93)
  var x96 uint64
  var x97 fiat_p224_uint1
  x96, x97 = fiat_p224_addcarryx_u64(x78, x88, x95)
  var x98 uint64
  var x99 fiat_p224_uint1
  x98, x99 = fiat_p224_addcarryx_u64((uint64(x79) + (uint64(x73) + (uint64(x65) + x57))), x90, x97)
  var x100 uint64 = (uint64(x99) + (uint64(x91) + x83))
  var x101 uint64
  var x102 fiat_p224_uint1
  x101, x102 = fiat_p224_subborrowx_u64(x94, uint64(0x1), 0x0)
  var x103 uint64
  var x104 fiat_p224_uint1
  x103, x104 = fiat_p224_subborrowx_u64(x96, 0xffffffff00000000, x102)
  var x105 uint64
  var x106 fiat_p224_uint1
  x105, x106 = fiat_p224_subborrowx_u64(x98, 0xffffffffffffffff, x104)
  var x107 uint64
  var x108 fiat_p224_uint1
  x107, x108 = fiat_p224_subborrowx_u64(x100, 0xffffffff, x106)
  var x110 fiat_p224_uint1
  _, x110 = fiat_p224_subborrowx_u64(uint64(0x0), uint64(0x0), x108)
  var x111 uint64
  fiat_p224_cmovznz_u64(&x111, x110, x101, x94)
  var x112 uint64
  fiat_p224_cmovznz_u64(&x112, x110, x103, x96)
  var x113 uint64
  fiat_p224_cmovznz_u64(&x113, x110, x105, x98)
  var x114 uint64
  fiat_p224_cmovznz_u64(&x114, x110, x107, x100)
  out1[0] = x111
  out1[1] = x112
  out1[2] = x113
  out1[3] = x114
}

/*
 * The function fiat_p224_to_montgomery translates a field element into the Montgomery domain.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   eval (from_montgomery out1) mod m = eval arg1 mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 */
/*inline*/
func fiat_p224_to_montgomery(out1 *[4]uint64, arg1 *[4]uint64) {
  var x1 uint64 = (arg1[1])
  var x2 uint64 = (arg1[2])
  var x3 uint64 = (arg1[3])
  var x4 uint64 = (arg1[0])
  var x5 uint64
  var x6 uint64
  x6, x5 = bits.Mul64(x4, 0xffffffff)
  var x7 uint64
  var x8 uint64
  x8, x7 = bits.Mul64(x4, 0xfffffffe00000000)
  var x9 uint64
  var x10 uint64
  x10, x9 = bits.Mul64(x4, 0xffffffff00000000)
  var x11 uint64
  var x12 uint64
  x12, x11 = bits.Mul64(x4, 0xffffffff00000001)
  var x13 uint64
  var x14 fiat_p224_uint1
  x13, x14 = fiat_p224_addcarryx_u64(x12, x9, 0x0)
  var x15 uint64
  var x16 fiat_p224_uint1
  x15, x16 = fiat_p224_addcarryx_u64(x10, x7, x14)
  var x17 uint64
  var x18 fiat_p224_uint1
  x17, x18 = fiat_p224_addcarryx_u64(x8, x5, x16)
  var x19 uint64
  _, x19 = bits.Mul64(x11, 0xffffffffffffffff)
  var x21 uint64
  var x22 uint64
  x22, x21 = bits.Mul64(x19, 0xffffffff)
  var x23 uint64
  var x24 uint64
  x24, x23 = bits.Mul64(x19, 0xffffffffffffffff)
  var x25 uint64
  var x26 uint64
  x26, x25 = bits.Mul64(x19, 0xffffffff00000000)
  var x27 uint64
  var x28 fiat_p224_uint1
  x27, x28 = fiat_p224_addcarryx_u64(x26, x23, 0x0)
  var x29 uint64
  var x30 fiat_p224_uint1
  x29, x30 = fiat_p224_addcarryx_u64(x24, x21, x28)
  var x32 fiat_p224_uint1
  _, x32 = fiat_p224_addcarryx_u64(x11, x19, 0x0)
  var x33 uint64
  var x34 fiat_p224_uint1
  x33, x34 = fiat_p224_addcarryx_u64(x13, x25, x32)
  var x35 uint64
  var x36 fiat_p224_uint1
  x35, x36 = fiat_p224_addcarryx_u64(x15, x27, x34)
  var x37 uint64
  var x38 fiat_p224_uint1
  x37, x38 = fiat_p224_addcarryx_u64(x17, x29, x36)
  var x39 uint64
  var x40 uint64
  x40, x39 = bits.Mul64(x1, 0xffffffff)
  var x41 uint64
  var x42 uint64
  x42, x41 = bits.Mul64(x1, 0xfffffffe00000000)
  var x43 uint64
  var x44 uint64
  x44, x43 = bits.Mul64(x1, 0xffffffff00000000)
  var x45 uint64
  var x46 uint64
  x46, x45 = bits.Mul64(x1, 0xffffffff00000001)
  var x47 uint64
  var x48 fiat_p224_uint1
  x47, x48 = fiat_p224_addcarryx_u64(x46, x43, 0x0)
  var x49 uint64
  var x50 fiat_p224_uint1
  x49, x50 = fiat_p224_addcarryx_u64(x44, x41, x48)
  var x51 uint64
  var x52 fiat_p224_uint1
  x51, x52 = fiat_p224_addcarryx_u64(x42, x39, x50)
  var x53 uint64
  var x54 fiat_p224_uint1
  x53, x54 = fiat_p224_addcarryx_u64(x33, x45, 0x0)
  var x55 uint64
  var x56 fiat_p224_uint1
  x55, x56 = fiat_p224_addcarryx_u64(x35, x47, x54)
  var x57 uint64
  var x58 fiat_p224_uint1
  x57, x58 = fiat_p224_addcarryx_u64(x37, x49, x56)
  var x59 uint64
  var x60 fiat_p224_uint1
  x59, x60 = fiat_p224_addcarryx_u64(((uint64(x38) + (uint64(x18) + x6)) + (uint64(x30) + x22)), x51, x58)
  var x61 uint64
  _, x61 = bits.Mul64(x53, 0xffffffffffffffff)
  var x63 uint64
  var x64 uint64
  x64, x63 = bits.Mul64(x61, 0xffffffff)
  var x65 uint64
  var x66 uint64
  x66, x65 = bits.Mul64(x61, 0xffffffffffffffff)
  var x67 uint64
  var x68 uint64
  x68, x67 = bits.Mul64(x61, 0xffffffff00000000)
  var x69 uint64
  var x70 fiat_p224_uint1
  x69, x70 = fiat_p224_addcarryx_u64(x68, x65, 0x0)
  var x71 uint64
  var x72 fiat_p224_uint1
  x71, x72 = fiat_p224_addcarryx_u64(x66, x63, x70)
  var x74 fiat_p224_uint1
  _, x74 = fiat_p224_addcarryx_u64(x53, x61, 0x0)
  var x75 uint64
  var x76 fiat_p224_uint1
  x75, x76 = fiat_p224_addcarryx_u64(x55, x67, x74)
  var x77 uint64
  var x78 fiat_p224_uint1
  x77, x78 = fiat_p224_addcarryx_u64(x57, x69, x76)
  var x79 uint64
  var x80 fiat_p224_uint1
  x79, x80 = fiat_p224_addcarryx_u64(x59, x71, x78)
  var x81 uint64
  var x82 uint64
  x82, x81 = bits.Mul64(x2, 0xffffffff)
  var x83 uint64
  var x84 uint64
  x84, x83 = bits.Mul64(x2, 0xfffffffe00000000)
  var x85 uint64
  var x86 uint64
  x86, x85 = bits.Mul64(x2, 0xffffffff00000000)
  var x87 uint64
  var x88 uint64
  x88, x87 = bits.Mul64(x2, 0xffffffff00000001)
  var x89 uint64
  var x90 fiat_p224_uint1
  x89, x90 = fiat_p224_addcarryx_u64(x88, x85, 0x0)
  var x91 uint64
  var x92 fiat_p224_uint1
  x91, x92 = fiat_p224_addcarryx_u64(x86, x83, x90)
  var x93 uint64
  var x94 fiat_p224_uint1
  x93, x94 = fiat_p224_addcarryx_u64(x84, x81, x92)
  var x95 uint64
  var x96 fiat_p224_uint1
  x95, x96 = fiat_p224_addcarryx_u64(x75, x87, 0x0)
  var x97 uint64
  var x98 fiat_p224_uint1
  x97, x98 = fiat_p224_addcarryx_u64(x77, x89, x96)
  var x99 uint64
  var x100 fiat_p224_uint1
  x99, x100 = fiat_p224_addcarryx_u64(x79, x91, x98)
  var x101 uint64
  var x102 fiat_p224_uint1
  x101, x102 = fiat_p224_addcarryx_u64(((uint64(x80) + (uint64(x60) + (uint64(x52) + x40))) + (uint64(x72) + x64)), x93, x100)
  var x103 uint64
  _, x103 = bits.Mul64(x95, 0xffffffffffffffff)
  var x105 uint64
  var x106 uint64
  x106, x105 = bits.Mul64(x103, 0xffffffff)
  var x107 uint64
  var x108 uint64
  x108, x107 = bits.Mul64(x103, 0xffffffffffffffff)
  var x109 uint64
  var x110 uint64
  x110, x109 = bits.Mul64(x103, 0xffffffff00000000)
  var x111 uint64
  var x112 fiat_p224_uint1
  x111, x112 = fiat_p224_addcarryx_u64(x110, x107, 0x0)
  var x113 uint64
  var x114 fiat_p224_uint1
  x113, x114 = fiat_p224_addcarryx_u64(x108, x105, x112)
  var x116 fiat_p224_uint1
  _, x116 = fiat_p224_addcarryx_u64(x95, x103, 0x0)
  var x117 uint64
  var x118 fiat_p224_uint1
  x117, x118 = fiat_p224_addcarryx_u64(x97, x109, x116)
  var x119 uint64
  var x120 fiat_p224_uint1
  x119, x120 = fiat_p224_addcarryx_u64(x99, x111, x118)
  var x121 uint64
  var x122 fiat_p224_uint1
  x121, x122 = fiat_p224_addcarryx_u64(x101, x113, x120)
  var x123 uint64
  var x124 uint64
  x124, x123 = bits.Mul64(x3, 0xffffffff)
  var x125 uint64
  var x126 uint64
  x126, x125 = bits.Mul64(x3, 0xfffffffe00000000)
  var x127 uint64
  var x128 uint64
  x128, x127 = bits.Mul64(x3, 0xffffffff00000000)
  var x129 uint64
  var x130 uint64
  x130, x129 = bits.Mul64(x3, 0xffffffff00000001)
  var x131 uint64
  var x132 fiat_p224_uint1
  x131, x132 = fiat_p224_addcarryx_u64(x130, x127, 0x0)
  var x133 uint64
  var x134 fiat_p224_uint1
  x133, x134 = fiat_p224_addcarryx_u64(x128, x125, x132)
  var x135 uint64
  var x136 fiat_p224_uint1
  x135, x136 = fiat_p224_addcarryx_u64(x126, x123, x134)
  var x137 uint64
  var x138 fiat_p224_uint1
  x137, x138 = fiat_p224_addcarryx_u64(x117, x129, 0x0)
  var x139 uint64
  var x140 fiat_p224_uint1
  x139, x140 = fiat_p224_addcarryx_u64(x119, x131, x138)
  var x141 uint64
  var x142 fiat_p224_uint1
  x141, x142 = fiat_p224_addcarryx_u64(x121, x133, x140)
  var x143 uint64
  var x144 fiat_p224_uint1
  x143, x144 = fiat_p224_addcarryx_u64(((uint64(x122) + (uint64(x102) + (uint64(x94) + x82))) + (uint64(x114) + x106)), x135, x142)
  var x145 uint64
  _, x145 = bits.Mul64(x137, 0xffffffffffffffff)
  var x147 uint64
  var x148 uint64
  x148, x147 = bits.Mul64(x145, 0xffffffff)
  var x149 uint64
  var x150 uint64
  x150, x149 = bits.Mul64(x145, 0xffffffffffffffff)
  var x151 uint64
  var x152 uint64
  x152, x151 = bits.Mul64(x145, 0xffffffff00000000)
  var x153 uint64
  var x154 fiat_p224_uint1
  x153, x154 = fiat_p224_addcarryx_u64(x152, x149, 0x0)
  var x155 uint64
  var x156 fiat_p224_uint1
  x155, x156 = fiat_p224_addcarryx_u64(x150, x147, x154)
  var x158 fiat_p224_uint1
  _, x158 = fiat_p224_addcarryx_u64(x137, x145, 0x0)
  var x159 uint64
  var x160 fiat_p224_uint1
  x159, x160 = fiat_p224_addcarryx_u64(x139, x151, x158)
  var x161 uint64
  var x162 fiat_p224_uint1
  x161, x162 = fiat_p224_addcarryx_u64(x141, x153, x160)
  var x163 uint64
  var x164 fiat_p224_uint1
  x163, x164 = fiat_p224_addcarryx_u64(x143, x155, x162)
  var x165 uint64 = ((uint64(x164) + (uint64(x144) + (uint64(x136) + x124))) + (uint64(x156) + x148))
  var x166 uint64
  var x167 fiat_p224_uint1
  x166, x167 = fiat_p224_subborrowx_u64(x159, uint64(0x1), 0x0)
  var x168 uint64
  var x169 fiat_p224_uint1
  x168, x169 = fiat_p224_subborrowx_u64(x161, 0xffffffff00000000, x167)
  var x170 uint64
  var x171 fiat_p224_uint1
  x170, x171 = fiat_p224_subborrowx_u64(x163, 0xffffffffffffffff, x169)
  var x172 uint64
  var x173 fiat_p224_uint1
  x172, x173 = fiat_p224_subborrowx_u64(x165, 0xffffffff, x171)
  var x175 fiat_p224_uint1
  _, x175 = fiat_p224_subborrowx_u64(uint64(0x0), uint64(0x0), x173)
  var x176 uint64
  fiat_p224_cmovznz_u64(&x176, x175, x166, x159)
  var x177 uint64
  fiat_p224_cmovznz_u64(&x177, x175, x168, x161)
  var x178 uint64
  fiat_p224_cmovznz_u64(&x178, x175, x170, x163)
  var x179 uint64
  fiat_p224_cmovznz_u64(&x179, x175, x172, x165)
  out1[0] = x176
  out1[1] = x177
  out1[2] = x178
  out1[3] = x179
}

/*
 * The function fiat_p224_nonzero outputs a single non-zero word if the input is non-zero and zero otherwise.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   out1 = 0 ↔ eval (from_montgomery arg1) mod m = 0
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 * Output Bounds:
 *   out1: [0x0 ~> 0xffffffffffffffff]
 */
/*inline*/
func fiat_p224_nonzero(out1 *uint64, arg1 *[4]uint64) {
  var x1 uint64 = ((arg1[0]) | ((arg1[1]) | ((arg1[2]) | ((arg1[3]) | uint64(0x0)))))
  *out1 = x1
}

/*
 * The function fiat_p224_selectznz is a multi-limb conditional select.
 * Postconditions:
 *   eval out1 = (if arg1 = 0 then eval arg2 else eval arg3)
 *
 * Input Bounds:
 *   arg1: [0x0 ~> 0x1]
 *   arg2: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 *   arg3: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff]]
 */
/*inline*/
func fiat_p224_selectznz(out1 *[4]uint64, arg1 fiat_p224_uint1, arg2 *[4]uint64, arg3 *[4]uint64) {
  var x1 uint64
  fiat_p224_cmovznz_u64(&x1, arg1, (arg2[0]), (arg3[0]))
  var x2 uint64
  fiat_p224_cmovznz_u64(&x2, arg1, (arg2[1]), (arg3[1]))
  var x3 uint64
  fiat_p224_cmovznz_u64(&x3, arg1, (arg2[2]), (arg3[2]))
  var x4 uint64
  fiat_p224_cmovznz_u64(&x4, arg1, (arg2[3]), (arg3[3]))
  out1[0] = x1
  out1[1] = x2
  out1[2] = x3
  out1[3] = x4
}

/*
 * The function fiat_p224_to_bytes serializes a field element NOT in the Montgomery domain to bytes in little-endian order.
 * Preconditions:
 *   0 ≤ eval arg1 < m
 * Postconditions:
 *   out1 = map (λ x, ⌊((eval arg1 mod m) mod 2^(8 * (x + 1))) / 2^(8 * x)⌋) [0..27]
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
 */
/*inline*/
func fiat_p224_to_bytes(out1 *[28]uint8, arg1 *[4]uint64) {
  var x1 uint64 = (arg1[3])
  var x2 uint64 = (arg1[2])
  var x3 uint64 = (arg1[1])
  var x4 uint64 = (arg1[0])
  var x5 uint8 = (uint8(x4) & 0xff)
  var x6 uint64 = (x4 >> 8)
  var x7 uint8 = (uint8(x6) & 0xff)
  var x8 uint64 = (x6 >> 8)
  var x9 uint8 = (uint8(x8) & 0xff)
  var x10 uint64 = (x8 >> 8)
  var x11 uint8 = (uint8(x10) & 0xff)
  var x12 uint64 = (x10 >> 8)
  var x13 uint8 = (uint8(x12) & 0xff)
  var x14 uint64 = (x12 >> 8)
  var x15 uint8 = (uint8(x14) & 0xff)
  var x16 uint64 = (x14 >> 8)
  var x17 uint8 = (uint8(x16) & 0xff)
  var x18 uint8 = uint8((x16 >> 8))
  var x19 uint8 = (uint8(x3) & 0xff)
  var x20 uint64 = (x3 >> 8)
  var x21 uint8 = (uint8(x20) & 0xff)
  var x22 uint64 = (x20 >> 8)
  var x23 uint8 = (uint8(x22) & 0xff)
  var x24 uint64 = (x22 >> 8)
  var x25 uint8 = (uint8(x24) & 0xff)
  var x26 uint64 = (x24 >> 8)
  var x27 uint8 = (uint8(x26) & 0xff)
  var x28 uint64 = (x26 >> 8)
  var x29 uint8 = (uint8(x28) & 0xff)
  var x30 uint64 = (x28 >> 8)
  var x31 uint8 = (uint8(x30) & 0xff)
  var x32 uint8 = uint8((x30 >> 8))
  var x33 uint8 = (uint8(x2) & 0xff)
  var x34 uint64 = (x2 >> 8)
  var x35 uint8 = (uint8(x34) & 0xff)
  var x36 uint64 = (x34 >> 8)
  var x37 uint8 = (uint8(x36) & 0xff)
  var x38 uint64 = (x36 >> 8)
  var x39 uint8 = (uint8(x38) & 0xff)
  var x40 uint64 = (x38 >> 8)
  var x41 uint8 = (uint8(x40) & 0xff)
  var x42 uint64 = (x40 >> 8)
  var x43 uint8 = (uint8(x42) & 0xff)
  var x44 uint64 = (x42 >> 8)
  var x45 uint8 = (uint8(x44) & 0xff)
  var x46 uint8 = uint8((x44 >> 8))
  var x47 uint8 = (uint8(x1) & 0xff)
  var x48 uint64 = (x1 >> 8)
  var x49 uint8 = (uint8(x48) & 0xff)
  var x50 uint64 = (x48 >> 8)
  var x51 uint8 = (uint8(x50) & 0xff)
  var x52 uint8 = uint8((x50 >> 8))
  out1[0] = x5
  out1[1] = x7
  out1[2] = x9
  out1[3] = x11
  out1[4] = x13
  out1[5] = x15
  out1[6] = x17
  out1[7] = x18
  out1[8] = x19
  out1[9] = x21
  out1[10] = x23
  out1[11] = x25
  out1[12] = x27
  out1[13] = x29
  out1[14] = x31
  out1[15] = x32
  out1[16] = x33
  out1[17] = x35
  out1[18] = x37
  out1[19] = x39
  out1[20] = x41
  out1[21] = x43
  out1[22] = x45
  out1[23] = x46
  out1[24] = x47
  out1[25] = x49
  out1[26] = x51
  out1[27] = x52
}

/*
 * The function fiat_p224_from_bytes deserializes a field element NOT in the Montgomery domain from bytes in little-endian order.
 * Preconditions:
 *   0 ≤ bytes_eval arg1 < m
 * Postconditions:
 *   eval out1 mod m = bytes_eval arg1 mod m
 *   0 ≤ eval out1 < m
 *
 * Input Bounds:
 *   arg1: [[0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff], [0x0 ~> 0xff]]
 * Output Bounds:
 *   out1: [[0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffffffffffff], [0x0 ~> 0xffffffff]]
 */
/*inline*/
func fiat_p224_from_bytes(out1 *[4]uint64, arg1 *[28]uint8) {
  var x1 uint64 = (uint64((arg1[27])) << 24)
  var x2 uint64 = (uint64((arg1[26])) << 16)
  var x3 uint64 = (uint64((arg1[25])) << 8)
  var x4 uint8 = (arg1[24])
  var x5 uint64 = (uint64((arg1[23])) << 56)
  var x6 uint64 = (uint64((arg1[22])) << 48)
  var x7 uint64 = (uint64((arg1[21])) << 40)
  var x8 uint64 = (uint64((arg1[20])) << 32)
  var x9 uint64 = (uint64((arg1[19])) << 24)
  var x10 uint64 = (uint64((arg1[18])) << 16)
  var x11 uint64 = (uint64((arg1[17])) << 8)
  var x12 uint8 = (arg1[16])
  var x13 uint64 = (uint64((arg1[15])) << 56)
  var x14 uint64 = (uint64((arg1[14])) << 48)
  var x15 uint64 = (uint64((arg1[13])) << 40)
  var x16 uint64 = (uint64((arg1[12])) << 32)
  var x17 uint64 = (uint64((arg1[11])) << 24)
  var x18 uint64 = (uint64((arg1[10])) << 16)
  var x19 uint64 = (uint64((arg1[9])) << 8)
  var x20 uint8 = (arg1[8])
  var x21 uint64 = (uint64((arg1[7])) << 56)
  var x22 uint64 = (uint64((arg1[6])) << 48)
  var x23 uint64 = (uint64((arg1[5])) << 40)
  var x24 uint64 = (uint64((arg1[4])) << 32)
  var x25 uint64 = (uint64((arg1[3])) << 24)
  var x26 uint64 = (uint64((arg1[2])) << 16)
  var x27 uint64 = (uint64((arg1[1])) << 8)
  var x28 uint8 = (arg1[0])
  var x29 uint64 = (x27 + uint64(x28))
  var x30 uint64 = (x26 + x29)
  var x31 uint64 = (x25 + x30)
  var x32 uint64 = (x24 + x31)
  var x33 uint64 = (x23 + x32)
  var x34 uint64 = (x22 + x33)
  var x35 uint64 = (x21 + x34)
  var x36 uint64 = (x19 + uint64(x20))
  var x37 uint64 = (x18 + x36)
  var x38 uint64 = (x17 + x37)
  var x39 uint64 = (x16 + x38)
  var x40 uint64 = (x15 + x39)
  var x41 uint64 = (x14 + x40)
  var x42 uint64 = (x13 + x41)
  var x43 uint64 = (x11 + uint64(x12))
  var x44 uint64 = (x10 + x43)
  var x45 uint64 = (x9 + x44)
  var x46 uint64 = (x8 + x45)
  var x47 uint64 = (x7 + x46)
  var x48 uint64 = (x6 + x47)
  var x49 uint64 = (x5 + x48)
  var x50 uint64 = (x3 + uint64(x4))
  var x51 uint64 = (x2 + x50)
  var x52 uint64 = (x1 + x51)
  out1[0] = x35
  out1[1] = x42
  out1[2] = x49
  out1[3] = x52
}

